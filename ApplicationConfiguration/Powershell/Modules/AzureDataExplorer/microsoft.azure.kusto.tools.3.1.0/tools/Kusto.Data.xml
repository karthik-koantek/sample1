<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kusto.Data</name>
    </assembly>
    <members>
        <member name="T:Kusto.Data.Charting.DimensionalAutoPivot">
            <summary>
            Given a rectangular  data source (a <see cref="T:System.Data.DataTable" />), finds the
            "most interesting" pivot columns and returns them.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.HierarchyAutoPivot">
            <summary>
            An abstract base class for implementations of a hierarchy
            AutoPivot.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.HierarchyAutoPivot.IsInterestingAsHierarchy(System.Data.DataTable)">
            <summary>
            Determines if this data set is "interesting" to pivot as
            a hierarchy. This is the first method called on the interface,
            and it it returns false, no other method on the interface will be called.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.HierarchyAutoPivot.GetBanners">
            <summary>
            Returns an optional list of "banners" - lines with severity that are
            displayed to the user and provides helpful information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.HierarchyAutoPivot.GetNodeIdAndOptionallyParentNodeId(System.Data.DataRow)">
            <summary>
            Given a record, extract the activity and optionally the parent activity
            information out of it.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.HierarchyAutoPivot.AddInterestingProperties(Kusto.Data.Charting.TimePivotTreeNode)">
            <summary>
            Given a tree node generated by this class, add any interesting property
            there is to it.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.HierarchyAutoPivot.HierarchyAxis">
            <summary>
            A display string identifying which "axis" serves as the hierarchy axis.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TestActivityHierarchyAutoPivot">
            <summary>
            An implementation of <see cref="T:Kusto.Data.Charting.HierarchyAutoPivot" /> for testing purposes.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.KustoActivityHierarchyAutoPivot">
            <summary>
            Given a rectangular data source (a <see cref="T:System.Data.DataTable" />), determines
            if the data source contains Kusto activity traces in it and if so,
            returns the activity hierarchy.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.IfxOperationHierarchyAutoPivot">
            <summary>
            Given a rectangular data source (a <see cref="T:System.Data.DataTable" />), determines
            if the data source contains Kusto activity traces in it and if so,
            returns the activity hierarchy.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TimePivot">
            <summary>
            A time pivot transforms a data grid (a rectangular grid of cells, like <see cref="T:System.Data.DataTable" />)
            into a tree of nodes organized by a subset of the column values of the data grid,
            with the leaf nodes pointing to all rows in the data grid that hold values matching the
            column values represented by the lead nodes, organized by a <see cref="T:System.DateTime" /> column.

            For example, we might have a hierarchy in which Col1 is an ActivityId and Col2 is a ParentActivityId,
            and then ask the time pivot to produce a tree representing the parent/child relationships
            of the tree records by time.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivot.#ctor(System.Data.DataTable,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="data">The data to pivot. Mandatory and immutable.</param>
            <param name="timeColumnName">The <see cref="T:System.DateTime" /> column name to pivot by.
            This argument is optional; if null, the first column of this type in the data
            will be used.</param>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivot.TimeColumn">
            <summary>
            Gets the column in the data that is being used as the time pivot column.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivot.PivotBy(System.String)">
            <summary>
            Pivot the data by the specified column.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivot.PivotBy(System.String[])">
            <summary>
            Pivot the data by any number of columns.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivot.PivotBy(System.Func{System.Data.DataRow,Kusto.Data.Charting.TimePivot.NodeAndParentId})">
            <summary>
            Pivot the data using an external function that for each row,
            returns the corresponding node ID as well as the parent node's ID.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TimePivot.TimePivotProtoNode">
            <summary>
            Similar to <see cref="T:Kusto.Data.Charting.TimePivotTreeNode" />, but uses strings
            (that are a compound of name/value pairs) to do the "pointing".
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TimePivotTree">
            <summary>
            A time-pivot tree is a kind of view over tabular data
            (represented by a <see cref="T:System.Data.DataTable" /> whose records are grouped
            by their attributes (columns or calculated columns) into a tree
            form, with a specific attention to one column of tyep <see cref="T:System.DateTime" />
            that establishes the "time" axis of the tree.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTree.#ctor">
            <summary>
            Constructor (creates an empty tree).
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTree.AddOrGetChild(Kusto.Data.Charting.TimePivotTreeNode,System.String,System.String)">
            <summary>
            Gets a child node of the specified parent node, or creates one
            if it doesn't already exist.
            </summary>
            <remarks>The children of a tree node each has its own unique
            combination of name/value pairs.</remarks>
            <param name="parent">The parent node whose child we're after.</param>
            <param name="name">The name of the node.</param>
            <param name="value">The value of the node.</param>
            <returns>The parent node's child (newly-created or already-existing).</returns>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTree.Root">
            <summary>
            Get the root of the tree (a node that's empty except for
            the Children container).
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTree.PropagateHeatmapToParent">
            <summary>
            Gets or sets a property that determines if the heatmap of child nodes is
            automatically-propagated to parent nodes (etc.) or not. Off by default.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTree.Binner">
            <summary>
            Gets or sets the current binner.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTree.Visit(System.Action{Kusto.Data.Charting.TimePivotTreeNode},System.Boolean)">
            <summary>
            Visits all nodes in the tree and invokes the provided <paramref name="visitor" />
            action for each of them. If <paramref name="includingRoot" /> is true, also
            visits the root node.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TimePivotTreeNode">
            <summary>
            A node in a <see cref="T:Kusto.Data.Charting.TimePivot" />-constructed tree.
            </summary>
        </member>
        <member name="F:Kusto.Data.Charting.TimePivotTreeNode.m_children">
            <summary>
            Maps child "nodeId" to its actual node.
            The nodeId is a combination of the name and value properties
            of the child, and created by <see cref="M:Kusto.Data.Charting.TimePivotTree.CreateNodeId(System.String,System.String)" />.
            </summary>
        </member>
        <member name="F:Kusto.Data.Charting.TimePivotTreeNode.m_heatmap">
            <summary>
            A set of counters that count how many records have their
            timestamp values in each bin, as determined by m_owner.BinnedRange.
            Note that this member is modified whenever m_owner.BinnedRange
            is modified.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTreeNode.#ctor(Kusto.Data.Charting.TimePivotTree)">
            <summary>
            Constructor for the tree root.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTreeNode.AddOrGetChild(System.String,System.String)">
            <summary>
            Constructor/getter for the tree non-root elements.
            Do not invoke directly -- use the tree instead.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Tree">
            <summary>
            The tree that this node belongs to.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Parent">
            <summary>
            The parent of this node in the tree.
            Null if this is the root.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Name">
            <summary>
            Indicates the name of the "level" in the hierarchy.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Value">
            <summary>
            Indicates the value of the "level" in the hierarchy.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Children">
            <summary>
            The children of this node in the tree.
            Null if there are none.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Rows">
            <summary>
            The set of rows associated with this node.
            Null if there are none.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.RowsIds">
            <summary>
            The set of rows IDs associated with this node.
            Null if there are none.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Timestamps">
            <summary>
            The timestamps of the records in <see cref="P:Kusto.Data.Charting.TimePivotTreeNode.Rows" />.
            Null if there are none.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Properties">
            <summary>
            Additional properties for the node.
            Null if there are none.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.MinTimestamp">
            <summary>
            The minimum timestamp in <see cref="P:Kusto.Data.Charting.TimePivotTreeNode.Rows" /> (or default(DateTime) if empty).
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.MaxTimestamp">
            <summary>
            The maximum timestamp in <see cref="P:Kusto.Data.Charting.TimePivotTreeNode.Rows" /> (or default(DateTime) if empty).
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.MaxTimestampChildren">
            <summary>
            The maximum timestamp of <see cref="P:Kusto.Data.Charting.TimePivotTreeNode.Children" /> (or default(DateTime) if empty).
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.MinTimestampChildren">
            <summary>
            The minimum timestamp of <see cref="P:Kusto.Data.Charting.TimePivotTreeNode.Children" /> (or default(DateTime) if empty).
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.ReportedTimeRange">
            <summary>
            The "reported" time range of the node. This is different than the min/max
            timestamps, because sometimes there's some external indication of the time range
            that's not 100% consistent with the actual values of the records themselves,
            and both are useful for display purposes.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Category">
            <summary>
            A "category" for the node. This is an arbitrary string that affects how the
            node is visualized. Currently, we're using the colorization heuristics for
            result records (e.g., "Error" is red, "Fatal" is black, etc.)
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeNode.Heatmap">
            <summary>
            Gets the heatmap for this node: A count per timestamp bin (as set by the tree's
            m_binner property) of the number of rows.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.TimePivotTreeBinner">
            <summary>
            A utility class for <see cref="T:Kusto.Data.Charting.TimePivotTree" /> that calculates
            the heatmap of the data by timestamps.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTreeBinner.#ctor(Kusto.Data.Charting.TimePivotTree,System.Int32,System.TimeSpan)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTreeBinner.#ctor(Kusto.Data.Charting.TimePivotTree,Kusto.Data.Charting.TimePivotTreeBinner.DateTimeBinnedRangeFactory)">
            <summary>
            Constructor that gets an arbitrary factory to determine the binned range.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.TimePivotTreeBinner.BinnedRange">
            <summary>
            Gets the equally-spaced bins calculated from the data.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.TimePivotTreeBinner.GetHeatmap(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Gets the heatmap of the given set of timestamps. The heatmap consists
            of a counter per time bin counting how many timestamps in the input
            appear in that bin.
            </summary>
        </member>
        <member name="T:Kusto.Data.Charting.DateTimeBinnedRange">
            <summary>
            A "spec" for a finite range <see cref="T:System.DateTime" /> values,
            divided into a fixed number of equally-sized bins.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.DateTimeBinnedRange.Start">
            <summary>
            The minimal <see cref="T:System.DateTime" /> value of the first bin.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.DateTimeBinnedRange.BinSize">
            <summary>
            The size of each bin in the range.
            </summary>
        </member>
        <member name="P:Kusto.Data.Charting.DateTimeBinnedRange.NumBins">
            <summary>
            The number of bins in the range.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.DateTimeBinnedRange.GetHeatmap(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Returns a vector of counters, one per bin in the range, that count
            the number of "hits" in the input collection of <see cref="T:System.DateTime" /> values.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.DateTimeBinnedRange.MapTimestampToBin(System.DateTime)">
            <summary>
            Given a <see cref="T:System.DateTime" /> value, determines which bin in the range
            it is in. Returns -1 if the value falls outside of the range.
            </summary>
        </member>
        <member name="M:Kusto.Data.Charting.DateTimeBinnedRange.GetRowIdsByBin(System.Int32,Kusto.Data.Charting.TimePivotTreeNode)">
            <summary>
            Given a specific bin, returns all row IDs that are mapped to it.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ClientRequestProperties">
            <summary>
            This class is a POD used by client making requests
            to describe specific needs from the service executing
            the requests.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.m_options">
            <summary>
            A map of option name to option value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.m_parameters">
            <summary>
            A map of parameter name to parameter value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionRequestReadOnly">
            <summary>
            If specified, indicates that the request must not be able to write anything. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionRequestCalloutDisabled">
            <summary>
            If specified, indicates that the request cannot call-out to a user-provided service. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionRequestRemoteEntitiesDisabled">
            <summary>
            If specified, indicates that the request cannot access remote databases and clusters. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionRequestSandboxedExecutionDisabled">
            <summary>
            If specified, indicates that the request cannot invoke code in the sandbox. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionRequestExternalTableDisabled">
            <summary>
            If specified, indicates that the request cannot invoke code in the ExternalTable.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.QueryBinAutoAt">
            <summary>
            When evaluating the bin_auto() function, the start value to use. [String]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.QueryBinAutoSize">
            <summary>
            When evaluating the bin_auto() function, the bin size value to use. [String]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryDataScope">
            <summary>
            Controls the query's datascope -- whether the query applies to all data or just part of it. ['default', 'all', or 'hotcache']

            "default" means that the datascope is undefined at this level (eventually it means 'all' if not overridden by anything).
            "all" means that the datascope includes all data in the cluster.
            "hotcache" means that the datascope is all data that is categorized as "hot cache" in the caching policy.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryLanguage">
             <summary>
             Controls how the query text is to be interpreted. ['kql', 'csl' or 'sql']

             "kql" means that the query text is in the Kusto query language
             "csl" means that the query text is in the Kusto query language (alias to 'kql')
             "sql" means that the query text is in T-SQL.
             </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryNow">
            <summary>
            Overrides the datetime value returned by the now(0s) function. [DateTime]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryCursorCurrent">
            <summary>
            Overrides the cursor value returned by the cursor_current() or current_cursor() functions. [string]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryCursorAfterDefault">
            <summary>
            The default parameter value of the cursor_after() function when called without parameters. [string]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryCursorBeforeOrAtDefault">
            <summary>
            The default parameter value of the cursor_before_or_at() function when called without parameters. [string]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionValidatePermissions">
            <summary>
            Validates user's permissions to perform the query and doesn't run the query itself. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionAllowProjectionAndExtensionUnderSearch">
            <summary>
            The name of the Boolean option that enables running 'find' or 'search' over projected and extended tables as 'find' instead of 'union'
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionClientDumpHttpRequestResponse">
            <summary>
            Controls how Kusto.Data!Kusto.Data.Net.Client.RestClient2 dumps the HTTP request/response streams. ['none' or 'console' or 'trace'][Internal]

            Valid values for this property can be "default" (write headers only, to traces),
            "trace" (write both headers and body to traces),
            "console" (write to headers and body to traces and System.Console both),
            or "none" (write nothing).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDebugQueryPlanningDelayMsec">
            <summary>
            The amount of delay to introduce into the query planning phase, in msec. [Long][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDebugQueryExecutionEnaleExpiry">
            <summary>
            If set, query execution in the engine will delay until the expiry time. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoExecute">
            <summary>
            Suppresses query execution once the query plan is ready. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoStreaming">
            <summary>
            Suppresses result streaming by the service. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionPerfTrace">
            <summary>
            Enables the generation of a performance trace. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryTrace">
            <summary>
            Enables detailed tracing of the query plan. [Boolean][Internal]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionMaxEntitiesToUnion">
            <summary>
            Overrides the default maximum number of entities that can participate in a single union a query is allowed to produce. [Long]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionMaxMemoryConsumptionPerIterator">
            <summary>
            Overrides the default maximum amount of memory a query operator may allocate. [UInt64]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionMaxMemoryConsumptionPerQueryPerNode">
            <summary>
            Overrides the default maximum amount of memory a whole query may allocate. [UInt64]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionMaxOutputColumns">
            <summary>
            Overrides the default maximum number of columns a query is allowed to produce. [Long]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoRequestTimeout">
            <summary>
            Enables setting the request timeout to its maximum value. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionServerTimeout">
            <summary>
            Overrides the default request timeout. [TimeSpan]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoTruncation">
            <summary>
            Enables suppressing truncation of the query results returned to the caller. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionTruncationMaxRecords">
            <summary>
            Overrides the default maximum number of records a query is allowed to return to the caller (truncation). [Long]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionTruncationMaxSize">
            <summary>
            Overrides the dfefault maximum data size a query is allowed to return to the caller (truncation). [Long]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionTakeMaxRecords">
            <summary>
            Enables limiting query results to this number of records. [Long]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryFanoutThreadsPercent">
            <summary>
            The name of an Integer option that controls the percentage of threads on each node to fanout query execution to.
            Defaults to 100% (use all available threads).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDebugQueryFanoutThreadsPercentExternalData">
            <summary>
            The name of an Integer option that controls the percentage of threads on each node to fanout query execution to.
            Defaults to 100% (single partition per CPU core).
            Note that percentages larger than 100% are currently supported, as threads that read external data often incur less CPU load.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryFanoutNodesPercent">
            <summary>
            The name of an Integer option that controls the percentage of nodes on the cluster to fanout query execution to.
            Defaults to 100% (use all available nodes).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryDistributionNodesSpanSize">
            <summary>
            The name of the Integer option that controls
            the way sub-query merge behaves: the executing node will introduce an additional level in query hieararchy
            for each sub-group of nodes (sized of the group is set by this option)
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDebugQueryDisableExternalDataProjectionFusion">
            <summary>
            The name of the Boolean option that prevents fusing projection into ExternalData operator
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDeferPartialQueryFailures">
            <summary>
            If true, disables reporting partial query failures as part of the result set. [Boolean]

            Default (false or not set): report failures as soon as possible as part
            of the result stream.
            When the option is set: try to complete the result stream
            and report all partial failures as part of the "query status" result
            in the end.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization">
            <summary>
            Controls the serialization of 'dynamic' values in result sets. ['string', 'json', 'default']
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization_2">
            <summary>
            Controls the serialization of 'dynamic' string and null values in result sets. ['legacy', 'current', 'default' ]"
            If legacy - dynamic strings are serialized by their inferred type ("123" --&gt; 123) and dynamic nulls are serialized as empty strings.
            If current - serialization of dynamic strings is "faithful to origin" (a string remains a string), dynamic nulls are serialized as nulls.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionResultsProgressiveEnabled">
            <summary>
            If set, enables a progressive query stream. a Progressive query stream is a
            stream that includes more information about the query processing state (progress)
            and additionally, tells the client what to do with every data frame
            (e.g, replace the existing data with the new data frame or append the new data frame to the results so far)
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionProgressiveProgressReportPeriod">
            <summary>
            If <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResultsProgressiveEnabled" /> is set, serves as a hint to Kusto
            as to how often the client wishes to receive progress frames, i.e. frames that informs the client about the query progress
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionProgressiveQueryMinRowCountPerUpdate">
            <summary>
            If <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResultsProgressiveEnabled" /> is set, serves as a hint to Kusto
            as to how many records the client wishes to receive in each update.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionBlockSplittingEnabled">
            <summary>
            Enables splitting of sequence blocks after aggregation operator. [Boolean]
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionPushSelectionThroughAggregation">
            <summary>
            The name of the Boolean option that enables pushing selection through aggregation.
            Relevant case: T | summarize aggrfunc() by X | where X == "xxx".
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionAdminSuperSlackerMode">
            <summary>
            Controls the option if AdminService delegates executing the query to another node.
            (Default behavior is Admin executing the query)
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionQueryConsistency">
            <summary>
            Controls query consistency. ['strongconsistency' or 'normalconsistency' or 'weakconsistency']

            "strongconsistency" means that
            the query runs with a snapshot of the metadata that is at least as
            updated as when the query begun. "weakconsistency" or empty
            (it is the default) means that it is eventually consistent.
            "normalconsistency" means that the client's IP address and port
            are hashed so that queries over the same connection are
            consistent.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoPrejoin">
            <summary>
            The name of the Boolean option that controls whether
            pre-join filter optimization is disabled.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionNoParallelQueryOptimizer">
            <summary>
            The name of the Boolean option that controls whether
            parallelizations in the query optimizer are disabled.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionInjectSelectionBeforeExtensionOptimizer">
            <summary>
            The name of the Boolean option that controls whether
            dynamic extension optimization (injecting selection before extension with dynamic value) in the query optimizer are enabled.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.PushRangeOperatorToShardEngine">
            <summary>
            When true, pushes the range operator to the shard (v3) engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.PushExperimentalOperatorsToShardEngine">
            <summary>
            When true, pushes various experimental/work-in-progress operators and scalar functions to the shard (v3) engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.EnableShardQueryDiagnostics">
            <summary>
            Enables detailed diagnostics of the shard query (v3). When true, ShardAccessNode in the query plan
            will have an additional Diagnostics field with all the gory details of the prepared shard engine query.
            The intended use of this flag is mainly by the '.show queryplan' command.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ClientRequestProperties.OptionDebugShardQueryMultiplyShards">
            <summary>
            Multiplies the shards in the shard/extent hierarchy lists by the specified factor.
            Useful in micro-benchmarking.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>All options set to default values.</remarks>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.#ctor(System.Boolean)">
            <summary>
            A private constructor for creating an instance of this class
            without any fields set. The caller is reponsible for immediately
            setting values into <see cref="F:Kusto.Data.Common.ClientRequestProperties.m_options" />, <see cref="F:Kusto.Data.Common.ClientRequestProperties.m_parameters" />,
            and <see cref="P:Kusto.Data.Common.ClientRequestProperties.ClientRequestId" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.CloneTo(Kusto.Data.Common.ClientRequestProperties,System.Boolean)">
            <summary>
            Clones this object into another object.
            </summary>
            <param name="dest">The target object to clone the data to.</param>
            <param name="secureClone">If set, no security-related data is cloned.</param>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.Clone(System.Boolean)">
            <summary>
            Clones this object and return the clone.
            </summary>
            <param name="secureClone">If set, no security-related data is cloned.</param>
            <returns>A clone of this object.</returns>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Constuctor with some specific options set.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.FromJsonString(System.String)">
            <summary>
            Deserialization from a JSON string
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.PrincipalIdentity">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.ClientRequestId">
            <summary>
            If set, a string that the service will use internally in all traces
            for correlation purposes. Usually this is the caller's activity ID
            and is unique per call to Kusto.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.SecurityToken">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.AuthorizationScheme">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.RequestHostName">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.LocalClusterName">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.Application">
            <summary>
            Used to specify the application name.
            This property is being assigned with the optional Http header called x-ms-app.
            That property is used for tracing and can be used as an extra condition for deciding if a principal should be blocked.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ClientRequestProperties.User">
            <summary>
            Used to specify the user name.
            This property is being assigned with the optional Http header called x-ms-user.
            That property is used for tracing and can be used as an extra condition for deciding if a principal should be blocked.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.GetOptionValueOrDefault``1(System.String,``0)">
            <summary>
            Gets an option's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.GetOptionValueOrThrowIfInvalid``1(System.String,``0)">
            <summary>
            Gets an option's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.ClearOption(System.String)">
            <summary>
            Clears option's value
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetOption(System.String,System.Object)">
            <summary>
            Sets an option's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.HasOption(System.String)">
            <summary>
            Checks if an option is specified.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.ClearParameter(System.String)">
            <summary>
            Clears parameter's value
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.String)">
            <summary>
            Sets a string parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.DateTime)">
            <summary>
            Sets a datetime parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.TimeSpan)">
            <summary>
            Sets a timespan parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.Boolean)">
            <summary>
            Sets a boolean parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.Int32)">
            <summary>
            Sets an integer parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.Int64)">
            <summary>
            Sets a long parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.Guid)">
            <summary>
            Sets a guid parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SetParameter(System.String,System.Double)">
            <summary>
            Sets a double parameter's value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.HasParameter(System.String)">
            <summary>
            Checks if an parameter is specified.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.IsOptionEnabled(Kusto.Data.Common.ClientRequestProperties,System.String)">
            <summary>
            Safely check whether some option is enabled.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestProperties.SafeGetOptionValueOrDefault``1(Kusto.Data.Common.ClientRequestProperties,System.String,``0)">
            <summary>
            Safely retrieves the value of the property, or some default.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ClientRequestPropertiesExtensions">
            <summary>
            Extension methods for <see cref="T:Kusto.Data.Common.ClientRequestProperties" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestPropertiesExtensions.ToJsonString(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Safe serialization to a JSON string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestPropertiesExtensions.ToJson(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Safe serialization to a JObject value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestPropertiesExtensions.SafeToTraceString(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Generate string for tracing with secrets scrubbed (can be invoked on null instances safely)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ClientRequestPropertiesExtensions.SafeExternalize(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Make ClientRequestProperties object safe for forwarding outside of the cluster
            (for cross-cluster queries)
            Clean-out sensitive information.
            </summary>
            <param name="props">Properites to be cleaned. Can be null</param>
            <returns>New or old properties object safe for external use</returns>
        </member>
        <member name="M:Kusto.Data.Common.TableSchema.GetMissingSchema(Kusto.Data.Common.TableSchema)">
            <summary>
            Retuns a subset from "schema" parameter -
            only columns that are missed in this
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Common.FunctionParameterSchema">
            <summary>
            Represents a single parameter to a stored function.
            The parameter can be of scalar type or tabular.
            It can have a default value (if scalar type).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.FunctionParameterSchema.Columns">
            <summary>
            If non-null, indicates that this function parameter is tabular,
            and holds the columns of the table.
            Otherwise, this function paramter is scalar.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.FunctionParameterSchema.FromScalar(System.String,System.String,System.String,System.String)">
            <summary>
            Creates an instance of this class representing a scalar function paramter.
            </summary>
            <param name="name">The name of the function paramter.</param>
            <param name="type">The .NET type of the function parameter.</param>
            <param name="cslType">The CSL type of the function parameter.</param>
            <param name="cslDefaultValue">An optional CSL literal representing the default value of the function parameter.</param>
            <returns>A new instance of this class representing a scalar function parameter.</returns>
        </member>
        <member name="M:Kusto.Data.Common.FunctionParameterSchema.FromTabular(System.String,System.Collections.Generic.IEnumerable{Kusto.Data.Common.ColumnSchema})">
            <summary>
            Creates an instance of this class representing a tabular function parameter.
            </summary>
            <param name="name">The name of the function parameter.</param>
            <param name="attributes">The attributes of the tabular function parameter.</param>
            <returns>A new instance of this class representing a tabular function parameter.</returns>
        </member>
        <member name="M:Kusto.Data.Common.FunctionParameterSchema.#ctor">
            <summary>
            Empty constructor used for JSON deserialization.
            Do not use.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslAsyncExecution.ExecuteAsyncControlCommand(Kusto.Data.Common.ICslAdminProvider,System.String,System.String,System.TimeSpan,System.TimeSpan,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Executes an async command, and then wait for it to complete
            with some timeout.
            </summary>
            <param name="admin"></param>
            <param name="databaseName"></param>
            <param name="command"></param>
            <param name="timeout">Timeout after which a <see cref="T:System.TimeoutException" /> is thrown.
            If zero, attempt once and return immediately.
            If negative (including Timeout.InfiniteTimeSpan), await potentially forever.</param>
            <param name="properties">session properties for the command</param>
            <param name="pollingInterval">Period of time to wait between consecutive polls for operation status.</param>
            <returns>The information returned from the completed command.</returns>
        </member>
        <member name="T:Kusto.Data.Common.CslAsyncExecutor">
            <summary>
            A class that executes an async command and waits for it to complete.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslAsyncExecutor.#ctor(Kusto.Data.Common.ICslAdminProvider,System.Data.IDataReader,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Constructor
            </summary>
            <param name="pendingOperation">The result of the pending operation; see <see cref="T:Kusto.Data.PendingOperationResult" />.</param>
            <param name="admin">An admin provider to be used to poll for the operation's status.</param>
            <param name="properties">Request properties</param>
        </member>
        <member name="M:Kusto.Data.Common.CslAsyncExecutor.#ctor(Kusto.Data.Common.ICslAdminProvider,System.Guid,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Constructor
            </summary>
            <param name="operationId">The pending operation ID.</param>
            <param name="admin">An admin provider to be used to poll for the operation's status.</param>
            <param name="properties">Request properties</param>
        </member>
        <member name="M:Kusto.Data.Common.CslAsyncExecutor.Await(System.TimeSpan,System.TimeSpan)">
            <summary>
            Awaits completion of the operation until some timeout
            </summary>
            <param name="timeout">Timeout after which a <see cref="T:System.TimeoutException" /> is thrown.
            If zero, attempt once and return immediately.
            If negative (including Timeout.InfiniteTimeSpan), await potentially forever.</param>
            <param name="pollingInterval">Period of time to wait between consecutive polls for operation status.</param>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedEntityType">
            <summary>
            Extensions for enum EntityType
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedActivity">
            <summary>
            Utility class to help manipulate the activity context
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ExtendedActivity.DetermineClientRequestId(System.String,System.String,System.Boolean)">
            <summary>
            Determine the ClientRequestId to use according to the following order:
            1. If the provided parameter is already a non-whitespace ClientRequestId, use that.
            2. Otherwise, if the current activity context already has a non-whitespace ClientRequestId, use that.
            3. Else, come up with a new ClientRequestId, optionally prefixed by the provided prefix
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ExtendedActivity.DetermineClientRequestId(Kusto.Data.Common.ClientRequestProperties,System.String,System.Boolean)">
            <summary>
            Determine the ClientRequestId to use according to the following order:
            1. If the provided properties object already has a non-whitespace ClientRequestId, use that.
            2. Otherwise, if the current activity context already has a non-whitespace ClientRequestId, use that.
            3. Else, come up with a new ClientRequestId, optionally prefixed by the provided prefix
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedDataSourceFormat">
            <summary>
            Extensions for enum DataSourceFormat
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ExtendedDataSourceFormat.IsTabularFormat(Kusto.Data.Common.DataSourceFormat)">
            <summary>
            Return true for data types that have a tabular schema.
            This means they need a Mapping to be provided.
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Common.ICslAdminProvider">
            <summary>
            An interface for Admin operations
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslAdminProvider.ExecuteControlCommand(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL control command and return the results.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslAdminProvider.ExecuteControlCommandAsync(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously execute a CSL control command and return the results.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslAdminProvider.ExecuteControlCommand(System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL control command and return the results.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ICslAdminProvider.DefaultDatabaseName">
            <summary>
            Gets or sets the name of the default database --
            the database operations will act upon if there's
            no database specified.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslAdminMultiProvider.ExecuteControlCommand(System.String,System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL control command and return the results.
            </summary>
            <param name="hostAddress">The URI of the service.</param>
            <param name="databaseName">The default database name to connect to.</param>
            <param name="command">The text of the CSL control command.</param>
            <param name="addr">Reserved. Use null.</param>
            <param name="properties">Optional additional properties.</param>
            <returns>The results produced by the control command.</returns>
        </member>
        <member name="M:Kusto.Data.Common.ICslAdminMultiProvider.ExecuteControlCommandAsync(System.String,System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously execute a CSL control command and return the results.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ICslQueryProvider">
            <summary>
            An interface implemented by agents that know how to run a CSL query
            on top of some data.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ICslQueryProvider.DefaultDatabaseName">
            <summary>
            Gets or sets the name of the default database --
            the database operations will act upon if there's
            no database specified.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryProvider.ExecuteQuery(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Executes a CSL query and returns the results.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryProvider.ExecuteQueryAsync(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously executes a CSL query and returns the results.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryProvider.ExecuteQuery(System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL query and return the results. Uses the DefaultDatabaseName.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryProvider.ExecuteQuery(System.String)">
            <summary>
            Execute a CSL query and return the results. Uses the DefaultDatabaseName and a default set of default ClientRequestProperties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryProvider.ExecuteQueryV2Async(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL query and return an enumerator over <see cref="T:Kusto.Data.Results.ProgressiveDataSetFrame" />.
            These frames, when combined, form the resulting DataSet.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ICslQueryKustoDataStreamMultiProvider">
            <summary>
            When implemented by a derived class, provides the ability to run a CSL query and get back the results as a KustoDataStream.
            NOTE: Internal to the Kusto team.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryKustoDataStreamMultiProvider.ExecuteQueryAsKustoDataStream(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Executes a CSL query and returns the results as a KustoDataStream.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryKustoDataStreamMultiProvider.ExecuteQueryAsKustoDataStreamAsync(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously executes a CSL query and returns the results as a KustoDataStream.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryMultiProvider.ExecuteQuery(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL query and return the results.
            </summary>
            <param name="hostAddress">The URI of the service.</param>
            <param name="databaseName">The default database name to connect to.</param>
            <param name="query">The text of the CSL query.</param>
            <param name="properties">Optional additional properties.</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryMultiProvider.ExecuteQueryAsync(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously execute a CSL query and return the results.
            </summary>
            <param name="hostAddress">The URI of the service.</param>
            <param name="databaseName">The default database name to connect to.</param>
            <param name="query">The text of the CSL query.</param>
            <param name="properties">Optional additional properties.</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Common.ICslQueryMultiProvider.ExecuteQueryAsProgressiveDataSetAsync(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a CSL query and return an enumerator over <see cref="T:Kusto.Data.Results.ProgressiveDataSetFrame" />.
            These frames, when combined, form the resulting DataSet.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedIngestionErrorCode">
            <summary>
            Extensions for enum IngestionErrorCode
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ColumnMapping">
            <summary>
            Data class that describes the Mapping setting for .ingest command
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ColumnMapping.ColumnName">
            <summary>
            The column name (in the Kusto table)
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.ColumnMapping.ColumnType">
            <summary>
            The column's data type in the table (CSL term), if empty, the current column data type will be used.
            If column doesn't exist, a new one will be created (alter table) with this data type if valid
            Note: this should be removed. Remains only for backward compatibility.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.ColumnMapping.Properties">
            <summary>
            Property bag for all the mapping properties
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CsvColumnMapping">
            <summary>
            Data class that describes the CsvMapping setting for .ingest command
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CsvColumnMapping.ColumnName">
            <summary>
            The column name (in the Kusto table)
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CsvColumnMapping.CslDataType">
            <summary>
            The column's data type in the table (CSL term), if empty, the current column data type will be used.
            If column doesn't exist, a new one will be created (alter table) with this data type, if empty
            StorageDataType.StringBuffer will be used.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CsvColumnMapping.CsvColumnDataType">
            <summary>
            The CSV column dataType (not in use for now)
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CsvColumnMapping.Ordinal">
            <summary>
            CSV ordinal number
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CsvColumnMapping.ConstValue">
            <summary>
            This column has a const value (the Ordinal field is ignored, if this value is not null or empty)
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.JsonColumnMapping">
            <summary>
            Data class that describes the JsonMapping setting for .ingest command
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.JsonColumnMapping.ColumnName">
            <summary>
            The column name (in the Kusto table)
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.JsonColumnMapping.JsonPath">
            <summary>
            The JsonPath to the desired porperty in the JSON document
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.JsonColumnMapping.ColumnType">
            <summary>
            The column's data type in the table (CSL term), if empty, the current column data type will be used.
            If column doesn't exist, a new one will be created (alter table) with this data type if valid
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.JsonColumnMapping.TransformationMethod">
            <summary>
            Optional transformation method
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.AvroColumnMapping">
            <summary>
            Data class that describes the AvroColumnMapping setting for .ingest command
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.AvroColumnMapping.ColumnName">
            <summary>
            The column name (in the Kusto table)
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.AvroColumnMapping.FieldName">
            <summary>
            The JsonPath to the desired porperty in the AVRO document
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.AvroColumnMapping.ColumnType">
            <summary>
            The column's data type in the table (CSL term), if empty, the current column data type will be used.
            If column doesn't exist, a new one will be created (alter table) with this data type if valid
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ColumnMappingConverter">
            <summary>
            Used when deserialization "old" format mapping into "new" format.
            This convertor can also read the "new" format
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ColumnMappingConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write the object in a format that can be deserialized to IEnumerable of column mapping
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.IRedirectProvider">
            <summary>
            An interface for Redirect commands
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.IRedirectProvider.ExecuteRedirectCommand(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a redirect command
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.IRedirectProvider.ExecuteRedirectCommandAsync(Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Asynchronously execute a redirect command.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.IStreamingIngestProvider">
            <summary>
            An interface implemented by agents that know how to stream data into kusto.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.IStreamingIngestProvider.ExecuteStreamIngest(System.String,System.String,System.IO.Stream,Kusto.Data.Common.ClientRequestProperties,Kusto.Data.Common.DataSourceFormat,System.Boolean,System.String)">
            <summary>
            Execute stream ingest.
            </summary>
            <param name="databaseName">The database name to connect to.</param>
            <param name="tableName">The table name.</param>
            <param name="stream">The stream to ingest.</param>
            <param name="properties">Optional additional properties.</param>
            <param name="streamFormat">The stream format. (Supported formats: see documentation) </param>
            <param name="compressStream">Indicates if the stream should be compressed</param>
            <param name="mappingName">Indicated the mapping related to the ingested stream</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Common.IStreamingIngestProvider.ExecuteStreamIngestAsync(System.String,System.String,System.IO.Stream,Kusto.Data.Common.ClientRequestProperties,Kusto.Data.Common.DataSourceFormat,System.Boolean,System.String,System.Boolean)">
            <summary>
            Execute stream ingest asynchronously.
            </summary>
            <param name="databaseName">The database name to connect to.</param>
            <param name="tableName">The table name.</param>
            <param name="stream">The stream to ingest.</param>
            <param name="properties">Optional additional properties.</param>
            <param name="streamFormat">The stream format. (Supported formats: see documentation) </param>
            <param name="compressStream">Indicates if the stream should be compressed</param>
            <param name="mappingName">Indicates the json / csv mapping reference (a name of the stored mapping) to be used for reading the ingested stream</param>
            <param name="leaveRequestStreamOpen">Indicates whether to dispose the request stream after ingestion or not</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Common.IStreamingIngestProvider.ExecuteStreamIngest(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties,Kusto.Data.Common.DataSourceFormat,System.Boolean,System.String)">
            <summary>
            Execute stream ingest.
            </summary>
            <param name="databaseName">The database name to connect to.</param>
            <param name="tableName">The table name.</param>
            <param name="data">The ingestion data string.</param>
            <param name="properties">Optional additional properties.</param>
            <param name="streamFormat">The stream format. (Supported formats: see documentation) </param>
            <param name="compressStream">Indicates if the stream should be compressed when pased to a service</param>
            <param name="mappingName">Indicated the mapping related to the ingested stream</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Common.IStreamingIngestProvider.ExecuteStreamIngestAsync(System.String,System.String,System.String,Kusto.Data.Common.ClientRequestProperties,Kusto.Data.Common.DataSourceFormat,System.Boolean,System.String)">
            <summary>
            Execute stream ingest.
            </summary>
            <param name="databaseName">The database name to connect to.</param>
            <param name="tableName">The table name.</param>
            <param name="data">The ingestion data string.</param>
            <param name="properties">Optional additional properties.</param>
            <param name="streamFormat">The stream format. (Supported formats: see documentation) </param>
            <param name="compressStream">Indicates if the stream should be compressed when pased to a service</param>
            <param name="mappingName">Indicated the mapping related to the ingested stream</param>
            <returns>The results produced by the query.</returns>
        </member>
        <member name="T:Kusto.Data.Common.Repl">
            <summary>
            Read-Eval-Print Loop
            </summary>
            <remarks>This class is not thread-safe. One must not invoke multiple methods
            in parallel on this class.</remarks>
        </member>
        <member name="T:Kusto.Data.Common.ReplPermissions">
            <summary>
            A bunch of permissions that can be given to, or denied from,
            <see cref="T:Kusto.Data.Common.Repl" />.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ServiceRequestProperties">
            <summary>
            An extension on top of <see cref="T:Kusto.Data.Common.ClientRequestProperties" /> that
            conveys service-internal information.
            </summary>
            <remarks>While this class is exposed publicly in the Kusto.Data
            assemlby, its use is strictly internal. Clients that attempt
            to set properties defined by this class when making requests
            from the service will have such requests denied.</remarks>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Constructor that takes request options and query parameters.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.#ctor(System.Boolean)">
            <summary>
            A private constructor for creating an instance of this class
            without any fields set.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.CloneTo(Kusto.Data.Common.ClientRequestProperties,System.Boolean)">
            <summary>
            Clones this object into another object.
            </summary>
            <param name="dest">The target object to clone the data to.</param>
            <param name="secureClone">If set, no security-related data is cloned.</param>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.Clone(System.Boolean)">
            <summary>
            Clones this object and return the clone.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.ServiceRequestProperties.FromJsonString(System.String)">
            <summary>
            Deserialization from a JSON string
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.EntityType">
            <summary>
            Kusto Entity Types.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Cluster">
            <summary>
            Cluster entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Database">
            <summary>
            Database entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Table">
            <summary>
            Table entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Column">
            <summary>
            Column entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.Function">
            <summary>
            Function entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.EntityType.ExternalTable">
            <summary>
            External table entity type
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.IngestionErrorCode">
            <summary>
            The ingestion error code returned by a Kusto service.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Unknown">
            <summary>
            Unknown error occurred
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_LowMemoryCondition">
            <summary>
            Low memory condition.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_WrongNumberOfFields">
            <summary>
            Wrong number of fields.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_InputStreamTooLarge">
            <summary>
            Input stream/record/field too large.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_NoDataToIngest">
            <summary>
            No data streams to ingest
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_ClosingQuoteMissing">
            <summary>
            Invalid csv format - closing quote missing.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Stream_DynamicPropertyBagTooLarge">
            <summary>
            The combined size of the property bag's distinct keys is getting too large.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_SourceNotFound">
            <summary>
            Failed to download source from Azure storage - source not found
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_AccessConditionNotSatisfied">
            <summary>
            Failed to download source from Azure storage - access condition not satisfied
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_Forbidden">
            <summary>
            Failed to download source from Azure storage - access forbidden
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_AccountNotFound">
            <summary>
            Failed to download source from Azure storage - account not found
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_BadRequest">
            <summary>
            Failed to download source from Azure storage - bad request
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_NotTransient">
            <summary>
            Failed to download source from Azure storage - not transient error
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.Download_UnknownError">
            <summary>
            Failed to download source from Azure storage - unknown error
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_QuerySchemaDoesNotMatchTableSchema">
            <summary>
            Failed to invoke update policy. Query schema does not match table schema
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_FailedDescendantTransaction">
            <summary>
            Failed to invoke update policy. Failed descendant transactional update policy
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_IngestionError">
            <summary>
            Failed to invoke update policy. Ingestion Error occurred
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_UnknownError">
            <summary>
            Failed to invoke update policy. Unknown error occurred
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_MissingJsonMappingtFailure">
            <summary>
            Json pattern was not ingested with jsonMapping parameter
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidOrEmptyBlob">
            <summary>
            Blob is invalid or empty zip archive
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_DatabaseNotExist">
            <summary>
            Database does not exist
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_TableNotExist">
            <summary>
            Table does not exist
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidKustoIdentityToken">
            <summary>
            Invalid kusto identity token
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_UriMissingSas">
            <summary>
            Blob path without SAS from unknown blob storage
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_FileTooLarge">
            <summary>
            File too large
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_NoValidResponseFromEngine">
            <summary>
            No valid reply from ingest command
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_TableAccessDenied">
            <summary>
            Access to table is denied
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_MessageExhausted">
            <summary>
            Message is exhausted
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.General_BadRequest">
            <summary>
            Bad request
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.General_InternalServerError">
            <summary>
            Internal server error occurred
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_Cyclic_Update_Not_Allowed">
            <summary>
            Failed to invoke update policy. Cyclic update is not allowed
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.UpdatePolicy_Transactional_Not_Allowed_In_Streaming_Ingestion">
            <summary>
            Failed to invoke update policy. Transactional update policy is not allowed in streaming ingestion
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidCsvMapping">
            <summary>
            Failed to parse csv mapping.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidMappingReference">
            <summary>
            Invalid mapping reference.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_MappingReferenceWasNotFound">
            <summary>
            Mapping reference wasn't found.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidJsonMapping">
            <summary>
            Failed to parse json mapping.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_FormatNotSupported">
            <summary>
            Format is not supported
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_DuplicateMapping">
            <summary>
            Ingestion properties contains ingestion mapping and ingestion mapping reference.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_CorruptedMessage">
            <summary>
            Message is corrupted
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InconsistentMapping">
            <summary>
            Inconsistent ingestion mapping
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_SyntaxError">
            <summary>
            Syntax error
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_InvalidOrEmptyTableName">
            <summary>
            Table name is empty or invalid
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_EmptyDatabaseName">
            <summary>
            Database name is empty
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_EmptyTenantIdentifier">
            <summary>
            TenantIdentifier is empty
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_EmptyMappingReference">
            <summary>
            MappingReference is empty
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.General_AbandonedIngestion">
            <summary>
            Abandoned ingestion.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.General_ThrottledIngestion">
            <summary>
            Throttled ingestion.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.General_TransientSchemaMismatch">
            <summary>
            Schema of target table at start time doesn't match the one at commit time.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.IngestionErrorCode.BadRequest_DatabaseAccessDenied">
            <summary>
            Access to database is denied
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.IngestionErrorCategory">
            <summary>
            The IngestionErrorCode Category.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedIngestionErrorCategory">
            <summary>
            Extensions for enum IngestionErrorCategory
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.DatabaseShowFlavor">
            <summary>
            Flavor of DatabaseShow command
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedDatabaseShowFlavor">
            <summary>
            Extensions for enum DatabaseShowFlavor
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.DataRecoverability">
            <summary>
            Recoverability of data after soft deletion
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedDataRecoverability">
            <summary>
            Extensions for enum DataRecoverability
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.DataSourceFormat">
            <summary>
            Data formats supported for Kusto ingestion.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.csv">
            <summary>
            Comma-separated value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.tsv">
            <summary>
            Tab-separated value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.scsv">
            <summary>
            Semicolon-separated value (the unique Azure Storage log format).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.sohsv">
            <summary>
            Start-Of-Header (CTRL-A)-separated value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.psv">
            <summary>
            Pipeline-separated value (used by Cosmos).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.txt">
            <summary>
            Each record is a line and has just one field.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.raw">
            <summary>
            Whole stream is a single record with a single field.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.tsve">
            <summary>
            Tab-separated value with '\' escaping character.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.json">
            <summary>
            Data is in a JSON format, each line is record with a single JSON value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.singlejson">
            <summary>
            Data stream holds a single JSON value -- newlines are regular whitespace.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.multijson">
            <summary>
            The data stream is a concatenation of JSON documents (property bags all).
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.avro">
            <summary>
            Avro format.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.DataSourceFormat.parquet">
            <summary>
            Parquet format
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.TransformationMethod">
            <summary>
            Transformation methods (NOTE: This type is mirrored by the type CsvFromJsonStream_TransformationMethod (defined in UtilsEnums.tt). Make sure that the two are always mirrors of each other.)
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.None">
            <summary>
            Comma-separated value.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.PropertyBagArrayToDictionary">
            <summary>
            Property bag array to dictionary.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.SourceLocation">
            <summary>
            Source location.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.SourceLineNumber">
            <summary>
            Source line number.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.GetPathElement">
            <summary>
            Get path element.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.TransformationMethod.UnknownMethod">
            <summary>
            Unknown method.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedTransformationMethod">
            <summary>
            Extensions for enum TransformationMethod
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.DataPartitioningFunction">
            <summary>
            Supported functions used for partitioning of data
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.ExtendedDataPartitioningFunction">
            <summary>
            Extensions for enum DataPartitioningFunction
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslCommandGenerator">
            <summary>
            A generator for CSL commands, to abstract the language details from code
            that needs to send commands.
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CslCommandGenerator.CommandResults">
            <summary>
            The name of the symbols that is set to the admin command results
            when the command is followed by a semicolon and a query.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.CombineCommandWithFollowupQuery(System.String,System.String)">
            <summary>
            Combines an admin command with a follow-up query. The way to combine is specified
            by the first non-whitespace character in <paramref name="query" />. If it is a pipe (|)
            character, then the admin command's results are piped. If it is a semicolon (;),
            then the admin command's results are stored in the symbol $command_results and
            the query then follows.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateEchoCommand(Kusto.Cloud.Platform.Utils.TraceVerbosity,System.String)">
            <summary>
            Creates a command to echo a message on all nodes, and in addition to echo it to a trace
            with the given verbosity.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTraceResults(System.String,System.String)">
            <summary>
            Generate a command to run a query or a command and record its first resultset
            by emitting a trace, prefixed by a given string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateCreateTempStorageCommand">
            <summary>
            Creates a command to create a new temp storage
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateCreateIngestionsStatusTableCommand">
            <summary>
            Creates a command to create a table that will be used to report ingestions status
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateRowStoreTransactionsShowCommand">
            <summary>
            Creates a command to get the status of all rowstore transactions.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateRowStoreSealsShowCommand(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean,System.Boolean)">
            <summary>
            Creates a command to get the status of all rowstore seal transactions for a given list of rowstoreKeys.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateRowStoreSealsShowCommand(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to get the status of all rowstore seal transactions for a given rowstoreKey.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateOperationsShowCommand">
            <summary>
            Creates a command to get the status of all operations.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateOperationsShowCommand(System.Guid)">
            <summary>
            Creates a command to get the status of a single operation.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateOperationDetailsShowCommand(System.Guid)">
            <summary>
            Creates a command to get the persisted details of a single operation.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateOperationsShowCommand(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates a command to get the status of the given operations.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateOperationsShowCommand(Kusto.Data.AdminTrackableOperationKind,System.DateTime,System.String)">
            <summary>
            Creates a command to get the status of an operation.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseJournalShowCommand(System.String)">
            <summary>
            Creates a command to show the journal of a database
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateClusterJournalShowCommand">
            <summary>
            Creates a command to show the journal of the cluster
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateJournalShowCommand">
            <summary>
            Creates a command to show the entire journal of the cluster (will filter according to authorization)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateInProgressOperationsShowCommand">
            <summary>
            Creates a command to get operations which are in progress.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateCommandsShowCommand">
            <summary>
            Creates a command to get the status of all commands.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateCommandsAndQueriesShowCommand">
            <summary>
            Creates a command to get the status of all commands and queries.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionFailuresShowCommand(System.Guid)">
            <summary>
            Creates a command to get the list of failed ingestions for specific operation.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionFailuresShowCommand(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates a command to get the list of failed ingestions of the given operations.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionFailuresShowCommand(System.Guid,System.Boolean)">
            <summary>
            Creates a command to get the list of failed ingestions for specific operation, filtering by whether or not the failures originate from an Update Policy.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionFailuresShowCommandWithoutPermanentPostIngestionFailures(System.Guid)">
            <summary>
            Creates a command to get the list of failed ingestions for a specific operation, filtering out failures which are Permanent and originate from update policy
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionFailuresShowCommand">
            <summary>
            Creates a command to get the list of failed ingestions.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateCapacityShowCommand(Kusto.Data.CapacityShowVirtualResourceKind)">
            <summary>
            Creates a command to get the capacity of a virtual resource (e.g. 'ingestions', 'extentsmerge')
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateVersionShowCommand">
            <summary>
            Creates a command to get the cluster's version information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateClusterShowCommand">
            <summary>
            Creates a command to get the cluster's nodes
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateClusterMonitoringShowCommand">
            <summary>
            Creates a command to get the cluster's monitoring information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDiagnosticsShowCommand">
            <summary>
            Creates a command to get diagnostics information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowUnallocatedSubscriptionsCommand">
            <summary>
            Creates a command to get unallocated subscriptions information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePolicySoftRetentionViolationsShowCommand(System.String)">
            <summary>
            Creates a command to get soft retention policy violations information
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDiagnosticsShowHardDeleteRetentionViolationsCommand(System.String)">
            <summary>
            Creates a command to get hard retention violations information
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetTraceCommand(Kusto.Cloud.Platform.Utils.TraceVerbosity)">
            <summary>
            Creates a command that sets trace level
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateQueryCancelCommand(System.String,System.String)">
            <summary>
            Creates a command to cancel a running query.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateQueriesShowCommand">
            <summary>
            Creates a command to get the queries history of the current user.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionSourceContainersGetCommand">
            <summary>
            Creates a command that will create if needed and return the source containers.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateKustoIdentityTokenGetCommand">
            <summary>
            Create command that create kusto token
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseCreateCommand(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command to define a database based on:
                the database name,
                an optional flag for using persistent storage,
                an optional list of persistent paths for the database,
                and an optional flag that instructs the command to not fail if the database already exists.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseCreateCommand(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to define a database based on:
                the database name,
                a persistent path which will be used for the database's metadata,
                a persistent path which will be used for the database's data (extents),
                and an optional flag that instructs the command to not fail if the database already exists.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseCreateCommand(System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to define a database based on:
                the database name,
                a single persistent path which will be used for both the database's metadata, as well as data,
                and an optional flag that instructs the command to not fail if the database already exists.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseAttachCommand(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to create a new database based on an existing persistent storage.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseDetachCommand(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to detach a database (including its tables and data) from the cluster.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseSaveCommand(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to save a database to the specified persistent storage.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseMetadataContainerAlterCommand(System.String,System.String)">
            <summary>
            Generate a command to alter the metadata container of the given database.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="metadataContainerPath">The persistent path which will be used for the database's metadata</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSchemaShowCommand(System.Boolean)">
            <summary>
            Creates a command to get cluster schema information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabasesSchemaShowCommand(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command to get databases schema information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabasesSchemaShowCommandWithVersion(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean)">
            <summary>
            Creates a command to get databases schema information, given that the version provided
            is earlier than the current version.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableSchemaShowAsJsonCommand(System.String)">
            <summary>
            Creates a command to get table schema information.
            </summary>
            <param name="tableName">Name of the table to retrieve schema for</param>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableSchemaShowAsJsonCommand(System.String,System.String)">
            <summary>
            Creates a command to get table schema information.
            </summary>
            <param name="tableName">Name of the table to retrieve schema for (wildcards allowed)</param>
            <param name="databaseName">Name of the database (wildcards allowed)</param>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseShowCommand(System.Boolean)">
            <summary>
            Creates a command to show properties of the context database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabasesShowCommand(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command to show the databases in the cluster.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseAccessSetCommand(System.String,System.Boolean)">
            <summary>
            Generate a command to set the access mode of the given database.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="isReadOnly">If true readonly mode, if false readwrite mode</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateClusterExtentsShowCommand(Kusto.Data.ExtentsShowFilteringRuntimePolicy)">
            <summary>
            Creates a command to get the metadata for all of the extents in the cluster.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateClusterExtentsShowCommand(System.Boolean)">
            <summary>
            Creates a command to get the metadata for all of the extents in the cluster.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentsShowCommand(System.String,Kusto.Data.ExtentsShowFilteringRuntimePolicy)">
            <summary>
            Creates a command to get extents metadata for all extents in the specified database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentsShowCommand(System.String,System.Boolean)">
            <summary>
            Creates a command to get extents metadata for all extents in the specified database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabasesExtentsShowCommand(System.Collections.Generic.IEnumerable{System.String},Kusto.Data.ExtentsShowFilteringRuntimePolicy)">
            <summary>
            Creates a command to get extents metadata for all extents in the specified databases.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesExtentsShowCommand(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command to get extents metadata for all extents in the specified tables.
            Example: .show tables (T1, T2) extents where tags has 'tag1' and tags contains 'tag2'
            <param name="tableNames">The names of the tables.</param>
            <param name="tagsEqualityFilters">Optional equality tags filters ('has').</param>
            <param name="tagsSubstringFilters">Optional case-insensitive substring tags filters ('contains').</param>
            <param name="tagsEqualityNegativeFilters">Optional equality tags negative filters ('!has').</param>
            <param name="tagsSubstringNegativeFilters">Optional case-insensitive substring tags negative filters ('!contains').</param>
            <param name="hotOnly">Optional boolean indicating whether or not to include only extents which are in the hot-cache.</param>
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableExtentsShowCommand(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command to get extents metadata for all extents in the specified table.
            Example: .show table T extents where tags has 'tag1' and tags contains 'tag2'
            <param name="tableName">The name of the table.</param>
            <param name="tagsEqualityFilters">Optional equality tags filters ('has').</param>
            <param name="tagsSubstringFilters">Optional case-insensitive substring tags filters ('contains').</param>
            <param name="tagsEqualityNegativeFilters">Optional equality tags negative filters ('!has').</param>
            <param name="tagsSubstringNegativeFilters">Optional case-insensitive substring tags negative filters ('!contains').</param>
            <param name="hotOnly">Optional boolean indicating whether or not to include only extents which are in the hot-cache.</param>
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentShowCommand(System.Guid)">
            <summary>
            Creates a command to get extent description by extent ID.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDetailsShowCommand(System.Guid)">
            <summary>
            Creates a command to get extent details by extent ID.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentDropCommand(System.Guid,System.String)">
            <summary>
            Creates a command that will drop the specified extent from the specified table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentDropCommand(System.Guid)">
            <summary>
            Creates a command that will drop the specified extent.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropCommand(System.Collections.Generic.IEnumerable{System.Guid},System.String)">
            <summary>
            Creates a command that will drop the specified extents from the specified table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropCommand(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates a command that will drop the specified extent.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropCommand(System.String)">
            <summary>
            Creates a command that will drop all extents from the specified table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropOlderThanCommand(System.TimeSpan,System.String)">
            <summary>
            Creates a command that will drop extents older than given time period in given table (defaults to all tables).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsTrimAndDropOlderThanCommand(Kusto.Data.Common.CslCommandGenerator.DataTrimKind,System.Int64,System.TimeSpan,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command that will drop extents older than given time period in given table (defaults to all tables).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropByQueryCommand(System.String,System.Boolean)">
            <summary>
            Creates a command that will drop all extents which are returned by the specified query
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsDropByTagsCommand(System.String,System.String[])">
            <summary>
            Creates a command that will drop all extents which are tagged with the specified tags
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsAttachByMetadataCommand(System.String,System.Boolean,System.String)">
            <summary>
            Creates a command that attach extents to the specified table, given a query to obtain the extents' metadata.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentTagsDropCommand(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a command that will drop tags from extents in the given table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentTagsDropByQueryCommand(System.String,System.Boolean)">
            <summary>
            Creates a command that will drop tags from extents based on the provided query, that returns a resultset with at least one column called 'ExtentId' and one column called 'Tags'.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentTagsDropByRegexCommand(System.String,System.String,System.Boolean)">
            <summary>
            Creates a command that will drop tags which match the provided regex from extents in the specified table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentTagsDropBySubstringCommand(System.String,System.String,System.Boolean)">
            <summary>
            Creates a command that will drop tags which contain the specific substring from extents in the specified table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentTagsAlterByQueryCommand(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
            <summary>
            Creates a command that will alter tags for extents based on the provided query, that returns a resultset with at least one column called 'ExtentId'.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsMoveCommand(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates a command that will move extents from the source table to the destination table. In case extent IDs are not specified - moves all extents.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsMoveByQueryCommand(System.String,System.String,System.Boolean)">
            <summary>
            Creates a command that will move extents based on the provided query, that returns a resultset with at least one column called 'ExtentId', to the destination table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsReplaceByQueriesCommand(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a command that will replace extents based on the provided queries:
            The first query returns a resultset with at least one column called 'ExtentId', specifying which extents should be dropped from the destination table.
            The second query returns a resultset with at least one column called 'ExtentId', specifying which extents should be moved to the destination table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsMergeCommand(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will merge given extents into one.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsPartitionCommand(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Creates a command that will partition the source extents according to the table's data partitioning policy (if exists)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsPartitionCommand(System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.Guid},System.String,Kusto.Data.Common.DataPartitioningFunction,System.Int32,System.String)">
            <summary>
            Creates a command that will partition the source extents according to the provided data partitioning arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsRebuildByQueryCommand(System.String,System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will rebuild a given extent by query
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentsRebuildByQueryCommand(System.String,System.Collections.Generic.List{System.Guid},System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will rebuild multiple extents by query
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableCreateCommand(System.String,System.Type,System.Boolean)">
            <summary>
            Creates a command to define a table based on the table name and a .NET type
            that describes the fields of a row in the table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableCreateCommand(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type}},System.Boolean)">
            <summary>
            Creates a command to define a table based on the table name and the list
            of field name/.NET Type pairs.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableCreateCommand(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean)">
            <summary>
            Creates a command to define a table based on the table name and the list
            of field name/.NET type pairs. (The .NET type is indicated by a string; for example: "System.Double".)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesCreateCommand(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}}}},System.Boolean)">
            <summary>
            Creates a command to define one or more tables based on the table name and the list
            of field name/.NET type pairs. (The .NET type is indicated by a string; for example: "System.Double".)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableDropCommand(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to drop a table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableDropUndoCommand(System.String,System.String,System.String)">
            <summary>
            Creates a command to undo drop table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesDropCommand(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Creates a command to drop several tables.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecordsWhatIfPurgedCommand(System.String,System.String,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Creates a command to purge records from a table, what-if purge mode.
            <paramref name="predicate" /> can be a single predicate or a json serialized array of multiple predicates
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecordsWhatIfRetainCommand(System.String,System.String,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Creates a command to purge records from a table, what-if retain mode
            <paramref name="predicate" /> can be a single predicate or a json serialized array of multiple predicates
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecordsWhatIfStatisticsCommand(System.String,System.String,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Creates a command to purge records from a table, what-if statistics mode
            <paramref name="predicate" /> can be a single predicate or a json serialized array of multiple predicates
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecordsWhatIfInfoCommand(System.String,System.String,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Creates a command to purge records from a table, what-if info mode
            <paramref name="predicate" /> can be a single predicate or a json serialized array of multiple predicates
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecords(System.String,System.String,System.Boolean,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Creates a command to purge records from a table
            <paramref name="predicate" /> can be a single predicate or a json serialized array of multiple predicates
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableRecordsCommand(System.String,System.String,System.Boolean,System.String,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Creates a command to purge records from a table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GeneratePurgeTableCommand(System.String)">
            <summary>
            Create a command to purge an entire table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableIngestPullCommand(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a command to ingest data into a table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableIngestPullCommand(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a command to ingest data into a table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableIngestPullCommand(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a command to ingest data into a table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableSetCommand(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will create a table based on the results of the specified data query command, metadata query command, or a metadata control command.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableAppendCommand(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will append data to the specified table based on the results of the specified data query command, metadata query command, or a metadata control command.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableSetOrAppendCommand(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will create a table (or append data to an existing table) based on the results of the specified data query command, metadata query command, or a metadata control command.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableSetOrReplaceCommand(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a command that will append data to the specified table based on the results of the specified data query command, metadata query command, or a metadata control command.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableRenameCommand(System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to rename a table
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesRenameCommand(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            Creates a command to rename several tables
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTableShowCommand(System.String)">
            <summary>
            Creates a command to show the table's statistics based on the table name.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesShowCommand">
            <summary>
            Creates a command to show the tables of the database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesShowDetailsCommand">
            <summary>
            Creates a command to show the tables details of the database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateTablesShowIncludeExternalsCommand">
            <summary>
            Creates a command to show the talble of the database, including external tables
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExtentContainersShowCommand(System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a command to show the extent containers of the database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerAddCommand(System.String,System.String,System.TimeSpan)">
            <summary>
            Creates a command to add an extent container with the given root URL to the given database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerRecycleCommand(System.String,System.Guid)">
            <summary>
            Creates a command to recycle an existing extent container with the given ID in the given database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerRecycleCommand(System.String,System.Int32)">
            <summary>
            Creates a command to recycle existing extent containers in the given database, which have been created before the given hours ago parameter.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerDropCommand(System.String)">
            <summary>
            Creates a command to drop existing extent containers in the given database, which have moved to SoftDeleted state before the given hours ago parameter.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerDropCommand(System.String,System.Guid)">
            <summary>
            Creates a command to drop an extent container with the given ID in the given database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDatabaseExtentContainerSetStateCommand(System.String,System.Guid,System.String)">
            <summary>
            Creates a command to set the state the extent container with the given ID in the given database to the given state.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterAggregatorStorageAccountsCommand(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will set storage accounts to the aggregator.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterMergeAggregatorStorageAccountsCommand(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will add storage accounts to the aggregator.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmDropAggregatorStorageAccountsCommand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will drop storage accounts to the aggregator.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterAddDataObtainerCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a command that will add a data obtainer to an existing DM service.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterObtainerQueuesCommand(System.String,Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will set storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterMergeObtainerQueuesCommand(System.String,Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will add storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmDropObtainerQueuesCommand(System.String,Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will drop storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterObtainersQueuesCommand(System.Collections.Generic.IEnumerable{System.String},Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will set storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterMergeObtainersQueuesCommand(System.Collections.Generic.IEnumerable{System.String},Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will add storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmDropObtainersQueuesCommand(System.Collections.Generic.IEnumerable{System.String},Kusto.Data.IngestionQueueType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a command that will drop storage accounts to the obtainer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAddOrAlterDataIngestionSourceCommand(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a command that will add or alter data ingestion source settings of the given source name.
            Connection type can be: eventhub, eventgrid.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterDropDataObtainerCommand(System.String)">
            <summary>
            Creates commands that will drop a data obtainer from an existing DM service
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterDropDataObtainersCommand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates commands that will drop data obtainers from an existing DM service
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmPauseCommand(System.String)">
            <summary>
            Creates a command that will pause the DM obtainer(s).
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterSettingsAlterCommand(System.String,System.String,System.String)">
            <summary>
            Creates a command that will alter DM configuration settings.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterSettingsAlterMergeCommand(System.String,System.String)">
            <summary>
            Creates a command that will alter-merge DM configuration settings.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterSettingsShowCommand(System.String,System.String)">
            <summary>
            Creates a command that will show DM configuration settings.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateBridgeClusterSettingsShowCommand(System.String,System.Int32)">
            <summary>
            Creates a command that will show bridge configuration settings.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmClusterInitializeConfigurationCommand(System.String,System.String)">
            <summary>
            Creates a command that will initialize a DM service's configuration.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDmAlterMergeGenevaIngestionSourceCommand(System.String,System.String,System.String)">
            <summary>
            Creates a command that will update a DM geneva source settings.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExportToSqlDatabaseCommand(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Create command to export qurey result to an table in SQL database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExportCommand(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Boolean,System.String,System.Int32,System.String,System.String,Kusto.Data.Common.CslCommandGenerator.IncludeHeaders,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a command to export data to blob storage.
            </summary>
            <param name="storgeBlobUriList">A collection of one or more blob container URIs. One container will be chosen randomly for each blob file.</param>
            <param name="query">The query whose results should be exported.</param>
            <param name="async">Whether or not to invoke the command in an async manner.</param>
            <param name="compressed">Whether or not to use GZ compression on the created blobs.</param>
            <param name="compressionType">The type of compression to use. csv/json/tsv support gzip only. Parquet supports gzip and snappy.</param>
            <param name="sizeLimitInBytes">A limitation on the file size in bytes (before compression). If not specified, the default value is 100MB. The maximum value is 1GB.</param>
            <param name="namePrefix">A constant prefix for the file names. If not specified, a GUID will be used. The suffix will be "_" + ordinalnumber.</param>
            <param name="format">The format of the output files (CSV, TSV, JSON, PARQUET).</param>
            <param name="includeHeaders">Controls generation of column headers. Valid values are: None, FirstFile and All.
            None - suppresses column headers and is the default;
            FirstFile - only emits headers into the first file of a multi-file result set;
            All - puts header information into every file.
            This parameter is not required for JSON export format - if mentioned, parameter will be ignored.</param>
            <param name="encoding">Controls the encoding of the output file. Supported encodings: UTF8NoBOM, UTF8BOM. Default: UTF8NoBOM</param>
            <param name="isDistributed">Whether or not to run export in a distributed fashion (null lets the system choose).</param>
            <param name="persistCommandResults">Whether to persist the command results. This is the default on async export commands. Set to false if you're not interested</param>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateEncodingPolicyAlterCommand(System.String,System.String)">
            <summary>
            Creates a command to show the encoding policy on the entity name.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateIngestionQueuesGetCommand(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a command to get the available ingestion queues.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowPrincipalRolesCommand">
            <summary>
            Creates a command that shows the roles of the current principal.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowPrincipalRolesCommand(System.String)">
            <summary>
            Creates a command that shows the roles of the given principal.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowDatabasePrincipalRolesCommand(System.String)">
            <summary>
            Creates a command that shows the roles of the current principal on the given database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowDatabasePrincipalRolesCommand(System.String,System.String)">
            <summary>
            Creates a command that shows the roles of the given principal on the given database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowTablePrincipalRolesCommand(System.String)">
            <summary>
            Creates a command that shows the roles of the current principal on the given table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowTablePrincipalRolesCommand(System.String,System.String)">
            <summary>
            Creates a command that shows the roles of the given principal on the given table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowFunctionPrincipalRolesCommand(System.String)">
            <summary>
            Creates a command that shows the roles of the current principal on the given function.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateShowFunctionPrincipalRolesCommand(System.String,System.String)">
            <summary>
            Creates a command that shows the roles of the given principal on the given function.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetOrAddClusterAuthorizedPrincipalsCommand(Kusto.Data.Common.CslCommandGenerator.AuthorizationRole,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set cluster authorized access principals.
            </summary>
            <param name="authorizationRole">admin, user or read-only</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the input validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the principals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetOrAddClusterAuthorizedPrincipalsCommand(System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set cluster authorized access principals.
            </summary>
            <param name="isAdmin">if true, admin. if false, user</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the input validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the pricipals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetOrAddTableAdminsCommand(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set table admins.
            </summary>
            <param name="tableName">The table name</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the input validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the pricipals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetOrAddTableIngestorsCommand(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set table ingestors.
            </summary>
            <param name="tableName">The table name</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the input validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the pricipals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetOrAddFunctionAdminsCommand(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
            <summary>
            Generates a command to set function admins.
            </summary>
            <param name="functionName">The function name</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the principals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetDatabaseAuthorizedPrincipalsCommandForSecurityGroups(System.String,Kusto.Data.Common.CslCommandGenerator.AuthorizationRole,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set database authorized access principals with the provided SGs.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="authorizationRole">admin, user or read-only</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="aadSecurityGroupNames">the list of groups</param>
            <param name="skipValidation">the the inpuit validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the pricipals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetDatabaseAuthorizedPrincipalsCommandForSecurityGroups(System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set database authorized access principals with the provided SGs.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="isAdmin">if true, admin. if false, user</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="aadSecurityGroupNames">the list of groups</param>
            <param name="skipValidation">the the inpuit validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the pricipals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetDatabaseAuthorizedPrincipalsCommand(System.String,Kusto.Data.Common.CslCommandGenerator.AuthorizationRole,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set database authorized access principals.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="authorizationRole">admin, user or read-only</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the the inpuit validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the principals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateSetDatabaseAuthorizedPrincipalsCommand(System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,System.Boolean)">
            <summary>
            Generates a command to set database authorized access principals.
            </summary>
            <param name="databaseName">The database name</param>
            <param name="isAdmin">if true, admin. if false, user</param>
            <param name="isAdd">if true, add if false, set</param>
            <param name="principals">the list of groups</param>
            <param name="skipValidation">the input validation against AAD</param>
            <param name="skipResults">if true don't perform show command at the end</param>
            <param name="notes">Notes of the principals.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateAddClusterBlockedPrincipalsCommand(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Generates a command that adds a cluster blocked principal.
            </summary>
            <param name="principal">The principal to add or remove from the BlockedPrincipals list</param>
            <param name="application">The application name associated with the principal</param>
            <param name="user">The user name associated with the principal </param>
            <param name="blockPeriod">The period of time which the principal should be blocked for</param>
            <param name="reason">The reason for blocking that principal</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateDropClusterBlockedPrincipalsCommand(System.String,System.String,System.String)">
            <summary>
            Generates a command that drops a cluster blocked principal.
            </summary>
            <param name="principal">The principal to add or remove from the BlockedPrincipals list</param>
            <param name="application">The application name associated with the principal</param>
            <param name="user">The user name associated with the principal </param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingCreateCommand(Kusto.Data.Ingestion.IngestionMappingKind,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to create a mapping to external table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingCreateOrAlterCommand(Kusto.Data.Ingestion.IngestionMappingKind,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to create or alter a mapping to external table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingAlterCommand(Kusto.Data.Ingestion.IngestionMappingKind,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a command to alter a mapping to external table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingDropCommand(System.String,System.String,Kusto.Data.Ingestion.IngestionMappingKind)">
            <summary>
            Creates a command to drop a mapping from external table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingsShowCommand(Kusto.Data.Ingestion.IngestionMappingKind,System.String)">
            <summary>
            Creates a command to get the status of all mapping of external table.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslCommandGenerator.GenerateExternalTableMappingShowCommand(Kusto.Data.Ingestion.IngestionMappingKind,System.String,System.String)">
            <summary>
            Creates a command to get the status of external table mapping.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslSyntaxGenerator">
            <summary>
            Support for generating CSL (Kusto) queries and control commands
            using code-generation.
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.SchemaOptions.BlockUnsupportedTypes">
            <summary>
            Schema with unsupported types should not be used
            </summary>
        </member>
        <member name="F:Kusto.Data.Common.SchemaOptions.AllowUnsupportedTypes">
            <summary>
            Schema should be used as is
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslTableSchema">
            <summary>
            An immutable class representing the schema part of a table in CSL terms.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromClr(System.Type,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema takes on the public field names and types
            from a .NET type that denotes a single row.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromClr(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type}},System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema takes on the field names and .NET type
            in the input.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromClr(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema takes on the field names and .NET type names
            in the input.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromCsl(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema takes on the field names and CSL type names
            in the input.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromColumns(System.Collections.Generic.IEnumerable{Kusto.Data.Common.CslColumnSchema})">
            <summary>
            Creates a new instance of the type. The schema takes on the CSL columns
            in the input.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromDataTable(System.Data.DataTable,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is copied from an existing <see cref="T:System.Data.DataTable" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTableSchema.FromSchemaTable(System.Data.DataTable,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is taken from a <see cref="T:System.Data.DataTable" />
            that represents the schema table (this is what GetSchemaTable() returns, not the actual data table itself!).
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslColumnSchema">
            <summary>
            An immutable class representing a single column of a table in CSL terms.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.FromClr(System.Reflection.FieldInfo,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is determined by the name and CLR
            type of a CLR FieldInfo object.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.FromClr(System.String,System.Type,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is determined by the name
            and CLR type corresponding to the CSL type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.FromClr(System.String,System.String,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is determined by the name
            and CLR type name corresponding to the CSL type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.FromCsl(System.String,System.String,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is determined by the name
            and the CSL type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.FromDataColumn(System.Data.DataColumn,System.Boolean,Kusto.Data.Common.SchemaOptions)">
            <summary>
            Creates a new instance of the type. The schema is copied from an existing <see cref="T:System.Data.DataColumn" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslColumnSchema.GetPlainName">
            <summary>
            Returns columns de-normalized plain column name
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Common.CslType">
            <summary>
            A representation of CSL's scalar type.
            </summary>
            <remarks>
            This class is a glorified enum -- the class defines a restricted number of
            instances, each one is immutable and represents a single CSL type.
            A few of these instances are not even public, because we don't want customers
            to directly use these types.
            </remarks>
        </member>
        <member name="T:Kusto.Data.Common.CslType.CslScalarTypeCode">
            <summary>
            KEEP_IN_SYNC:StorageDataType
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CslType.IsNumeric">
            <summary>
            Is this a numeric type?
            </summary>
        </member>
        <member name="P:Kusto.Data.Common.CslType.IsSummable">
            <summary>
            Is this a summable type?
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.FromClrType(System.Type)">
            <summary>
            Returns the CSL type corresponding to the given CLR type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.FromClrType(System.String)">
            <summary>
            Returns the CSL type corresponding to the given CLR type name.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.FromCslType(System.String)">
            <summary>
            Given a string that describes the type in CSL, return the instance of this type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.FormatStringLiteralString(System.String)">
            <summary>
            Get the CSL literal string that represents the specified string value.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCslTypeFromClrType(System.Type)">
            <summary>
            Returns the CSL type name of the specified CLR type.
            </summary>
            <param name="clrValueType"></param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCslLiteral(System.String,System.String)">
            <summary>
            Create literal from a value string for the specified CSL type.
            </summary>
            <param name="cslTypeString"></param>
            <param name="valueString"></param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCslLiteralFromClrValueString(System.String,System.String)">
            <summary>
            Returns the CSL literal representation of the specified value of the specified CLR type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetDataValueLiteralString(System.Object)">
            <summary>
            Returns the CSL literal for whose type is our type, and whose value is <paramref name="dataValue" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.AsDataValueLiteralString(System.Object)">
            <summary>
            Returns the CSL literal for whose type is our type, and whose value is <paramref name="dataValue" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCorrespondingClrType">
            <summary>
            Returns the corresponding CLR type
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCorrespondingSqlType">
            <summary>
            Returns the corresponding SQL type
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCslTypeNameFromClrType(System.Type)">
            <summary>
            Returns the "canonical" CSL type name corresponding to a CLR type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.GetCslTypeNameFromClrType(System.String)">
            <summary>
            Returns the "canonical" CSL type name corresponding to a CLR type.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslType.ToString">
            <summary>
            Returns the "canonical" type name.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslLiteralParseHelper">
            <summary>
            A small helper class for parsing CSL literals that are formatted like:
            `name` WS `(` *string-or-value* `)`
            with possible whitespace around.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.MatchWhiteSpace(System.String,System.Int32@)">
            <summary>
            Attempts to match whitespace characters in the string <paramref name="s" />
            at position <paramref name="i" />. If there's a match, returns true and advances i
            to the next position following the WhiteSpace run (potentially to the end of the string).
            Otherwise, returns false.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.Match(System.String,System.Char,System.Int32@)">
            <summary>
            Attempts to match the character <paramref name="c" /> in the string <paramref name="s" />
            at position <paramref name="i" />. If there's a match, returns true and advances i
            (potentially to the end of the string). Otherwise, returns false.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.Match(System.String,System.String,System.Int32@)">
            <summary>
            Attempts to match the substring <paramref name="ss" /> in the string <paramref name="s" />
            at position <paramref name="i" />. If there's a match, returns true and advances i
            (potentially to the end of the string). Otherwise, returns false.
            </summary>
            <param name="s"></param>
            <param name="ss"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.TryMatch(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Attempts to match <paramref name="literal" /> with the format `type` `(` ... `)`.
            Returns true if successful, and sets <paramref name="startIndex" />/<paramref name="length" />
            to the start position of length of the `...` part.
            </summary>
            <remarks>We don't handle <paramref name="type" /> strings with prefix or suffix whitespace.</remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.TryParseNoNull``1(System.String,``0@,``0,Kusto.Data.Common.CslLiteralParseHelper.TryParse{``0})">
            <summary>
            Parses a string as a CSL literal of the programmatic type <typeparam name="TResult" />.
            Null literals and invalid formats return false.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.Parse``1(System.String,Kusto.Data.Common.CslLiteralParseHelper.TryParse{``0},System.String)">
            <summary>
            Parses a string as a CSL literal of type <paramref name="literalType" /> and programmatic type <typeparam name="TResult" />.
            Invalid formats result in an exception.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLiteralParseHelper.ParseNoNull``1(System.String,Kusto.Data.Common.CslLiteralParseHelper.TryParse{``0},System.String)">
            <summary>
            Parses a string as a CSL literal of type <paramref name="literalType" /> and programmatic type <typeparam name="TResult" />.
            Null literals or invalid formats result in an exception.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.CslBoolLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'bool'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>true</item>
            <item>false</item>
            <item>bool(true)</item>
            <item>bool(false)</item>
            <item>bool(null)</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslBoolLiteral.TryParse(System.String,System.Nullable{System.Boolean}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'bool' literal. See <see cref="T:Kusto.Data.Common.CslDateTimeLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslIntLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'int'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>A sequence of decimal digits, optionally prefixed by a unary plus or minus sign.</item>
            <item>A sequence of hexadecimal digits, prefixed by a "0x" or "0X".</item>
            <item>A string beginning by either "int(" or "integer(" or "int32(" (case sensitive),
            ending by a ")", and in between either type of previous strings or "null".</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslIntLiteral.AsCslString(System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Writes <paramref name="value" /> as a CSL literal of type `int`.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslIntLiteral.TryParse(System.String,System.Nullable{System.Int32}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'datetime' literal. See <see cref="T:Kusto.Data.Common.CslLongLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslDateTimeLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'datetime'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>The prefix "datetime(" followed by the value or null, and then ")".</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslDateTimeLiteral.TryParse(System.String,System.Nullable{System.DateTime}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'datetime' literal. See <see cref="T:Kusto.Data.Common.CslDateTimeLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslTimeSpanLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'timespan'
            and produce such literals.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslTimeSpanLiteral.TryParse(System.String,System.Nullable{System.TimeSpan}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'timespan' literal. See <see cref="T:Kusto.Data.Common.CslTimeSpanLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslLongLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'long'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>A sequence of decimal digits, optionally prefixed by a unary plus or minus sign.</item>
            <item>A sequence of hexadecimal digits, prefixed by a "0x" or "0X".</item>
            <item>A string beginning by either "int64(" or "long(" (case sensitive),
            ending by a ")", and in between either type of previous strings or "null".</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslLongLiteral.AsCslString(System.Nullable{System.Int64},System.Boolean,System.Boolean)">
            <summary>
            Writes <paramref name="value" /> as a CSL literal of type `long`.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslLongLiteral.TryParse(System.String,System.Nullable{System.Int64}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'long' literal. See <see cref="T:Kusto.Data.Common.CslLongLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslRealLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'real'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>A real number.</item>
            <item>A real number wrapped by "real("/")".</item>
            <item>A real number wrapped by "double("/")".</item>
            <item>The constants "real(null)", "real(nan)", "real(+inf)", "real(-inf)", and their "double("/")" parallels.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslRealLiteral.AsCslString(System.Nullable{System.Double},System.Boolean)">
            <summary>
            Writes <paramref name="value" /> as a CSL literal of type `real`.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslRealLiteral.TryParse(System.String,System.Nullable{System.Double}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'real' literal. See <see cref="T:Kusto.Data.Common.CslRealLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslDecimalLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'decimal'
            and produce such literals.
            </summary>
            <remarks>
            The following formats are supported:
            <list type="bullet">
            <item>A decimal number.</item>
            <item>A decimal number wrapped by "real("/")".</item>
            <item>A decimal number wrapped by "double("/")".</item>
            <item>The constants "decimal(null)", "decimal(nan)", "decimal(+inf)", "decimal(-inf)".</item>
            </list>
            </remarks>
        </member>
        <member name="M:Kusto.Data.Common.CslDecimalLiteral.AsCslString(System.Nullable{System.Data.SqlTypes.SqlDecimal},System.Boolean)">
            <summary>
            Writes <paramref name="value" /> as a CSL literal of type `decimal`.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslDecimalLiteral.TryParse(System.String,System.Nullable{System.Data.SqlTypes.SqlDecimal}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'decimal' literal. See <see cref="T:Kusto.Data.Common.CslDecimalLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.CslGuidLiteral">
            <summary>
            A static class that can parse strings formatted as literals of CslType 'guid'
            and produce such literals.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslGuidLiteral.AsCslString(System.Nullable{System.Guid})">
            <summary>
            Writes <paramref name="value" /> as a CSL literal of type `guid`.
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.CslGuidLiteral.TryParse(System.String,System.Nullable{System.Guid}@,System.Boolean)">
            <summary>
            Parses a string as a CSL 'guid' literal. See <see cref="T:Kusto.Data.Common.CslGuidLiteral" /> for the supported formats.
            </summary>
            <param name="literal"></param>
            <param name="result"></param>
            <param name="strict">If true, parsing requires explicit type notation.</param>
        </member>
        <member name="T:Kusto.Data.Common.WellKnownConnectionStrings">
            <summary>
            Holds a number of well-known connection strings that one can refer-to by an alias.
            Also provides a shorthand form: '@cluster/database' (with database optional)
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownConnectionStrings.GetConnectionStringByAliasOrSelf(System.String)">
            <summary>
            Given a potential alias to a well-known connection string, either returns the
            connection string (if one is defined for the alias) or returns the alias itself
            (presumably, it is an actual connection string already).
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownConnectionStrings.GetConnectionStringByAliasOrNull(System.String)">
            <summary>
            Given a potential alias to a well-known connection string, either returns the
            connection string (if one is defined for the alias) or returns null.
            </summary>
        </member>
        <member name="T:Kusto.Data.Common.WellKnownDstsDetails">
            <summary>
            Provides constants and helpers for dSTS-based authentication
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownDstsDetails.DownloadDstsPrerequisites(System.String@,System.Boolean)">
            <summary>
            Downloading dSTS-based authentication's prerequisite from Kusto's server
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownDstsDetails.ExtractDstsPrerequisites(System.String@,System.Boolean)">
            <summary>
            Extracting dSTS-based authentication's prerequisite from downloaded zip
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownDstsDetails.CopyDstsPrerequisites(System.String,System.String@,System.Boolean)">
            <summary>
            Copying dSTS-based authentication's prerequisite from downloaded zip to Kusto temp folder
            </summary>
        </member>
        <member name="M:Kusto.Data.Common.WellKnownDstsDetails.IsDstsInstalled">
            <summary>
            Validate dSTS-based authentication's prerequisite
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtendedTrackableOperationKind.FallsUnderIngestCategory(Kusto.Data.AdminTrackableOperationKind)">
            <summary>
            Should this operation be counted as an ingest operation?
            </summary>
            <remarks>Note that extent rebuild by query, used for purge processes, is also counted as an ingestion operation for capacity calculation purposes
            (both ingestion and rebuild for purge use the same capacity quota).
            Also note that "TableSetOrAppend" and "TableSetOrReplace" are intentionally left out, as they don't actually consume capacity on their own - they
            create an instance of the relevant command, Table(Set|Append|Replace), which is the one to consume capacity.</remarks>
        </member>
        <member name="M:Kusto.Data.ExtendedTrackableOperationKind.FallsUnderMergeRebuildCategory(Kusto.Data.AdminTrackableOperationKind)">
            <summary>
            Should this operation be counted as a merge/rebuild operation?
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtendedTrackableOperationKind.FallsUnderExportCategory(Kusto.Data.AdminTrackableOperationKind)">
            <summary>
            Should this operation be counted as an export operation?
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.RemoteServiceType">
            <summary>
            A bitmask that represents one or more externally-visible Kusto network services
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.Admin">
            <summary>
            Controls Kusto Engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.Query">
            <summary>
            Queries Kusto Engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.UIRedirect">
            <summary>
            Redirects to Kusto.Explorer or similar client.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.DataManagement">
            <summary>
            Controls Kusto DM.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.ClusterManagement">
            <summary>
            Controls Kusto CM.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.Bridge">
            <summary>
            Controls Kusto Bridge to Geneva/Aria pipelines.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.Ping">
            <summary>
            Load-balancer ping responder.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.CustomType">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.StreamIngest">
            <summary>
            Streaming ingestion into Kusto Engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.PassiveLogin">
            <summary>
            Manages passive authentication flows.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.ArmResourceProvider">
            <summary>
            Controls Kusto RP.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.RemoteServiceType.AllControlCommands">
            <summary>
            A bitwise OR of all service types that provide control commands.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.ExtendedRemoteServiceType">
            <summary>
            Extensions for enum RemoteServiceType
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.KustoDataStreamFormat">
            <summary>
            The format of the data stream returned by a Kusto service.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.KustoDataStreamFormat.KustoJsonDataStream">
            <summary>
            JSON representation of the Kusto Data Stream (stable).
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.KustoDataStreamFormat.KustoDataStream">
            <summary>
            Binary data stream emitted by the Kusto engine. For internal use only (may change with no notice).
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.ExtendedKustoDataStreamFormat">
            <summary>
            Extensions for enum KustoDataStreamFormat
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.ClientServiceCommunication">
            <summary>
            Provides communication values based on defaults and configurations.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Common.ClientServiceCommunication.Namespace">
            <summary>
            The namespace for <see cref="T:Kusto.Data.Net.Common.IClientServiceCommunicationContract" />.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.IClientServiceCommunicationContract">
            <summary>
            The contract used between DataNode instances to send queries to each other.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Common.IClientServiceCommunicationContract.ExecuteQueryInternal(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a query and return its results as a big buffer of data.
            </summary>
            <param name="query">The query to execute, in CSL-DQL.</param>
            <param name="databaseName">The database that the query refers to.</param>
            <param name="properties">Various session properties.</param>
            <returns>The resultset produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Common.IClientServiceCommunicationContract.ExecuteQueryInternalAsKustoDataStream(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Execute a query and return its results as a stream encoded using the KustoDataStream (KDS) format.
            </summary>
            <param name="query">The query to execute, in CSL-DQL.</param>
            <param name="databaseName">The database that the query refers to.</param>
            <param name="properties">Various session properties.</param>
            <returns>The resultset produced by the query.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Common.IClientServiceCommunicationContract.ExecuteCancelRunningQuery(System.String,System.Security.Claims.ClaimsIdentity,System.String)">
            <summary>
            Cancel running query
            </summary>
            <param name="clientRequestId">The client request ID that was provided by the client when it started the query execution.</param>
            <param name="principalIdentity">The identity of the user asking to cancel the query.</param>
            <param name="reasonPhrase">A reason to associate with the query cancellation request.</param>
        </member>
        <member name="M:Kusto.Data.Net.Common.IClientServiceCommunicationContract.ExecuteShowRunningQueries(System.String)">
            <summary>
            Show queries history for the current user
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract">
            <summary>
            The contract used for admin tasks.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract.ExecuteControlCommandInternal(System.String,System.String,Kusto.Data.Common.ClientRequestProperties,System.String)">
            <summary>
            Executes a control command and return its results.
            </summary>
            <param name="databaseName">The database that the command refers to.</param>
            <param name="command">The command to execute, in CSL-DDL.</param>
            <param name="properties">The client session properties of the command</param>
            <param name="addr">Optional indication of host to send the command to. By default,
            null is used (which means "send to host running the primary replica
            of the Admin service").</param>
            <returns>The resultset produced by the command.</returns>
        </member>
        <member name="T:Kusto.Data.Net.Client.KustoClientFactory">
            <summary>
            A factory for <see cref="T:Kusto.Data.Common.ICslQueryProvider" /> and <see cref="T:Kusto.Data.Common.ICslAdminProvider" />
            implementations, based on the service/database connection string.
            </summary>
            <remarks>
            By default, Kusto supports the "http", "https", and "net.tcp" as connection schemes
            between the client and service.

            Additionally, this class also allows for scenarios in which callers want to add their
            own client provider factories and attach them to arbitrary connection schemes,
            as long as these schemes don't override the default ones. Processes that host the engine
            itself can use a specific connection scheme ("embedded", this.InProcessDataSourceScheme)
            to communicate with the hosted engine.
            </remarks>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslQueryProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a query provider based on a parsed connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslQueryProvider(System.String)">
            <summary>
            Create a query provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslAdminProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create an admin provider based on a parsed connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslAdminProvider(System.String)">
            <summary>
            Create an admin provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslStreamIngestClient(System.String)">
            <summary>
            Create a stream ingest client based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslStreamIngestClient(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a stream ingest client based on a parsed connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslQueryMultiProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a query multi-provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslQueryKustoDataStreamMultiProvider(System.Boolean)">
            <summary>
            Create a query provider that can target any cluster/database
            </summary>
            <param name="canForwardTokenToTarget">
            If this parameter is true, security token may be passed forward in the authorization header of reqyests without any further checks.
            The method assumes the caller is responsible to determine whether the security requirements are met.
            </param>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslAdminMultiProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create an admin multi-provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslDmAdminMultiProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Data Management admin multi-provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslBridgeAdminMultiProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Cluster Management admin multi-provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslCmAdminMultiProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Cluster Management admin multi-provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslDmAdminProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Data Management admin provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslCmAdminProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Cluster Management admin provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslBridgeAdminProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Bridge admin provider based on a connection string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoClientFactory.CreateCslArmResourceProviderAdminProvider(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Create a Resource Provider admin provider based on a connection string.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.AdminClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.AdminClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="M:Kusto.Data.Net.Client.AdminClientServiceCommunicationClient.ExecuteControlCommandAsync(System.String,System.String,Kusto.Data.Common.ClientRequestProperties)">
            <summary>
            Note: this is not a "good" async function in the sense that it just spawns another thread and juts does work there.
            Implremented it in such a way because we didn't want to leave this empty but on the other hand didn't want to do async wcf code
            since this code is going to be deprecated.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.BridgeClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.BridgeClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="T:Kusto.Data.Net.Client.ICslStreamingQueryProvider">
            <summary>
            Like <see cref="T:Kusto.Data.Common.ICslQueryProvider" />, but returns a Kusto Data Stream.
            Use <see cref="T:Kusto.Data.Data.Impl.KustoDataStream" /> to convert this stream into an <see cref="T:System.Data.IDataReader" />.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.ICslStreamingQueryMultiProvider">
            <summary>
            Like <see cref="T:Kusto.Data.Common.ICslQueryProvider" />, but returns a Kusto Data Stream.
            Use <see cref="T:Kusto.Data.Data.Impl.KustoDataStream" /> to convert this stream into an <see cref="T:System.Data.IDataReader" />.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.ClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Common.ICslQueryProvider" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.ClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="M:Kusto.Data.Net.Client.ClientServiceCommunicationClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="schemeOrDefaultHostAddress">The default host address of the Kusto service to connect to. This can be
            just the scheme part or a full absolute Uri.</param>
            <param name="defaultDatabaseName">The default database that queries run against. Optional</param>
            <param name="security">The security parameters of the communication. Optional.</param>
        </member>
        <member name="T:Kusto.Data.Net.Client.CmClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.CmClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="T:Kusto.Data.Net.Client.DmClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.DmClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="T:Kusto.Data.Net.Client.QueryInfo">
            <summary>
            Holds all the details of the query that Kusto.Explorer is asked to execute.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.Query">
            <summary>
            The text of the query.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.DestinationUri">
            <summary>
            The destination URI of the target Kusto cluster that should run the query.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.DestinationName">
            <summary>
            What name should Kusto.Explorer use to refer to that cluster.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.QueryParameters">
            <summary>
            Additional query parameters (such as database etc.)
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.DocumentPanelIdentifier">
            <summary>
            The Id of the new document panel to create.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.QueryInfo.ShouldPrettifyQuery">
            <summary>
            True, if the query should be prettified.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.DocumentPanelState">
            <summary>
            Holds all the details of a document panel in Kusto Explorer.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.DocumentPanelState.Caption">
            <summary>
            The caption of the Panel.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.DocumentPanelState.Identifier">
            <summary>
            The Panel Id.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract">
            <summary>
            The client/service communication contract that allows clients to control
            a running instance of Kusto.Explorer.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.GetPrimaryProcessId">
            <summary>
            Retrieves the Windows ProcessId of the Kusto.Explorer "primary"
            (the service instance we're talking to).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.ForwardQueryToPrimary(Kusto.Data.Net.Client.QueryInfo)">
            <summary>
            Asks the Kusto.Explorer "primary"
            (the service instance we're talking to) to run a specific query.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.SetDocumentPanel(System.Guid)">
            <summary>
            Sets the active document panel.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.GetDocumentPanel(System.Nullable{System.Guid})">
            <summary>
            Gets a document panel. A null identifier returns the current document panel.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.DeleteDocumentPanel(System.Guid)">
            <summary>
            Deletes the provided document panel.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.IKustoExplorerCommunicationContract.ForwardFileToPrimary(System.String)">
            <summary>
            Askes the Kusto.Explorer "primary"
            (the service instance we're talking to) to open specified script file.
            </summary>
            <param name="path"></param>
        </member>
        <member name="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient">
            <summary>
            A networking client that locates the Kusto.Explorer "primary" running on the
            local machine and allows one to talk to it.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful">
            <summary>
            A delegate which is called if communication with the primary was successful.
            Most commonly, this is used to pass the Windows focus to the primary process'
            main window (which is what the primaryProcessId parameter is for).
            </summary>
            <param name="primaryProcessId">The Windows process ID of the primary.</param>
            <returns>The return value to ultimately return to the client who
            requested the communication with the primary.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.TryLocatePrimary(Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful)">
            <summary>
            Attempts to communicate with the primary.
            </summary>
            <param name="callback">Optional callback to invoke. See <see cref="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful" />.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.TryForwardQueryToPrimary(Kusto.Data.Net.Client.QueryInfo,Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful)">
            <summary>
            Attempts to communicate with the primary Kusto.Explorer instance
            (a Kusto.Explorer process in the current logon context that listens on
            the named pipe). If successful, sends the specified query to the primary
            for execution.
            </summary>
            <param name="queryInfo">The query to run on the primary.</param>
            <param name="callback">Optional callback to invoke. See <see cref="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful" />.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.TryForwardFileToPrimary(System.String,Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful)">
            <summary>
            Attempts to communicate with the primary Kusto.Explorer instance
            (a Kusto.Explorer process in the current logon context that listens on
            the named pipe). If successful, instructs it to load the specified
            script.
            </summary>
            <param name="filename">The local file holding the script to load.</param>
            <param name="callback">Optional callback to invoke. See <see cref="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful" />.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.PassFocusToOtherProcess(System.Int32)">
            <summary>
            A function one can pass as <see cref="T:Kusto.Data.Net.Client.KustoExplorerCommunicationClient.OnCommunicationWithPrimarySuccessful" />.
            Note that this method is based on reflection, so that the client will not bind
            to the UIAutomationClient assembly. Callers who are allowed to bind to this
            assembly should implement similar functionality themselves.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.RestClient2">
            <summary>
            Communication client that connects to the query, admin, cluster management, and data management endpoints
            over REST (http/https).
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.RestClient2.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.RestClient2.#ctor(Kusto.Data.KustoConnectionStringBuilder,System.Boolean)">
            <summary>
            Constructor that takes a connection string and a Boolean if to allow forwarding security tokens
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestClient2.PrivateTracer.IdentifierString">
            <summary>
            The string that identifies this trace source
            </summary>
        </member>
        <member name="P:Kusto.Data.Net.Client.RestClient2.PrivateTracer.Id">
            <summary>
            Implements <see cref="P:Kusto.Cloud.Platform.Utils.TraceSourceBase`1.Id" />
            </summary>
        </member>
        <member name="P:Kusto.Data.Net.Client.RestClient2.PrivateTracer.DefaultVerbosity">
            <summary>
            Implements <see cref="P:Kusto.Cloud.Platform.Utils.TraceSourceBase`1.DefaultVerbosity" />
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.RestApiPrefix">
            <summary>
            The prefixes for the Kusto REST API.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.Ping">
            <summary>
            [v1] Ping: Do a GET and GET a Pong.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.Query">
            <summary>
            [v1] Query: Send queries to the Kusto engine and get answers encoded as KustoJsonDataStream.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.QueryV2">
            <summary>
            [v2] Query: Send queries to the Kusto engine and get answers encoded as KustoJsonDataStream.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.QueryStreaming">
            <summary>
            [v1] QueryStreaming: Send queries to the Kusto engine and get answers encoded as KustoDataStream.
            </summary>
            <remarks>This is a private API, undocumented and subject to change without notice.
            Do not use.</remarks>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.QueryStreamingV2">
            <summary>
            [v1] QueryStreaming: Send queries to the Kusto engine and get answers encoded as KustoDataStream.
            </summary>
            <remarks>This is a private API, undocumented and subject to change without notice.
            Do not use.</remarks>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.Mgmt">
            <summary>
            [v1] Mgmt: Send control commands to the Kusto engine and get answers encoded as KustoJsonDataStream.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.StreamIngest">
            <summary>
            [v1] StreamIngest: Push data to be ingested by the Kusto engine.
            </summary>
        </member>
        <member name="F:Kusto.Data.Net.Client.RestApiPrefix.PassiveLogin">
            <summary>
            [v1] PassiveLogin: Controls passive authentication flows.
            </summary>
        </member>
        <member name="T:Kusto.Data.Net.Client.RequestDumperHttpClientHandler">
            <summary>
            A kind of <see cref="T:System.Net.Http.HttpClientHandler" /> that dumps the request
            to the console or to traces.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.RequestDumperHttpClientHandler.#ctor(System.Net.Http.HttpMessageHandler,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="innerHandler">The next-in-line handler for the request.</param>
            <param name="header">The name of the HTTP request header that, if it is
            found in the request, indicates how to dump the request. (If it doesn't
            exist, nothing is dumped.)</param>
        </member>
        <member name="T:Kusto.Data.Net.Client.ArmResourceProviderClientServiceCommunicationClient">
            <summary>
            The client side that invokes <see cref="T:Kusto.Data.Net.Common.IAdminClientServiceCommunicationContract" /> methods remotely.
            </summary>
        </member>
        <member name="M:Kusto.Data.Net.Client.ArmResourceProviderClientServiceCommunicationClient.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor that takes a connection string (builder).
            </summary>
            <param name="kcsb"></param>
        </member>
        <member name="T:Kusto.Data.DmSettingsType">
            <summary>
            DM Settings Types
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtendedDmSettingsType">
            <summary>
            Extensions for enum DmSettingsType
            </summary>
        </member>
        <member name="T:Kusto.Data.IngestionQueueType">
            <summary>
            Ingestion Queue Types
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtendedIngestionQueueType">
            <summary>
            Extensions for enum IngestionQueueType
            </summary>
        </member>
        <member name="T:Kusto.Data.Ingestion.IngestionMappingKind">
            <summary>
            The ingestion mapping kind
            </summary>
        </member>
        <member name="F:Kusto.Data.Ingestion.IngestionMappingKind.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Kusto.Data.Ingestion.IngestionMappingKind.Csv">
            <summary>
            Csv
            </summary>
        </member>
        <member name="F:Kusto.Data.Ingestion.IngestionMappingKind.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:Kusto.Data.Ingestion.IngestionMappingKind.Avro">
            <summary>
            Avro
            </summary>
        </member>
        <member name="F:Kusto.Data.Ingestion.IngestionMappingKind.Parquet">
            <summary>
            Parquet
            </summary>
        </member>
        <member name="T:Kusto.Data.Ingestion.ExtendedIngestionMappingKind">
            <summary>
            Extensions for enum IngestionMappingKind
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.Impl.KustoDataStream">
            <summary>
            The public API for reading/writing Kusto data sets serialized according
            to the KustoDataStream rules.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.Initialize(System.Func{System.Byte[],System.Int32,System.Int32,System.String},System.Func{System.Byte[],System.Int32,System.Int32,System.String})">
            <summary>
            Initialize with the provided Kusto engine.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.CreateReader(System.IO.Stream,Kusto.Data.Common.ClientRequestProperties,Kusto.Cloud.Platform.Utils.ILogger{Kusto.Cloud.Platform.Utils.TraceVerbosity},System.Boolean,System.Boolean)">
            <summary>
            Creates a parser for the stream that exposes its data by
            implementing <see cref="T:System.Data.IDataReader" />.
            </summary>
            <param name="stream">The stream holding the data set formatted as Kusto Data Stream (KDS).</param>
            <param name="properties">Client properties that affect how the data appears in the resulting IDataReader.</param>
            <param name="logger">An optional logger through which to log the activities
            of the parser (useful for debugging purposes).</param>
            <param name="convertDynamicColumnToString">Whether to represent values of type "dynamic" as strings or not (false by default).</param>
            <param name="legacySerialization">Whether to serialize dynamic strings as their inferred data types and nulls
            as string.empty (legacy serialization)</param>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.CreateReader(System.IO.Stream,System.Boolean,System.Boolean,System.Boolean,Kusto.Cloud.Platform.Utils.ILogger{Kusto.Cloud.Platform.Utils.TraceVerbosity})">
            <summary>
            Creates a parser for the stream that exposes its data by
            implementing <see cref="T:System.Data.IDataReader" />.
            </summary>
            <param name="stream">The stream holding the data set formatted as Kusto Data Stream (KDS).</param>
            <param name="convertDynamicColumnToString">TODO: Must change this name.</param>
            <param name="legacySerialization">Use legacy serialization for JValues (temp)</param>
            <param name="logger">An optional logger through which to log the activities
            <param name="skipFirstTableIfV2">If the stream version is NativeV2, the first table is the @ExtendedProperties table.
                If the paramater is set to true, it instructs the reader to ignore it.</param>
            of the parser (useful for debugging purposes).</param>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.ToStream(System.Data.IDataReader,System.Boolean)">
            <summary>
            Writes the data in the provided <see cref="T:System.Data.IDataReader" /> into a stream
            formatted as KustoDataStream.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.Impl.KustoDataStream.Logger">
            <summary>
            Gets or sets a global tracer that can be used for debugging.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.Impl.KustoDataStream.IsNativeStreamEncodingAvailable">
            <summary>
            Gets a Boolean indicating whether reading a KustoDataStream
            formatted using the native encoding is available or not.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.ParseJsonStringToDynamic(System.String)">
            <summary>
            Parse a json string to dynamic, or create a JValue with the json string if unsuccessful
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStream.GetDynamicValueBySerializationOptions(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Convert a dynamic value to its correct serialized representation, according to <paramref name="convertDynamicToString" />
            and <paramref name="dynamicJValuesLegacySerialization" /> options.
            Legacy:
                - If the value is a null JToken - serialize as empty string / JValue of empty string.
                - If the value is a string JValue - return its value if convert-to-string or "roundtrip" it to get legacy behavior - parse its value and serialize
                  back as JValue. This will result in "123" --&gt; 123
            ConvertToString:
                - Serialize the JToken

            If both the above are false, value is returned as is
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStreamClientRequestPropertiesExtensions.SafeConvertDynamicToStrings(Kusto.Data.Common.ClientRequestProperties,System.Boolean)">
            <summary>
            Returns true if <paramref name="properties" /> include the <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization" />
            option set to <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization_String" />, or if <paramref name="convertDynamicColumnToStringDefault" />
            is true and CRP didn't override this by explicitly requesting json. False otherwise.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.Impl.KustoDataStreamClientRequestPropertiesExtensions.SafeSerializeDynamicJValuesLegacy(Kusto.Data.Common.ClientRequestProperties,System.Boolean)">
            <summary>
            Returns true if <paramref name="properties" /> include the <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization_2" />
            option set to <see cref="F:Kusto.Data.Common.ClientRequestProperties.OptionResponseDynamicSerialization_2_Legacy" />, or if <paramref name="legacySerializationDefault" />
            is true and CRP didn't override this by explicitly requesting current. False otherwise.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.Impl.Impl.StorageDataType">
            <summary>
            The fundamental scalar data type in Kusto's Storage and Query layers.
            </summary>
            <remarks>
            KEEP_IN_SYNC:StorageDataType
            </remarks>
        </member>
        <member name="T:Kusto.Data.Data.Impl.Impl.KdsStreamHeader">
            <remarks>
            ********************************** IMPORTANT ***********************************
            Increment version number of the relevant encoding when making a breaking change
            in the stream format
            Breaking change meaning the code BEFORE the change won't be able to correctly
            parse the stream created by the code AFTER the change and vice versa.
            If the new code should be able to read streams created by the old code the logic
            in KdsStreamHeader.ReadAndValidate must be changed
            ********************************************************************************
            </remarks>
        </member>
        <member name="M:Kusto.Data.Data.Impl.Impl.KdsProgressiveFrameDecoder.TryReadFrame(Kusto.Data.Data.Impl.Impl.FrameBase@)">
            <summary>
            Attempts to read a frame from the stream
            </summary>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Data.Data.Impl.Impl.KdsProgressiveFrameDecoder.Cancel">
            <summary>
            Returns a QueryCompletionFrame and tells this instance to ignore subsequent reads from the stream
            Does not Dispose() of the stream
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Data.Impl.UniversalDataReaderAdapter">
            <summary>
            A class that converts between different <see cref="T:System.Data.IDataReader" />
            representations.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.KustoJsonDataStream">
            <summary>
            A factory class that creates readers and writers for the KustoJsonDataStream
            protocol.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.KustoJsonDataStream.CreateReader(System.IO.StreamReader,System.Boolean)">
            <summary>
            Creates an <see cref="T:System.Data.IDataReader" /> implementation that reads the stream
            and returns the schema and data in it.
            </summary>
            <param name="reader">A Kusto Json data stream which is to be parsed.</param>
            <param name="streaming">Mode of operation: streaming (true) or retained (false).</param>
        </member>
        <member name="M:Kusto.Data.Data.KustoJsonDataStream.CreateReader(System.IO.Stream,System.Text.Encoding,System.Boolean,Kusto.Cloud.Platform.Utils.IDumper,System.Boolean)">
            <summary>
            Creates an <see cref="T:System.Data.IDataReader" /> implementation that reads the stream
            and returns the schema and data in it.
            </summary>
            <param name="stream">A Kusto Json data stream which is to be parsed.</param>
            <param name="encoding">The encoding of <paramref name="stream" />.</param>
            <param name="streaming">Mode of operation: streaming (true) or retained (false).</param>
            <param name="dumper">An optional "dumper" that is invoked as the stream
            is read for debugging.</param>
            <param name="leaveDumperOpen">An optional indication whether the "dumper" should
            be disposed-of when the stream gets closed or not.</param>
        </member>
        <member name="M:Kusto.Data.Data.KustoJsonDataStream.WriteReaderDataToStream(System.Data.IDataReader,System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
            <summary>
            Writes the contents of <paramref name="reader" /> into <paramref name="stream" />
            (both mandatory) formatted as a KustoJsonDataStream in encoding <paramref name="encoding" /> (optional)
            while using a buffer of size <paramref name="bufferSize" /> (optional).
            Leave the stream open or dispose it according to <paramref name="leaveOpen" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.KustoJsonDataStream.CreateWriter(System.Data.IDataReader)">
            <summary>
            Gets back a writer that writes the contents of <paramref name="reader" />
            to a <see cref="T:Kusto.Cloud.Platform.Utils.JitStream" />. This is an alternative to <see cref="M:Kusto.Data.Data.KustoJsonDataStream.WriteReaderDataToStream(System.Data.IDataReader,System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
            that has the advantage of working in a pull, rather than push, model
            (making it easier to work directly with network streams without batching
            all data in memory/disk before sending them over the network).
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.KustoJsonDataStream.CreateReaderWriterPairForTest(System.Data.IDataReader,System.Boolean,System.Action{System.String},System.Boolean)">
            <summary>
            Wraps an existing <see cref="T:System.Data.IDataReader" /> with a KJDS writer, and on top
            of it a KJDS reader. This seemingly "null" operation is useful for test
            purposes only.
            </summary>
            <returns>The return value is a data reader that has the same schema and data
            as <paramref name="reader" />, but has been round-tripped through
            the KustoJsonDataStream.</returns>
            <param name="reader">The data reader to wrap.</param>
            <param name="streaming">Whether to use the streaming parser for KustoJsonDataStream
            or the non-streaming parser.</param>
            <param name="processIntermediateStream">If not-null, will get the intermediate KustoJsonDataStream
            as a string for inspection/debugging.</param>
            <param name="enableJitStream">If true, will attempt to use the implementation based on <see cref="T:Kusto.Cloud.Platform.Utils.JitStream" />
            when possible.</param>
        </member>
        <member name="T:Kusto.Data.Data.KustoJsonDataStreamReader">
            <summary>
            Given a <see cref="T:System.IO.Stream" /> wrapped by a <see cref="T:Newtonsoft.Json.JsonTextReader" />
            and representing a Kusto JSON data stream, this class exposes the data
            in the stream through an <see cref="T:System.Data.IDataReader" /> interface.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.KustoDataReaderParser">
            <summary>
            A class that takes the data reader returned by APIs such as <see cref="T:Kusto.Data.Common.ICslQueryProvider" />
            and <see cref="T:Kusto.Data.Common.ICslAdminProvider" /> and parses it into an easy-to-use data set.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.KustoResponseDataTable">
            <summary>
            Holds a single <see cref="T:System.Data.DataTable" /> found in a Kusto response.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.KustoResponseDataSet">
            <summary>
            Represents the parsed data set carried by the response
            to a Kusto request.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.ClientRequestId">
            <summary>
            Gets the client request ID that the client sent the request with,
            if known.
            </summary>
            <remarks>It is strongly recommended that clients send their own
            random client request IDs with requests to Kusto by always instantiating
            a new <see cref="T:Kusto.Data.Common.ClientRequestProperties" /> object for each request
            and explicitly setting the <see cref="P:Kusto.Data.Common.ClientRequestProperties.ClientRequestId" />
            value to a new random value.</remarks>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Item(System.String)">
            <summary>
            Gets a <see cref="T:Kusto.Data.Data.KustoResponseDataTable" /> in the data set
            by the name.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Kusto.Data.Data.KustoResponseDataTable" /> in the data set
            by its ordinal.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Item(Kusto.Data.WellKnownDataSet)">
            <summary>
            Gets all the <see cref="T:Kusto.Data.Data.KustoResponseDataTable" /> objects in the data set
            by their kind.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.KustoResponseDataSet.GetMainResultsOrNull">
            <summary>
            Gets the "main" (first) <see cref="T:Kusto.Data.Data.KustoResponseDataTable" /> object in the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Facets">
            <summary>
            Gets all the facets in the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.ChartVisualization">
            <summary>
            Gets the chart visualization option in the data set, or null.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Cursor">
            <summary>
            Gets the value of the cursor, or null.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.Tables">
            <summary>
            Gets all the <see cref="T:Kusto.Data.Data.KustoResponseDataTable" /> objects in the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Data.KustoResponseDataSet.ErrorCount">
            <summary>
            Gets the count of errors in the data set, if any.
            </summary>
        </member>
        <member name="T:Kusto.Data.Data.QueryResultSetV1">
            <summary>
            Parses a raw kusto query results to separate the main results, facets status, and visualization tables.
            </summary>
        </member>
        <member name="M:Kusto.Data.Data.QueryResultSetV1.#ctor">
            <summary>
            Used just for deserialization - thus private.
            </summary>
        </member>
        <member name="T:Kusto.Data.PrincipalResult">
            <summary>
            Used when serializing result for DatabasesShowVerboseCommandResult
            </summary>
        </member>
        <member name="T:Kusto.Data.SchemaShowCommandResult">
            <summary>
            The row type that comes back from SchemaShowCommand
            </summary>
        </member>
        <member name="T:Kusto.Data.DatabaseSchemaShowAsJsonCommandResult">
            <summary>
            The row type that comes back from ShowSchemaAsJsonCommand for databases
            </summary>
        </member>
        <member name="T:Kusto.Data.DatabaseSchemaShowAsCslScriptCommandResult">
            <summary>
            The row type that comes back from DatabaseSchemaShowAsCslCommand with 'script' option
            </summary>
        </member>
        <member name="T:Kusto.Data.ColumnAlterCommandResult">
            <summary>
            The row type that comes back from ColumnAlterCommand
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IsHealthy">
            <summary>
            Boolean flag stating if cluster is healthy or not
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ReservedSlot1">
            <summary>
            Unused (used to be IsRebalanceRequired)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IsScaleOutRequired">
            <summary>
            Boolean flag stating if scale-out should be applied to the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MachinesTotal">
            <summary>
             Number of declared machines in the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MachinesOffline">
            <summary>
            Number of machines not active in the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.NodeLastRestartedOn">
            <summary>
            Time when last restart in cluster occurred
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.AdminLastElectedOn">
            <summary>
            Time when admin was last elected
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ReservedSlot2">
            <summary>
            Unused (used to be ClusterWarmDataCapacityFactor)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ExtentsTotal">
            <summary>
            Number of total extents
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.DiskColdAllocationPercentage">
            <summary>
            Percentage of the disk cache capacity dedicated to the cold data cache
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.InstancesTargetBasedOnDataCapacity">
            <summary>
            Number of instances needed to bring the ClusterDataCapacityFactor below 80
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.TotalOriginalDataSize">
            <summary>
            Sum of the data's original size
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.TotalExtentSize">
            <summary>
            Sum of the compressed and indexed data size
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IngestionsLoadFactor">
            <summary>
            Load factor of ingestion from 0.0 to 100%
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IngestionsInProgress">
            <summary>
            Number of ingestion operations that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IngestionsSuccessRate">
            <summary>
            Ingestions success rate: 0.0% - 100.0% success rate past 10 minutes
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MergesInProgress">
            <summary>
             Number of merge operatins that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.BuildVersion">
            <summary>
             Build version
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.BuildTime">
            <summary>
            Build date time
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ClusterDataCapacityFactor">
            <summary>
            The overall cluster data capacity (0.0% - 100.0%)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IsDataWarmingRequired">
            <summary>
            Boolean flag stating if data-warming should be run
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ReservedSlot3">
            <summary>
            Unused (used to be RebalanceLastRunOn)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.DataWarmingLastRunOn">
            <summary>
            Time when last data warming happened
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MergesSuccessRate">
            <summary>
            Merges success rate: 0.0% - 100.0% success rate past 60 minutes
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.NotHealthyReason">
            <summary>
            Human readable message for cluster not being considered healthy
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IsAttentionRequired">
            <summary>
            Boolean flag stating if the cluster requires operational attention
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.AttentionRequiredReason">
            <summary>
            Human readable message for cluster considered to be as 'IsAttentionRequired'
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ProductVersion">
            <summary>
            Product version (for official builds)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.FailedIngestOperations">
            <summary>
            Amount of failed ingest operations in evaluation period (10min)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.FailedMergeOperations">
            <summary>
            Amount of failed merge/rebuild operations in evaluation period (60min)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MaxExtentsInSingleTable">
            <summary>
            Maximum count of extents in a single table
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.TableWithMaxExtents">
            <summary>
            Fully qualified table name having the max extents
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.WarmExtentSize">
            <summary>
            Sum of warm extent sizes
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.NumberOfDatabases">
            <summary>
            Number of databases in the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.PurgeExtentsRebuildLoadFactor">
            <summary>
            Load factor of purge extents rebuild from 0.0 to 100%
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.PurgeExtentsRebuildInProgress">
            <summary>
            Number of purge extents rebuild operations that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.PurgesInProgress">
            <summary>
            Number of purge operations that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MaxSoftRetentionPolicyViolation">
            <summary>
            The age of the oldest extent that is older than the expected min time according to soft retention policy.
            If no extent deviating from soft retention period is found, this equals TimeSpan.Zero
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.DatabasesWithExtentContainersViolatingHardRetentionPolicy">
            <summary>
            Databases that have extent containers that are expected to be deleted according to hard retention policy
            but still weren't. Result is a string array of all such DBs as json string
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.RowStoreLocalStorageCapacityFactor">
            <summary>
            Used capacity of the local RowStore storage
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ExportsLoadFactor">
            <summary>
            Load factor of data exports from 0.0 to 100%
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.ExportsInProgress">
            <summary>
            Number of data exports operations that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.PendingContinuousExports">
            <summary>
            Number of continuous exports jobs, in idle state, waiting to run
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MaxContinuousExportLatenessMinutes">
            <summary>
            Max lateness of a continuous export job. Only jobs which their last run was successful are taken into account
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.RowStoreSealsInProgress">
            <summary>
            Number of RowStore seal operations that are in progress
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.IsRowStoreUnhealthy">
            <summary>
            Boolean flag stating if cluster's RowStore is healthy or not
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowCommandResult.MachinesSuspended">
            <summary>
            Number of machines suspended from the cluster (user requested)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.IsHealthy">
            <summary>
            Boolean flag stating if cluster is healthy or not
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.BuildVersion">
            <summary>
             Build version
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.BuildTime">
            <summary>
            Build date time
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.NotHealthyReason">
            <summary>
            Human readable message for cluster not being considered healthy
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.IsAttentionRequired">
            <summary>
            Boolean flag stating if the cluster requires operational attention
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.AttentionRequiredReason">
            <summary>
            Human readable message for cluster considered to be as 'IsAttentionRequired'
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.ProductVersion">
            <summary>
            Product version (for official builds)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.IngestionQueuesLengths">
            <summary>
            json string represents the ingestion queues lengths
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.MaxOldestMessageAge">
            <summary>
            Maximum oldest message age (from all queues)
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InputQueueLength">
            <summary>
            The total length of input queues
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InputQueueOldestMessageAge">
            <summary>
            The oldest message in the input queue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InputQueueIsLagging">
            <summary>
            Is input queue lagging
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InternalQueueLength">
            <summary>
            The total length of internal queues
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InternalQueueOldestMessageAge">
            <summary>
            The oldest message in the internal queue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.InternalQueueIsLagging">
            <summary>
            Is internal queue lagging
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.ReadyForAggregationQueueLength">
            <summary>
            The total length of ReadyForAggregationQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.ReadyForAggregationQueueOldestMessageAge">
            <summary>
            The oldest message in the ReadyForAggregationQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.ReadyForAggregationQueueIsLagging">
            <summary>
            Is ReadyForAggregationQueue lagging
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.SecuredReadyForAggregationQueueLength">
            <summary>
            The total length of SecuredReadyForAggregationQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.SecuredReadyForAggregationQueueOldestMessageAge">
            <summary>
            The oldest message in the SecuredReadyForAggregationQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.SecuredReadyForAggregationQueueIsLagging">
            <summary>
            Is SecuredReadyForAggregationQueue lagging
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.AggregatedReadyForImportQueueLength">
            <summary>
            The total length of AggregatedReadyForImportQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.AggregatedReadyForImportQueueOldestMessageAge">
            <summary>
            The oldest message in the AggregatedReadyForImportQueue
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.AggregatedReadyForImportQueueIsLagging">
            <summary>
            Is AggregatedReadyForImportQueue lagging
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.MachinesTotal">
            <summary>
            The total number of machines in the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowDMCommandResult.MachinesOffline">
            <summary>
            Number of machines not active in the cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.IsHealthy">
            <summary>
            Boolean flag stating if cluster is healthy or not
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.BuildVersion">
            <summary>
             Build version
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.BuildTime">
            <summary>
            Build date time
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.NotHealthyReason">
            <summary>
            Human readable message for cluster not being considered healthy
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.IsAttentionRequired">
            <summary>
            Boolean flag stating if the cluster requires operational attention
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.AttentionRequiredReason">
            <summary>
            Human readable message for cluster considered to be as 'IsAttentionRequired'
            </summary>
        </member>
        <member name="F:Kusto.Data.DiagnosticsShowBridgeCommandResult.ProductVersion">
            <summary>
            Product version (for official builds)
            </summary>
        </member>
        <member name="T:Kusto.Data.QueryExecutionShowCommandResult">
            <summary>
            Keep in sync with QueryMetricLogger::MetricTuple (Loggers.h)
            </summary>
        </member>
        <member name="T:Kusto.Data.IngestionMappingShowCommandResult">
            <summary>
            The row type that comes back from IngestionMappingShowCommand
            </summary>
        </member>
        <member name="T:Kusto.Data.KustoConnectionStringBuilder">
            <summary>
            A strongly-typed builder for Kusto connection strings.
            </summary>
        </member>
        <member name="M:Kusto.Data.KustoConnectionStringBuilder.ToString">
            <summary>
            We explicitly override ToString() to not provide an "unsecure" connection string
            </summary>
        </member>
        <member name="P:Kusto.Data.KustoConnectionStringBuilder.DefaultStreaming">
            <summary>
            Gets or sets a property that establishes the default value to assign
            the property <see cref="P:Kusto.Data.KustoConnectionStringBuilder.Streaming" /> (initially false).
            </summary>
        </member>
        <member name="T:Kusto.Data.DataRetentionPolicyPersistency">
            <summary>
            Immutable DataRetentionPolicyPersistency to be stored by the engine, but used by the DM, Bridge.
            The reason that we're modeling it in the engine is just to validate that the json provided is indeed a valid retention policy json.
            </summary>
            <summary>
            A policy that states when the data should get removed - the persistency version. In the near future only SoftDeletePeriod and Recoverability will be modified by the user. This class still will keep the full set for persistency and internal commands.
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.InitInternalDefaultValues">
            <summary>
            The members that are set in this method usually are not controlled by the client
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_softDeletePeriod">
            <summary>
            Soft delete period
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_hardDeletePeriod">
            <summary>
            Hard delete period
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_containerRecyclingPeriod">
            <summary>
            Container recycling period
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_extentsDataSizeLimitInBytes">
            <summary>
            Extents data size limits in bytes
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_originalDataSizeLimitInBytes">
            <summary>
            Original data size limit in bytes
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicyPersistency.m_recoverability">
            <summary>
            Whether the data is recoverable for some period of time after deletion
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.#ctor(Kusto.Data.DataRetentionPolicyPersistency)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetSoftDeletePeriod(System.TimeSpan)">
            <summary>
            Fake Setter for SoftDeletePeriod
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetHardDeletePeriod(System.TimeSpan)">
            <summary>
            Fake Setter for HardDeletePeriod
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetContainerRecyclingPeriod(System.TimeSpan)">
            <summary>
            Fake Setter for ContainerRecyclingPeriod
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetExtentsDataSizeLimitInBytes(System.Int64)">
            <summary>
            Fake Setter for ExtentsDataSizeLimitInBytes
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetOriginalDataSizeLimitInBytes(System.Int64)">
            <summary>
            Fake Setter for OriginalDataSizeLimitInBytes
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyPersistency.NewSetRecoverability(Kusto.Data.Common.DataRecoverability)">
            <summary>
            Fake Setter for Recoverability
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.SoftDeletePeriod">
            <summary>
            Gets the value of m_softDeletePeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.HardDeletePeriod">
            <summary>
            Gets the value of m_hardDeletePeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.ContainerRecyclingPeriod">
            <summary>
            Gets the value of m_containerRecyclingPeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.ExtentsDataSizeLimitInBytes">
            <summary>
            Gets the value of m_extentsDataSizeLimitInBytes
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.OriginalDataSizeLimitInBytes">
            <summary>
            Gets the value of m_originalDataSizeLimitInBytes
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicyPersistency.Recoverability">
            <summary>
            Gets the value of m_recoverability
            </summary>
        </member>
        <member name="T:Kusto.Data.DataRetentionPolicyConverter">
            <summary>
            A JsonConverter to be used to serialize a subset of DataRetentionPolicyPersistency fields
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicyConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Out of the fields of DataRetentionPolicyPersistency, white only the ones that exist in DataRetentionPolicy
            </summary>
        </member>
        <member name="T:Kusto.Data.DataRetentionPolicy">
            <summary>
            Immutable DataRetentionPolicy to be used to get and return the policy definition via the commands.
            TODO: currently it has the same fields as FromDataRetentionPolicyPersistency, at a later stage
            we will leave it only with the fields we want to expose to the user: softDeletePeriod and recoverabilitys
            </summary>
            <summary>
            A policy that states when the data should get removed - the in-memory version.
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicy.m_softDeletePeriod">
            <summary>
            Soft delete period
            </summary>
        </member>
        <member name="F:Kusto.Data.DataRetentionPolicy.m_recoverability">
            <summary>
            Whether the data is recoverable for some period of time after deletion
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.#ctor(System.TimeSpan,Kusto.Data.Common.DataRecoverability)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.#ctor(Kusto.Data.DataRetentionPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.NewSetSoftDeletePeriod(System.TimeSpan)">
            <summary>
            Fake Setter for SoftDeletePeriod
            </summary>
        </member>
        <member name="M:Kusto.Data.DataRetentionPolicy.NewSetRecoverability(Kusto.Data.Common.DataRecoverability)">
            <summary>
            Fake Setter for Recoverability
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicy.SoftDeletePeriod">
            <summary>
            Gets the value of m_softDeletePeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.DataRetentionPolicy.Recoverability">
            <summary>
            Gets the value of m_recoverability
            </summary>
        </member>
        <member name="T:Kusto.Data.RetentionPolicyMigrator">
            <summary>
            This class will be used for migration of DataRetentionPolicyPersistency to have Recoverability propety
            as the master for HardDeletePeriod calculation
            </summary>
        </member>
        <member name="M:Kusto.Data.RetentionPolicyMigrator.MigratePolicy(Kusto.Data.DataRetentionPolicyPersistency)">
            <summary>
            If Recoverability is not defined, set it based on hard-soft difference
            Based on Recoverability value set HardDeletePeriod value
            </summary>
        </member>
        <member name="T:Kusto.Data.IngestionBatchingPolicy">
            <summary>
            A policy that defines when data batching should seal
            </summary>
        </member>
        <member name="F:Kusto.Data.IngestionBatchingPolicy.m_maximumBatchingTimeSpan">
            <summary>
            The batching time limit in case when few data is collected
            </summary>
        </member>
        <member name="F:Kusto.Data.IngestionBatchingPolicy.m_maximumNumberOfItems">
            <summary>
            The maximum number of files to batch
            </summary>
        </member>
        <member name="F:Kusto.Data.IngestionBatchingPolicy.m_maximumRawDataSizeMB">
            <summary>
            The maximum size sum of the batch files
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.#ctor(System.TimeSpan,System.Int32,System.Int64)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.#ctor(Kusto.Data.IngestionBatchingPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.NewSetMaximumBatchingTimeSpan(System.TimeSpan)">
            <summary>
            Fake Setter for MaximumBatchingTimeSpan
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.NewSetMaximumNumberOfItems(System.Int32)">
            <summary>
            Fake Setter for MaximumNumberOfItems
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionBatchingPolicy.NewSetMaximumRawDataSizeMB(System.Int64)">
            <summary>
            Fake Setter for MaximumRawDataSizeMB
            </summary>
        </member>
        <member name="P:Kusto.Data.IngestionBatchingPolicy.MaximumBatchingTimeSpan">
            <summary>
            Gets the value of m_maximumBatchingTimeSpan
            </summary>
        </member>
        <member name="P:Kusto.Data.IngestionBatchingPolicy.MaximumNumberOfItems">
            <summary>
            Gets the value of m_maximumNumberOfItems
            </summary>
        </member>
        <member name="P:Kusto.Data.IngestionBatchingPolicy.MaximumRawDataSizeMB">
            <summary>
            Gets the value of m_maximumRawDataSizeMB
            </summary>
        </member>
        <member name="T:Kusto.Data.ThrottlingPolicy">
            <summary>
            A policy that governs resource with a specified amount of concurrent operations
            </summary>
            <summary>
            A policy that governs resource with a specified amount of concurrent operations
            </summary>
        </member>
        <member name="F:Kusto.Data.ThrottlingPolicy.m_isEnabled">
            <summary>
            IsEnabled
            </summary>
        </member>
        <member name="F:Kusto.Data.ThrottlingPolicy.m_maxQuantity">
            <summary>
            Maximum quantity of the concurrent operations
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.#ctor(System.Boolean,System.Int32)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.#ctor(Kusto.Data.ThrottlingPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.NewSetIsEnabled(System.Boolean)">
            <summary>
            Fake Setter for IsEnabled
            </summary>
        </member>
        <member name="M:Kusto.Data.ThrottlingPolicy.NewSetMaxQuantity(System.Int32)">
            <summary>
            Fake Setter for MaxQuantity
            </summary>
        </member>
        <member name="P:Kusto.Data.ThrottlingPolicy.IsEnabled">
            <summary>
            Gets the value of m_isEnabled
            </summary>
        </member>
        <member name="P:Kusto.Data.ThrottlingPolicy.MaxQuantity">
            <summary>
            Gets the value of m_maxQuantity
            </summary>
        </member>
        <member name="T:Kusto.Data.QueryLimitPolicy">
            <summary>
            A policy that governs resources alocated per query
            </summary>
            <summary>
            A policy that governs resources alocated per query per node
            </summary>
        </member>
        <member name="F:Kusto.Data.QueryLimitPolicy.m_isEnabled">
            <summary>
            IsEnabled
            </summary>
        </member>
        <member name="F:Kusto.Data.QueryLimitPolicy.m_maxMemoryPerQueryPerNode">
            <summary>
            Maximum memory usage allowed per query
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.#ctor(System.Boolean,System.Int64)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.#ctor(Kusto.Data.QueryLimitPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.NewSetIsEnabled(System.Boolean)">
            <summary>
            Fake Setter for IsEnabled
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryLimitPolicy.NewSetMaxMemoryPerQueryPerNode(System.Int64)">
            <summary>
            Fake Setter for MaxMemoryPerQueryPerNode
            </summary>
        </member>
        <member name="P:Kusto.Data.QueryLimitPolicy.IsEnabled">
            <summary>
            Gets the value of m_isEnabled
            </summary>
        </member>
        <member name="P:Kusto.Data.QueryLimitPolicy.MaxMemoryPerQueryPerNode">
            <summary>
            Gets the value of m_maxMemoryPerQueryPerNode
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtentsMergePolicy">
            <summary>
            A policy that defines when extents should get merged
            </summary>
            <summary>
            A policy that defines when extents should get merged
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_rowCountUpperBoundForMerge">
            <summary>
            Row count upper bound for merge operation
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_maxExtentsToMerge">
            <summary>
            Max extents to merge in one batch
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_loopPeriod">
            <summary>
            Loop period
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_maxRangeInHours">
            <summary>
            Max range in hours between two extents
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_allowRebuild">
            <summary>
            Allow rebuild operations
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergePolicy.m_allowMerge">
            <summary>
            Allow merge operations
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.#ctor(Kusto.Data.ExtentsMergePolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetRowCountUpperBoundForMerge(System.Int32)">
            <summary>
            Fake Setter for RowCountUpperBoundForMerge
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetMaxExtentsToMerge(System.Int32)">
            <summary>
            Fake Setter for MaxExtentsToMerge
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetLoopPeriod(System.TimeSpan)">
            <summary>
            Fake Setter for LoopPeriod
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetMaxRangeInHours(System.Int32)">
            <summary>
            Fake Setter for MaxRangeInHours
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetAllowRebuild(System.Boolean)">
            <summary>
            Fake Setter for AllowRebuild
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergePolicy.NewSetAllowMerge(System.Boolean)">
            <summary>
            Fake Setter for AllowMerge
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.RowCountUpperBoundForMerge">
            <summary>
            Gets the value of m_rowCountUpperBoundForMerge
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.MaxExtentsToMerge">
            <summary>
            Gets the value of m_maxExtentsToMerge
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.LoopPeriod">
            <summary>
            Gets the value of m_loopPeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.MaxRangeInHours">
            <summary>
            Gets the value of m_maxRangeInHours
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.AllowRebuild">
            <summary>
            Gets the value of m_allowRebuild
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergePolicy.AllowMerge">
            <summary>
            Gets the value of m_allowMerge
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtentsShowFilteringRuntimePolicy">
            <summary>
            Represents a runtime policy which defines if and which extents should be filtered out from the results of ExtentsShowCommand.
            </summary>
            <summary>
            Represents a runtime policy which defines if and which extents should be filtered out from the results of ExtentsShowCommand.
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeColumnsUnusedByMergeLogic">
            <summary>
            Whether or not to exclude columns which are not used by the Extents Merge Logic
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeAboveRowCountUpperBound">
            <summary>
            Whether or not to exclude extents with a row count above the upper bound defined in the Extents Merge Policy (for merge, not rebuild)
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeAboveMaxRowCount">
            <summary>
            Whether or not to exclude extents with a row count above the maximum defined in the Data Sharding Policy
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeAboveMaxExtentSize">
            <summary>
            Whether or not to exclude extents with an extents size above the maximum defined in the Data Sharding Policy
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeAboveMaxOriginalSize">
            <summary>
            Whether or not to exclude extents with an original size above the maximum defined in the Data Sharding Policy
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeAboveShardingPolicyMaxSizes">
            <summary>
            Whether or not to exclude extents whose size is above all properties defined in the Data Sharding Policy
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeExtentsNearSoftDelete">
            <summary>
            Whether or not to exclude extents which are expected to be soft-deleted soon (according to the Retention Policy and PercentageOfRemainingSoftDeletePeriod)
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeExtentsNotInHotCache">
            <summary>
            Whether or not to exclude extents which are not expected to be in the hot cache
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_excludeReadOnlyDatabases">
            <summary>
            Whether or not to exclude extents which belong to databases whose access mode is set to ReadOnly
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_includeDataNodesAssignment">
            <summary>
            Whether or not to include the extents' assignment to data nodes
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_includePartitionDetails">
            <summary>
            Whether or not to include the extents' partition details
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_maximumResultsCount">
            <summary>
            The maximum number of extents to return
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_minimumExtentsPerTable">
            <summary>
            The minimum number of extents per table so that extents from this table are not excluded
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_maximumTagsLength">
            <summary>
            The maximum length of extent tags, above which extents are excluded
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_minimumExtentSize">
            <summary>
            The minimum extent size, under which extents are excluded
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsShowFilteringRuntimePolicy.m_percentageOfRemainingSoftDeletePeriod">
            <summary>
            The percentage of remaining time after which the extent is expected to be soft deleted (between 0.0 and 0.1)
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int64,System.Int64,System.Int64,System.Int64,System.Double)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.#ctor(Kusto.Data.ExtentsShowFilteringRuntimePolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeColumnsUnusedByMergeLogic(System.Boolean)">
            <summary>
            Fake Setter for ExcludeColumnsUnusedByMergeLogic
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeAboveRowCountUpperBound(System.Boolean)">
            <summary>
            Fake Setter for ExcludeAboveRowCountUpperBound
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeAboveMaxRowCount(System.Boolean)">
            <summary>
            Fake Setter for ExcludeAboveMaxRowCount
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeAboveMaxExtentSize(System.Boolean)">
            <summary>
            Fake Setter for ExcludeAboveMaxExtentSize
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeAboveMaxOriginalSize(System.Boolean)">
            <summary>
            Fake Setter for ExcludeAboveMaxOriginalSize
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeAboveShardingPolicyMaxSizes(System.Boolean)">
            <summary>
            Fake Setter for ExcludeAboveShardingPolicyMaxSizes
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeExtentsNearSoftDelete(System.Boolean)">
            <summary>
            Fake Setter for ExcludeExtentsNearSoftDelete
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeExtentsNotInHotCache(System.Boolean)">
            <summary>
            Fake Setter for ExcludeExtentsNotInHotCache
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetExcludeReadOnlyDatabases(System.Boolean)">
            <summary>
            Fake Setter for ExcludeReadOnlyDatabases
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetIncludeDataNodesAssignment(System.Boolean)">
            <summary>
            Fake Setter for IncludeDataNodesAssignment
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetIncludePartitionDetails(System.Boolean)">
            <summary>
            Fake Setter for IncludePartitionDetails
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetMaximumResultsCount(System.Int64)">
            <summary>
            Fake Setter for MaximumResultsCount
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetMinimumExtentsPerTable(System.Int64)">
            <summary>
            Fake Setter for MinimumExtentsPerTable
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetMaximumTagsLength(System.Int64)">
            <summary>
            Fake Setter for MaximumTagsLength
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetMinimumExtentSize(System.Int64)">
            <summary>
            Fake Setter for MinimumExtentSize
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsShowFilteringRuntimePolicy.NewSetPercentageOfRemainingSoftDeletePeriod(System.Double)">
            <summary>
            Fake Setter for PercentageOfRemainingSoftDeletePeriod
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeColumnsUnusedByMergeLogic">
            <summary>
            Gets the value of m_excludeColumnsUnusedByMergeLogic
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeAboveRowCountUpperBound">
            <summary>
            Gets the value of m_excludeAboveRowCountUpperBound
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeAboveMaxRowCount">
            <summary>
            Gets the value of m_excludeAboveMaxRowCount
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeAboveMaxExtentSize">
            <summary>
            Gets the value of m_excludeAboveMaxExtentSize
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeAboveMaxOriginalSize">
            <summary>
            Gets the value of m_excludeAboveMaxOriginalSize
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeAboveShardingPolicyMaxSizes">
            <summary>
            Gets the value of m_excludeAboveShardingPolicyMaxSizes
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeExtentsNearSoftDelete">
            <summary>
            Gets the value of m_excludeExtentsNearSoftDelete
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeExtentsNotInHotCache">
            <summary>
            Gets the value of m_excludeExtentsNotInHotCache
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.ExcludeReadOnlyDatabases">
            <summary>
            Gets the value of m_excludeReadOnlyDatabases
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.IncludeDataNodesAssignment">
            <summary>
            Gets the value of m_includeDataNodesAssignment
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.IncludePartitionDetails">
            <summary>
            Gets the value of m_includePartitionDetails
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.MaximumResultsCount">
            <summary>
            Gets the value of m_maximumResultsCount
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.MinimumExtentsPerTable">
            <summary>
            Gets the value of m_minimumExtentsPerTable
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.MaximumTagsLength">
            <summary>
            Gets the value of m_maximumTagsLength
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.MinimumExtentSize">
            <summary>
            Gets the value of m_minimumExtentSize
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsShowFilteringRuntimePolicy.PercentageOfRemainingSoftDeletePeriod">
            <summary>
            Gets the value of m_percentageOfRemainingSoftDeletePeriod
            </summary>
        </member>
        <member name="T:Kusto.Data.CalloutPolicy">
            <summary>
            A policy that states what callouts are allowed during queries and admin commands
            </summary>
            <summary>
            A policy that defines what callouts can be executed
            </summary>
        </member>
        <member name="F:Kusto.Data.CalloutPolicy.m_calloutType">
            <summary>
            The type of the callout
            </summary>
        </member>
        <member name="F:Kusto.Data.CalloutPolicy.m_calloutUriRegex">
            <summary>
            The allowed URI regex
            </summary>
        </member>
        <member name="F:Kusto.Data.CalloutPolicy.m_canCall">
            <summary>
            Indicate if the policy allows external calls
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.#ctor(Kusto.Data.CalloutPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.NewSetCalloutType(System.String)">
            <summary>
            Fake Setter for CalloutType
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.NewSetCalloutUriRegex(System.String)">
            <summary>
            Fake Setter for CalloutUriRegex
            </summary>
        </member>
        <member name="M:Kusto.Data.CalloutPolicy.NewSetCanCall(System.Boolean)">
            <summary>
            Fake Setter for CanCall
            </summary>
        </member>
        <member name="P:Kusto.Data.CalloutPolicy.CalloutType">
            <summary>
            Gets the value of m_calloutType
            </summary>
        </member>
        <member name="P:Kusto.Data.CalloutPolicy.CalloutUriRegex">
            <summary>
            Gets the value of m_calloutUriRegex
            </summary>
        </member>
        <member name="P:Kusto.Data.CalloutPolicy.CanCall">
            <summary>
            Gets the value of m_canCall
            </summary>
        </member>
        <member name="T:Kusto.Data.DataUpdatePolicy">
            <summary>
            A policy that describes how data is
            </summary>
            <summary>
            A policy that describes how data is
            </summary>
        </member>
        <member name="F:Kusto.Data.DataUpdatePolicy.m_isEnabled">
            <summary>
            Turns the data update policy on / off
            </summary>
        </member>
        <member name="F:Kusto.Data.DataUpdatePolicy.m_source">
            <summary>
            Name of the table that is used as source for the data update
            </summary>
        </member>
        <member name="F:Kusto.Data.DataUpdatePolicy.m_query">
            <summary>
            Query that is used for updating the data
            </summary>
        </member>
        <member name="F:Kusto.Data.DataUpdatePolicy.m_isTransactional">
            <summary>
            Specifies whether or not the data update should be transactional with the ingsetion of the source data
            </summary>
        </member>
        <member name="F:Kusto.Data.DataUpdatePolicy.m_propagateIngestionProperties">
            <summary>
            Specifies whether or not ingestion properties (extent tags and creation time) specified for the extents in the source table should apply to the ones in the derived table as well
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.#ctor(System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.#ctor(Kusto.Data.DataUpdatePolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.NewSetIsEnabled(System.Boolean)">
            <summary>
            Fake Setter for IsEnabled
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.NewSetSource(System.String)">
            <summary>
            Fake Setter for Source
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.NewSetQuery(System.String)">
            <summary>
            Fake Setter for Query
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.NewSetIsTransactional(System.Boolean)">
            <summary>
            Fake Setter for IsTransactional
            </summary>
        </member>
        <member name="M:Kusto.Data.DataUpdatePolicy.NewSetPropagateIngestionProperties(System.Boolean)">
            <summary>
            Fake Setter for PropagateIngestionProperties
            </summary>
        </member>
        <member name="P:Kusto.Data.DataUpdatePolicy.IsEnabled">
            <summary>
            Gets the value of m_isEnabled
            </summary>
        </member>
        <member name="P:Kusto.Data.DataUpdatePolicy.Source">
            <summary>
            Gets the value of m_source
            </summary>
        </member>
        <member name="P:Kusto.Data.DataUpdatePolicy.Query">
            <summary>
            Gets the value of m_query
            </summary>
        </member>
        <member name="P:Kusto.Data.DataUpdatePolicy.IsTransactional">
            <summary>
            Gets the value of m_isTransactional
            </summary>
        </member>
        <member name="P:Kusto.Data.DataUpdatePolicy.PropagateIngestionProperties">
            <summary>
            Gets the value of m_propagateIngestionProperties
            </summary>
        </member>
        <member name="T:Kusto.Data.UpdatePolicyKind">
            <summary>
            Whether something sorts from the smallest value to the largest value,
            or the other way around.
            </summary>
        </member>
        <member name="F:Kusto.Data.UpdatePolicyKind.Append">
            <summary>
            Sort from smallest to largest.
            </summary>
        </member>
        <member name="T:Kusto.Data.DataShardingPolicy">
            <summary>
            A policy that defines how to shard ingested data.
            </summary>
            <summary>
            A policy that defines how to shard ingested data
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="F:Kusto.Data.DataShardingPolicy.m_maxRowCount">
            <summary>
            Maximum number of rows per shard (extent)
            </summary>
        </member>
        <member name="F:Kusto.Data.DataShardingPolicy.m_maxExtentSizeInMb">
            <summary>
            (Currently not in effect) Maximum compressed + index size per shard (extent) in Megabytes
            </summary>
        </member>
        <member name="F:Kusto.Data.DataShardingPolicy.m_maxOriginalSizeInMb">
            <summary>
            (Currently not in effect) Maximum original size per shard (extent) in Megabytes
            </summary>
        </member>
        <member name="F:Kusto.Data.DataShardingPolicy.m_useShardEngine">
            <summary>
            If set, new data will be ingested into shards, not extents.
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.#ctor(Kusto.Data.DataShardingPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.NewSetMaxRowCount(System.Int64)">
            <summary>
            Fake Setter for MaxRowCount
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.NewSetMaxExtentSizeInMb(System.Int64)">
            <summary>
            Fake Setter for MaxExtentSizeInMb
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.NewSetMaxOriginalSizeInMb(System.Int64)">
            <summary>
            Fake Setter for MaxOriginalSizeInMb
            </summary>
        </member>
        <member name="M:Kusto.Data.DataShardingPolicy.NewSetUseShardEngine(System.Boolean)">
            <summary>
            Fake Setter for UseShardEngine
            </summary>
        </member>
        <member name="P:Kusto.Data.DataShardingPolicy.MaxRowCount">
            <summary>
            Gets the value of m_maxRowCount
            </summary>
        </member>
        <member name="P:Kusto.Data.DataShardingPolicy.MaxExtentSizeInMb">
            <summary>
            Gets the value of m_maxExtentSizeInMb
            </summary>
        </member>
        <member name="P:Kusto.Data.DataShardingPolicy.MaxOriginalSizeInMb">
            <summary>
            Gets the value of m_maxOriginalSizeInMb
            </summary>
        </member>
        <member name="P:Kusto.Data.DataShardingPolicy.UseShardEngine">
            <summary>
            Gets the value of m_useShardEngine
            </summary>
        </member>
        <member name="T:Kusto.Data.QueryWeakConsistencyPolicy">
            <summary>
            A policy that defines query weak consistency.
            </summary>
            <summary>
            A policy that defines how to manage the weak consistency policy
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="F:Kusto.Data.QueryWeakConsistencyPolicy.m_percentageOfNodes">
            <summary>
            Percentage of nodes from total nodes which participate in the weak consistency service (0-100), -1 for default value
            </summary>
        </member>
        <member name="F:Kusto.Data.QueryWeakConsistencyPolicy.m_enableMetadataPrefetch">
            <summary>
            If enable, all database/cluster MD are prefetch and remain in-memory (otherwise they are loaded only by demand, and evicted after period of time), default false
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.#ctor(Kusto.Data.QueryWeakConsistencyPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.NewSetPercentageOfNodes(System.Int32)">
            <summary>
            Fake Setter for PercentageOfNodes
            </summary>
        </member>
        <member name="M:Kusto.Data.QueryWeakConsistencyPolicy.NewSetEnableMetadataPrefetch(System.Boolean)">
            <summary>
            Fake Setter for EnableMetadataPrefetch
            </summary>
        </member>
        <member name="P:Kusto.Data.QueryWeakConsistencyPolicy.PercentageOfNodes">
            <summary>
            Gets the value of m_percentageOfNodes
            </summary>
        </member>
        <member name="P:Kusto.Data.QueryWeakConsistencyPolicy.EnableMetadataPrefetch">
            <summary>
            Gets the value of m_enableMetadataPrefetch
            </summary>
        </member>
        <member name="T:Kusto.Data.CapacityPolicy">
            <summary>
            A policy that defines how to manage the capacity of virtual resources.
            </summary>
            <summary>
            A policy that defines how to manage the capacity of virtual resources
            </summary>
        </member>
        <member name="F:Kusto.Data.CapacityPolicy.m_ingestionCapacity">
            <summary>
            The cluster's Ingestion capacity
            </summary>
        </member>
        <member name="F:Kusto.Data.CapacityPolicy.m_extentsMergeCapacity">
            <summary>
            The cluster's Extents Merge capacity
            </summary>
        </member>
        <member name="F:Kusto.Data.CapacityPolicy.m_extentsPurgeRebuildCapacity">
            <summary>
            The cluster's Extents Purge Rebuild capacity
            </summary>
        </member>
        <member name="F:Kusto.Data.CapacityPolicy.m_exportCapacity">
            <summary>
            The cluster's Export capacity
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.#ctor(Kusto.Data.IngestionCapacity,Kusto.Data.ExtentsMergeCapacity,Kusto.Data.ExtentsPurgeRebuildCapacity,Kusto.Data.ExportCapacity)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.#ctor(Kusto.Data.CapacityPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.NewSetIngestionCapacity(Kusto.Data.IngestionCapacity)">
            <summary>
            Fake Setter for IngestionCapacity
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.NewSetExtentsMergeCapacity(Kusto.Data.ExtentsMergeCapacity)">
            <summary>
            Fake Setter for ExtentsMergeCapacity
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.NewSetExtentsPurgeRebuildCapacity(Kusto.Data.ExtentsPurgeRebuildCapacity)">
            <summary>
            Fake Setter for ExtentsPurgeRebuildCapacity
            </summary>
        </member>
        <member name="M:Kusto.Data.CapacityPolicy.NewSetExportCapacity(Kusto.Data.ExportCapacity)">
            <summary>
            Fake Setter for ExportCapacity
            </summary>
        </member>
        <member name="P:Kusto.Data.CapacityPolicy.IngestionCapacity">
            <summary>
            Gets the value of m_ingestionCapacity
            </summary>
        </member>
        <member name="P:Kusto.Data.CapacityPolicy.ExtentsMergeCapacity">
            <summary>
            Gets the value of m_extentsMergeCapacity
            </summary>
        </member>
        <member name="P:Kusto.Data.CapacityPolicy.ExtentsPurgeRebuildCapacity">
            <summary>
            Gets the value of m_extentsPurgeRebuildCapacity
            </summary>
        </member>
        <member name="P:Kusto.Data.CapacityPolicy.ExportCapacity">
            <summary>
            Gets the value of m_exportCapacity
            </summary>
        </member>
        <member name="T:Kusto.Data.IngestionCapacity">
            <summary>
            Defines the capacity of the Ingestion virtual resource
            </summary>
        </member>
        <member name="F:Kusto.Data.IngestionCapacity.m_clusterMaximumConcurrentOperations">
            <summary>
            A maximal value for the number of concurrent ingestion operations in a cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.IngestionCapacity.m_coreUtilizationCoefficient">
            <summary>
            A coefficient for the percentage of cores to utilize when calculating the ingestion capacity (the calculation's result will always be normalized by 'ClusterMaximumConcurrentOperations')
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.#ctor(System.Int64,System.Double)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.#ctor(Kusto.Data.IngestionCapacity)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.NewSetClusterMaximumConcurrentOperations(System.Int64)">
            <summary>
            Fake Setter for ClusterMaximumConcurrentOperations
            </summary>
        </member>
        <member name="M:Kusto.Data.IngestionCapacity.NewSetCoreUtilizationCoefficient(System.Double)">
            <summary>
            Fake Setter for CoreUtilizationCoefficient
            </summary>
        </member>
        <member name="P:Kusto.Data.IngestionCapacity.ClusterMaximumConcurrentOperations">
            <summary>
            Gets the value of m_clusterMaximumConcurrentOperations
            </summary>
        </member>
        <member name="P:Kusto.Data.IngestionCapacity.CoreUtilizationCoefficient">
            <summary>
            Gets the value of m_coreUtilizationCoefficient
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtentsMergeCapacity">
            <summary>
            Defines the capacity of the Extents Merge virtual resource
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsMergeCapacity.m_maximumConcurrentOperationsPerNode">
            <summary>
            A maximal value for the number of concurrent extents merge/rebuild operations on a single node
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergeCapacity.#ctor(System.Int64)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergeCapacity.#ctor(Kusto.Data.ExtentsMergeCapacity)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergeCapacity.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergeCapacity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsMergeCapacity.NewSetMaximumConcurrentOperationsPerNode(System.Int64)">
            <summary>
            Fake Setter for MaximumConcurrentOperationsPerNode
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsMergeCapacity.MaximumConcurrentOperationsPerNode">
            <summary>
            Gets the value of m_maximumConcurrentOperationsPerNode
            </summary>
        </member>
        <member name="T:Kusto.Data.ExtentsPurgeRebuildCapacity">
            <summary>
            Defines the capacity of the Extents Purge Rebuild virtual resource
            </summary>
        </member>
        <member name="F:Kusto.Data.ExtentsPurgeRebuildCapacity.m_maximumConcurrentOperationsPerNode">
            <summary>
            A maximal value for the number of concurrent extents purge rebuild operations on a single node
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsPurgeRebuildCapacity.#ctor(System.Int64)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsPurgeRebuildCapacity.#ctor(Kusto.Data.ExtentsPurgeRebuildCapacity)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsPurgeRebuildCapacity.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsPurgeRebuildCapacity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ExtentsPurgeRebuildCapacity.NewSetMaximumConcurrentOperationsPerNode(System.Int64)">
            <summary>
            Fake Setter for MaximumConcurrentOperationsPerNode
            </summary>
        </member>
        <member name="P:Kusto.Data.ExtentsPurgeRebuildCapacity.MaximumConcurrentOperationsPerNode">
            <summary>
            Gets the value of m_maximumConcurrentOperationsPerNode
            </summary>
        </member>
        <member name="T:Kusto.Data.ExportCapacity">
            <summary>
            Defines the capacity of the Export virtual resource
            </summary>
        </member>
        <member name="F:Kusto.Data.ExportCapacity.m_clusterMaximumConcurrentOperations">
            <summary>
            A maximal value for the number of concurrent export operations in a cluster
            </summary>
        </member>
        <member name="F:Kusto.Data.ExportCapacity.m_coreUtilizationCoefficient">
            <summary>
            A coefficient for the percentage of cores to utilize when calculating the export capacity (limited by ClusterMaximumConcurrentOperations)
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.#ctor(System.Int64,System.Double)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.#ctor(Kusto.Data.ExportCapacity)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.NewSetClusterMaximumConcurrentOperations(System.Int64)">
            <summary>
            Fake Setter for ClusterMaximumConcurrentOperations
            </summary>
        </member>
        <member name="M:Kusto.Data.ExportCapacity.NewSetCoreUtilizationCoefficient(System.Double)">
            <summary>
            Fake Setter for CoreUtilizationCoefficient
            </summary>
        </member>
        <member name="P:Kusto.Data.ExportCapacity.ClusterMaximumConcurrentOperations">
            <summary>
            Gets the value of m_clusterMaximumConcurrentOperations
            </summary>
        </member>
        <member name="P:Kusto.Data.ExportCapacity.CoreUtilizationCoefficient">
            <summary>
            Gets the value of m_coreUtilizationCoefficient
            </summary>
        </member>
        <member name="T:Kusto.Data.StreamingIngestionPolicy">
            <summary>
            Defines Streaming Ingestion policy for the table / database, if any row store Id's are defined the new data will be distributed between those row stores. If used on the database level, applied for all the tables in the database.
            </summary>
        </member>
        <member name="F:Kusto.Data.StreamingIngestionPolicy.m_numberOfRowStores">
            <summary>
            The number of row stores to be used for this policy.
            </summary>
        </member>
        <member name="F:Kusto.Data.StreamingIngestionPolicy.m_sealIntervalLimit">
            <summary>
            Limit on the amount of time data of the table can stay unsealed in rowstore
            </summary>
        </member>
        <member name="F:Kusto.Data.StreamingIngestionPolicy.m_sealThresholdBytes">
            <summary>
            RowStore extent sealing threshold (in bytes), override TableSealThresholdBytes of Cluster's RowStore policy
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.#ctor(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{System.Int64})">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.#ctor(Kusto.Data.StreamingIngestionPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.NewSetNumberOfRowStores(System.Int32)">
            <summary>
            Fake Setter for NumberOfRowStores
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.NewSetSealIntervalLimit(System.Nullable{System.TimeSpan})">
            <summary>
            Fake Setter for SealIntervalLimit
            </summary>
        </member>
        <member name="M:Kusto.Data.StreamingIngestionPolicy.NewSetSealThresholdBytes(System.Nullable{System.Int64})">
            <summary>
            Fake Setter for SealThresholdBytes
            </summary>
        </member>
        <member name="P:Kusto.Data.StreamingIngestionPolicy.NumberOfRowStores">
            <summary>
            Gets the value of m_numberOfRowStores
            </summary>
        </member>
        <member name="P:Kusto.Data.StreamingIngestionPolicy.SealIntervalLimit">
            <summary>
            Gets the value of m_sealIntervalLimit
            </summary>
        </member>
        <member name="P:Kusto.Data.StreamingIngestionPolicy.SealThresholdBytes">
            <summary>
            Gets the value of m_sealThresholdBytes
            </summary>
        </member>
        <member name="T:Kusto.Data.RowStorePolicy">
            <summary>
            RowStore policy cluster configuration
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_tableSealThresholdBytes">
            <summary>
            RowStore extent sealing threshold (in bytes)
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_writeAheadDistanceToSizeRatioThreshold">
            <summary>
            Threshold that controls external triggering of write-ahead log trimming  based on ratio between WriteAheadDistance (size of the write ahead log) and the effective size of the data stored in RowStore. The smaller threshold will result in more frequent rate of trimming.
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_storageRoots">
            <summary>
            URL(s) or local path(s) for persistent storages for rowstores
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_unsealedSizePerKeyLimit">
            <summary>
            Max unsealed data size per key in rowstore
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_insertsConcurrencyLimit">
            <summary>
            Max concurrent insert operations to rowstore
            </summary>
        </member>
        <member name="F:Kusto.Data.RowStorePolicy.m_keyInsertsConcurrencyLimit">
            <summary>
            Max concurrent insert operations to key in rowstore
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.#ctor(System.Int64,System.Double,System.Collections.Immutable.ImmutableArray{System.String},System.UInt64,System.Int64,System.Int64)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.#ctor(Kusto.Data.RowStorePolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetTableSealThresholdBytes(System.Int64)">
            <summary>
            Fake Setter for TableSealThresholdBytes
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetWriteAheadDistanceToSizeRatioThreshold(System.Double)">
            <summary>
            Fake Setter for WriteAheadDistanceToSizeRatioThreshold
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetStorageRoots(System.Collections.Immutable.ImmutableArray{System.String})">
            <summary>
            Fake Setter for StorageRoots
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetUnsealedSizePerKeyLimit(System.UInt64)">
            <summary>
            Fake Setter for UnsealedSizePerKeyLimit
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetInsertsConcurrencyLimit(System.Int64)">
            <summary>
            Fake Setter for InsertsConcurrencyLimit
            </summary>
        </member>
        <member name="M:Kusto.Data.RowStorePolicy.NewSetKeyInsertsConcurrencyLimit(System.Int64)">
            <summary>
            Fake Setter for KeyInsertsConcurrencyLimit
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.TableSealThresholdBytes">
            <summary>
            Gets the value of m_tableSealThresholdBytes
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.WriteAheadDistanceToSizeRatioThreshold">
            <summary>
            Gets the value of m_writeAheadDistanceToSizeRatioThreshold
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.StorageRoots">
            <summary>
            Gets the value of m_storageRoots
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.UnsealedSizePerKeyLimit">
            <summary>
            Gets the value of m_unsealedSizePerKeyLimit
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.InsertsConcurrencyLimit">
            <summary>
            Gets the value of m_insertsConcurrencyLimit
            </summary>
        </member>
        <member name="P:Kusto.Data.RowStorePolicy.KeyInsertsConcurrencyLimit">
            <summary>
            Gets the value of m_keyInsertsConcurrencyLimit
            </summary>
        </member>
        <member name="T:Kusto.Data.DataPartitioningPolicy">
            <summary>
            A policy that defines how to partition data in a table
            </summary>
            <summary>
            A policy that defines how to partition data in a table
            </summary>
        </member>
        <member name="F:Kusto.Data.DataPartitioningPolicy.m_partitionKey">
            <summary>
            The name of a string column to partition the data by
            </summary>
        </member>
        <member name="F:Kusto.Data.DataPartitioningPolicy.m_partitionFunction">
            <summary>
            The name of the function to use for partitioning the data
            </summary>
        </member>
        <member name="F:Kusto.Data.DataPartitioningPolicy.m_maxPartitionCount">
            <summary>
            The maximum number of partitions to create
            </summary>
        </member>
        <member name="F:Kusto.Data.DataPartitioningPolicy.m_dateTimePartitionKey">
            <summary>
            [optional] The name of a datetime column to partition the data by
            </summary>
        </member>
        <member name="F:Kusto.Data.DataPartitioningPolicy.m_effectiveDateTime">
            <summary>
            UTC datetime in which the policy went into effect
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.#ctor">
            <summary>
            Parameterless constructor (used also during deserialization)
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.#ctor(System.String,Kusto.Data.Common.DataPartitioningFunction,System.Int32,System.String,System.DateTime)">
            <summary>
            Constructor with all fields
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.#ctor(Kusto.Data.DataPartitioningPolicy)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            'Cook' transport fields before serialization starts
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Convert transport fields into actual fields following serialization
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.NewSetPartitionKey(System.String)">
            <summary>
            Fake Setter for PartitionKey
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.NewSetPartitionFunction(Kusto.Data.Common.DataPartitioningFunction)">
            <summary>
            Fake Setter for PartitionFunction
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.NewSetMaxPartitionCount(System.Int32)">
            <summary>
            Fake Setter for MaxPartitionCount
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.NewSetDateTimePartitionKey(System.String)">
            <summary>
            Fake Setter for DateTimePartitionKey
            </summary>
        </member>
        <member name="M:Kusto.Data.DataPartitioningPolicy.NewSetEffectiveDateTime(System.DateTime)">
            <summary>
            Fake Setter for EffectiveDateTime
            </summary>
        </member>
        <member name="P:Kusto.Data.DataPartitioningPolicy.PartitionKey">
            <summary>
            Gets the value of m_partitionKey
            </summary>
        </member>
        <member name="P:Kusto.Data.DataPartitioningPolicy.PartitionFunction">
            <summary>
            Gets the value of m_partitionFunction
            </summary>
        </member>
        <member name="P:Kusto.Data.DataPartitioningPolicy.MaxPartitionCount">
            <summary>
            Gets the value of m_maxPartitionCount
            </summary>
        </member>
        <member name="P:Kusto.Data.DataPartitioningPolicy.DateTimePartitionKey">
            <summary>
            Gets the value of m_dateTimePartitionKey
            </summary>
        </member>
        <member name="P:Kusto.Data.DataPartitioningPolicy.EffectiveDateTime">
            <summary>
            Gets the value of m_effectiveDateTime
            </summary>
        </member>
        <member name="T:Kusto.Data.WellKnownDataSet">
            <summary>
            Categorizes data tables according to the role they play in the data set
            that a Kusto query returns.
            </summary>
            <remarks>This enum is a mirror of an enum with the same name @ ExtentService/Query/ResultSetEnumerator.h</remarks>
        </member>
        <member name="F:Kusto.Data.WellKnownDataSet.PrimaryResult">
            <summary>
            The main tabular value returned by the request.
            (Note that some requests may return more than a single
            primary result.)
            </summary>
        </member>
        <member name="F:Kusto.Data.WellKnownDataSet.TableOfContents">
            <summary>
            The table-of-contents -- a table that provides information for
            all other tables in the set.
            </summary>
        </member>
        <member name="F:Kusto.Data.WellKnownDataSet.QueryProperties">
            <summary>
            The "@ExtendedProperties" table, carrying visualization information
            and database cursor information.
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSet">
            <summary>
            Represents a data set whose tables arrive in a progressive manner, not all at once.
            This puts the burden on the reader to correctly construct the tables,
            but makes it possible to start processing partial results immediately.
            </summary>
        </member>
        <member name="E:Kusto.Data.Results.ProgressiveDataSet.Disposing">
            <summary>
            An event that gets raised before the inner stream is disposed.
            </summary>
        </member>
        <member name="E:Kusto.Data.Results.ProgressiveDataSet.Disposed">
            <summary>
            An event that gets raised after the inner stream is disposed.
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSetFrame">
            <summary>
            A "progressive data set" is a data set whose
            individual data tables are built gradually, frame-by-frame,
            according to some data source. Some of the frames may even
            "override" previous frames, and some of them indicate
            the current state of progression and hold data that does
            not translate into "useful" payload.

            The ProgressiveDataSetFrame is the base class for all types
            of frames that the progressive data set may have.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetFrame.FrameType">
            <summary>
            Gets the type of the frame.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableSchemaFrame.TableId">
            <summary>
            Uniquely identifies the data table in the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableSchemaFrame.TableKind">
            <summary>
            The data table kind.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableSchemaFrame.TableName">
            <summary>
            The data table name
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableSchemaFrame.TableSchema">
            <summary>
            The schema of the data table.
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame">
            <summary>
            Provides the data for a single frame of the data table.
            The data (one or more records) may be appended to the
            data table that was already transmitted, or may replace
            whatever got transmitted completely.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame.TableId">
            <summary>
            Uniquely identifies the data table in the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame.FieldCount">
            <summary>
            The number of fields (columns) in each record.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame.FrameSubType">
            <summary>
            Gets the fragment type, which indicates how this table fragment is related
            to the ones that preceded it.
            </summary>
        </member>
        <member name="M:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame.GetNextRecord(System.Object[])">
            <summary>
            Get the next record in this data table fragment.
            </summary>
            <param name="values">A non-null array of size FieldCount
            that is set with the values of each cell in the record
            on success.</param>
            <returns>TODO:</returns>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSetTableProgressFrame">
            <summary>
            Reports the progress so far for the given data table.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetTableProgressFrame.TableId">
            <summary>
            Identifies the data table.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetTableProgressFrame.TableProgress">
            <summary>
            Progress in percent (0--100).
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSetTableCompletionFrame">
            <summary>
            Reports that the data table has been completed and there
            will be no further updates on it.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetTableCompletionFrame.TableId">
            <summary>
            Identifies the data table.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetTableCompletionFrame.RowCount">
            <summary>
            The __final__ number of rows in the table
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFrame.TableId">
            <summary>
            Identifies the data table.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFrame.TableKind">
            <summary>
            The data table kind.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetDataTableFrame.TableName">
            <summary>
            The data table name
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.ProgressiveDataSetCompletionFrame">
            <summary>
            Reports that the data set has been completed.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetCompletionFrame.HasErrors">
            <summary>
            Gets a flag indicating whether there was any error in producing
            the data set.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetCompletionFrame.Cancelled">
            <summary>
            Gets a flag indicating that the data set transmission was cancelled
            mid-way and might be incomplete as a result.
            </summary>
        </member>
        <member name="P:Kusto.Data.Results.ProgressiveDataSetCompletionFrame.Exception">
            <summary>
            Gets the exception, if any, that interrupted the transimission
            of this data set.
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.FrameType">
            <summary>
            The type of the <see cref="T:Kusto.Data.Results.ProgressiveDataSetFrame" />.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.DataSetHeader">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetHeaderFrame" />  frame,
            which is the first frame in the protocol (contains protocol metadata - just a version for now)
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.TableHeader">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetDataTableSchemaFrame" /> frame,
            which is the first frame for a new data table in the data set
            and describes the table and its schema.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.TableFragment">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame" /> frame,
            which includes the data table records.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.TableCompletion">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetTableCompletionFrame" /> frame,
            which is the last frame of the data table.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.TableProgress">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetTableProgressFrame" /> frame,
            which informs of the progress made so far in a data table.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.DataTable">
            <summary>
             This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetDataTableFrame" /> frame,
             which represents a (usually) small table which includes the entire table schema and data
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.FrameType.DataSetCompletion">
            <summary>
            This is a <see cref="T:Kusto.Data.Results.ProgressiveDataSetCompletionFrame" /> frame,
            which is the last frame of the entire data set.
            </summary>
        </member>
        <member name="T:Kusto.Data.Results.TableFragmentType">
            <summary>
            Indicates how is this <see cref="T:Kusto.Data.Results.ProgressiveDataSetDataTableFragmentFrame" /> frame
            related to the previous such frame that preceded it.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.TableFragmentType.DataAppend">
            <summary>
            This frame adds additional records on top of the previous records.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.TableFragmentType.DataReplace">
            <summary>
            This frame replaces all previous records.
            </summary>
        </member>
        <member name="F:Kusto.Data.Results.TableFragmentType.DataRemove">
            <summary>
            TODO: Ask Amit what that is...
            </summary>
        </member>
        <member name="T:Kusto.Data.Exceptions.EntityNotFoundException">
            <summary>
            Raised to indicate the failure to locate an entity.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Int32,System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class and the fields of the base classes except for EntityId and EntityKind.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 0.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "null".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is false.</param>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNotFoundException.EntityKind">
            <summary>
            The kind of the entity
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNotFoundException.EntityId">
            <summary>
            The id of the entity
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslInvalidQueryException">
            <summary>
            Raised to indicate a query failure due to the query itself
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslInvalidQueryException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslInvalidQueryException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInvalidQueryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingConstantNodeType">
            <summary>
            Raised to indicate that translating a query was aborted as the expression node type does not yield a constant value
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingConstantNodeType.NodeType">
            <summary>
            The node type
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingConstantNodeType.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingConstantNodeType.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantNodeType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException">
            <summary>
            Raised to indicate that translating a query was aborted as the type argument to operator new is not supported
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.NodeType">
            <summary>
            The node type
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedTypeInNewExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslNotSupportedException">
            <summary>
            Raised to indicate that translating a query was aborted as it includes a method for which there's no support
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslNotSupportedException.MethodName">
            <summary>
            The name of the unsupported method
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslNotSupportedException.Expression">
            <summary>
            The expression yielding the exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="methodName">The name of the unsupported method</param>
            <param name="expression">The expression yielding the exception</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="methodName">The name of the unsupported method</param>
            <param name="expression">The expression yielding the exception</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslNotSupportedException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslNotSupportedException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException">
            <summary>
            Raised to indicate that translating a query was aborted as the method arity is not supported
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.MethodName">
            <summary>
            The name of the unsupported method
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Arity">
            <summary>
            The arity that was requested
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="methodName">The name of the unsupported method</param>
            <param name="arity">The arity that was requested</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.#ctor(System.String,System.Int32,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="methodName">The name of the unsupported method</param>
            <param name="arity">The arity that was requested</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslUnsupportedMethodArityInExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException">
            <summary>
            Raised to indicate that translating a query was aborted due to an internal failure
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Error">
            <summary>
            A brief description of the error
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.AlreadyParsed">
            <summary>
            The expression that was already parsed successfully
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="error">A brief description of the error</param>
            <param name="alreadyParsed">The expression that was already parsed successfully</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="error">A brief description of the error</param>
            <param name="alreadyParsed">The expression that was already parsed successfully</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslInternalQueryTranslationErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingConstantExpressionException">
            <summary>
            Raised to indicate that an expression should represent a constant, not calculation
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Expression">
            <summary>
            Identifies the expression node
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="expression">Identifies the expression node</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="expression">Identifies the expression node</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingConstantExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException">
            <summary>
            Raised to indicate that a System.Linq.Expressions.Expression has an unsupported node type
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.NodeType">
            <summary>
            The node type
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.BaseType">
            <summary>
            The type of the node's base'
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Assembly">
            <summary>
            The assembly of the node
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Expression">
            <summary>
            The part of the expression already processed
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="baseType">The type of the node's base'</param>
            <param name="assembly">The assembly of the node</param>
            <param name="expression">The part of the expression already processed</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="nodeType">The node type</param>
            <param name="baseType">The type of the node's base'</param>
            <param name="assembly">The assembly of the node</param>
            <param name="expression">The part of the expression already processed</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpressionHasUnsupportedNodeTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException">
            <summary>
            Raised to incdicate that a binary operator combined two expressions with incompatible types
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Op">
            <summary>
            The operator
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Left">
            <summary>
            The left type
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Right">
            <summary>
            The right type
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Expression">
            <summary>
            The relevant expression
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="op">The operator</param>
            <param name="left">The left type</param>
            <param name="right">The right type</param>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="op">The operator</param>
            <param name="left">The left type</param>
            <param name="right">The right type</param>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslBinaryOperationHasIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingScalarExpressionException">
            <summary>
            Raised when the parser is in a state expecting a scalar expression
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Expression">
            <summary>
            The relevant expression
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingTableExpressionException">
            <summary>
            Raised when the parser is in a state expecting a table expression
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Expression">
            <summary>
            The relevant expression
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingTableExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingTableExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingTableExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException">
            <summary>
            Raised when the parser is in a state expecting a boolean lambda expression
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Expression">
            <summary>
            The relevant expression
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingBooleanLambdaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException">
            <summary>
            Raised when the expression is expected to be a lambda expression performing scalar projection
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Expression">
            <summary>
            The relevant expression
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.#ctor(System.Linq.Expressions.Expression,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.#ctor(System.Linq.Expressions.Expression,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="expression">The relevant expression</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.CslExpectingScalarProjectionLambdaExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoException">
            <summary>
            Base class for all exceptions raised by the Kusto Client Libraries
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoException.creationMessage">
            <summary>
            The message provided to the constructor, if any.
            (It is recommended the creation message remain null, and
            the .t4-provided message template be used instead.)
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoException.alreadyTraced">
            <summary>
            Records if the exception was traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.CreationContext">
            <summary>
            Gets the context captured when the exception object was created.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.FailureCode">
            <summary>
            Gets the failure code (a numeric value similar to the HTTP status code) of the exception, or 0.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.FailureSubCode">
            <summary>
            Gets the failure sub code of the exception, or null.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.IsPermanent">
            <summary>
            Gets a Boolean indicating whether the exception is permanent and should not be retried, or false.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoRequestException">
            <summary>
            Raised when the Kusto service was sent a bad request.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.ErrorCode">
            <summary>
            A code indicating the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.ErrorReason">
            <summary>
            A short description of the nature of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.ErrorMessage">
            <summary>
            A more detailed description of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.DataSource">
            <summary>
            The Kusto service that has returned the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.DatabaseName">
            <summary>
            The Kusto database indicated by the request as the default database.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.ClientRequestId">
            <summary>
            The correlation ID provided by the client
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoRequestException.ActivityId">
            <summary>
            The correlation ID used by the service
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoBadRequestException">
            <summary>
            Raised when the Kusto service was sent a bad request (could not be parsed, or had semantic errors, etc.).
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Bad request".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Bad request".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoBadRequestException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoBadRequestException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoBadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoConflictException">
            <summary>
            Raised when the Kusto service was sent a request which cannot be performed due to service state.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 409.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Conflict".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 409.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Conflict".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoConflictException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoConflictException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.SyntaxException">
            <summary>
            Raised to indicate a syntax error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SyntaxException.Text">
            <summary>
            The text that could not be parsed.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SyntaxException.ParseErrors">
            <summary>
            The errors reported by the parser.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SyntaxException.Line">
            <summary>
            Line in the text where parse failure occurred.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SyntaxException.CharacterPositionInLine">
            <summary>
            Character in line where parse failure occurred.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SyntaxException.Token">
            <summary>
            Token where parse failure occurred.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="text">The text that could not be parsed.</param>
            <param name="parseErrors">The errors reported by the parser.</param>
            <param name="line">Line in the text where parse failure occurred.</param>
            <param name="characterPositionInLine">Character in line where parse failure occurred.</param>
            <param name="token">Token where parse failure occurred.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="text">The text that could not be parsed.</param>
            <param name="parseErrors">The errors reported by the parser.</param>
            <param name="line">Line in the text where parse failure occurred.</param>
            <param name="characterPositionInLine">Character in line where parse failure occurred.</param>
            <param name="token">Token where parse failure occurred.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="text">The text that could not be parsed.</param>
            <param name="parseErrors">The errors reported by the parser.</param>
            <param name="line">Line in the text where parse failure occurred.</param>
            <param name="characterPositionInLine">Character in line where parse failure occurred.</param>
            <param name="token">Token where parse failure occurred.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="text">The text that could not be parsed.</param>
            <param name="parseErrors">The errors reported by the parser.</param>
            <param name="line">Line in the text where parse failure occurred.</param>
            <param name="characterPositionInLine">Character in line where parse failure occurred.</param>
            <param name="token">Token where parse failure occurred.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.SyntaxException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.SyntaxException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SyntaxException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.InvalidLiteralFormatException">
            <summary>
            Raised to indicate that parsing a literal failed due to bad formatting
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.InvalidLiteralFormatException.LiteralText">
            <summary>
            The text that could not be parsed.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.InvalidLiteralFormatException.LiteralType">
            <summary>
            The type of the literal we're trying to create.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="literalText">The text that could not be parsed.</param>
            <param name="literalType">The type of the literal we're trying to create.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="literalText">The text that could not be parsed.</param>
            <param name="literalType">The type of the literal we're trying to create.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.InvalidLiteralFormatException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.InvalidLiteralFormatException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InvalidLiteralFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.InappropriateNullLiteralException">
            <summary>
            Raised to indicate that the null literal cannot appear in the context that it appears in
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.InappropriateNullLiteralException.LiteralType">
            <summary>
            The type of the literal we're trying to create.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="literalType">The type of the literal we're trying to create.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="literalType">The type of the literal we're trying to create.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.InappropriateNullLiteralException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.InappropriateNullLiteralException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.InappropriateNullLiteralException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.SemanticException">
            <summary>
            Raised to indicate a semantic error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SemanticException.Text">
            <summary>
            The text that has the semantic error
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.SemanticException.SemanticErrors">
            <summary>
            The semantic errors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.SemanticException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.SemanticException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.SemanticException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException">
            <summary>
            Raised to indicate the failure to locate an entity in weak consistency mode.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.EntityKind">
            <summary>
            The kind of the entity
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.EntityId">
            <summary>
            The id of the entity
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.WeakConsistencyEntityNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.EntityNotFoundInContainerException">
            <summary>
            Raised to indicate the failure to locate an entity.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNotFoundInContainerException.EntityKind">
            <summary>
            The kind of the entity
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNotFoundInContainerException.EntityId">
            <summary>
            The id of the entity
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Container">
            <summary>
            The container that we expected the entity to be in.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="container">The container that we expected the entity to be in.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="container">The container that we expected the entity to be in.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="container">The container that we expected the entity to be in.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="entityKind">The kind of the entity</param>
            <param name="entityId">The id of the entity</param>
            <param name="container">The container that we expected the entity to be in.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityNotFoundInContainerException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityNotFoundInContainerException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNotFoundInContainerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.DatabaseNotFoundException">
            <summary>
            Raised to indicate the failure to locate a database.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DatabaseNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DatabaseNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.DatabaseNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.DatabaseNotFoundException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DatabaseNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.TableNotFoundException">
            <summary>
            Raised to indicate the failure to locate a table
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.TableNotFoundException.TableName">
            <summary>
            The name of the table
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="tableName">The name of the table</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_TableNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="tableName">The name of the table</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_TableNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="tableName">The name of the table</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_TableNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="tableName">The name of the table</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_TableNotExist".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.TableNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.TableNotFoundException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.TableNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.MappingNotFoundException">
            <summary>
            Raised to indicate the failure to locate a mapping reference
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.MappingNotFoundException.MappingName">
            <summary>
            The name of the mapping
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.MappingNotFoundException.MappingType">
            <summary>
            The type of the mapping
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="mappingName">The name of the mapping</param>
            <param name="mappingType">The type of the mapping</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_MappingReferenceWasNotFound".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="mappingName">The name of the mapping</param>
            <param name="mappingType">The type of the mapping</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_MappingReferenceWasNotFound".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="mappingName">The name of the mapping</param>
            <param name="mappingType">The type of the mapping</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_MappingReferenceWasNotFound".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="mappingName">The name of the mapping</param>
            <param name="mappingType">The type of the mapping</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_MappingReferenceWasNotFound".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.MappingNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.MappingNotFoundException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.RelopSemanticException">
            <summary>
            Raised to indicate a semantic error that happend during relop compilation phase.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.RelopSemanticException.Text">
            <summary>
            The text that has the semantic error
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.RelopSemanticException.SemanticErrors">
            <summary>
            The semantic errors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="text">The text that has the semantic error</param>
            <param name="semanticErrors">The semantic errors</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.RelopSemanticException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.RelopSemanticException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.RelopSemanticException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.EntityNameIsNotValidException">
            <summary>
            Raised to indicate that the entity name is not valid.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNameIsNotValidException.EntityKind">
            <summary>
            The entity kind
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNameIsNotValidException.PropertyName">
            <summary>
            The entity property name which name was violated
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNameIsNotValidException.EntityName">
            <summary>
            The (invalid) entity name
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityNameIsNotValidException.Reason">
            <summary>
            The reason provided for why we've failed.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which name was violated</param>
            <param name="entityName">The (invalid) entity name</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which name was violated</param>
            <param name="entityName">The (invalid) entity name</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which name was violated</param>
            <param name="entityName">The (invalid) entity name</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which name was violated</param>
            <param name="entityName">The (invalid) entity name</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityNameIsNotValidException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityNameIsNotValidException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityNameIsNotValidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.EntityTypeIsNotValidException">
            <summary>
            Raised to indicate that the entity type is unsupported.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityTypeIsNotValidException.EntityKind">
            <summary>
            The entity kind
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityTypeIsNotValidException.PropertyName">
            <summary>
            The entity property name which type is unsupported
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityTypeIsNotValidException.CslType">
            <summary>
            The (invalid) entity type
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Reason">
            <summary>
            The reason provided for why we've failed.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which type is unsupported</param>
            <param name="cslType">The (invalid) entity type</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which type is unsupported</param>
            <param name="cslType">The (invalid) entity type</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which type is unsupported</param>
            <param name="cslType">The (invalid) entity type</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="entityKind">The entity kind</param>
            <param name="propertyName">The entity property name which type is unsupported</param>
            <param name="cslType">The (invalid) entity type</param>
            <param name="reason">The reason provided for why we've failed.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityTypeIsNotValidException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.EntityTypeIsNotValidException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.EntityTypeIsNotValidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException">
            <summary>
            Raised when the csl tree exceeds depth limits.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.QueryCslTreeExceedsDepthsLimitsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoRequestDeniedException">
            <summary>
            Raised when the Kusto service was sent a request with insufficient security permissions to execute.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 403.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Forbidden".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 403.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Forbidden".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestDeniedException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestDeniedException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException">
            <summary>
            Raised when the payload is too large, for example when Kusto is told to process more data than is allowed in a single batch.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 413.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Payload too large".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 413.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "Payload too large".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestPayloadTooLargeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoServiceException">
            <summary>
            Raised when the Kusto service was unable to process a request.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.ErrorCode">
            <summary>
            A code indicating the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.ErrorReason">
            <summary>
            A short description of the nature of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.ErrorMessage">
            <summary>
            A more detailed description of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.DataSource">
            <summary>
            The Kusto service that has returned the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.DatabaseName">
            <summary>
            The Kusto database indicated by the request as the default database.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.ClientRequestId">
            <summary>
            The correlation ID provided by the client
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServiceException.ActivityId">
            <summary>
            The correlation ID used by the service
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServiceException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServiceException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoRequestThrottledException">
            <summary>
            Raised when the request is denied due to throttling.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 429.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "TooManyRequests".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is false.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 429.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "TooManyRequests".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is false.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestThrottledException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoRequestThrottledException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoRequestThrottledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoServiceTimeoutException">
            <summary>
            Raised when request execution has timed-out on the service side.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 504.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "RequestExecutionTimeout".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is false.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 504.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "RequestExecutionTimeout".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is false.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServiceTimeoutException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServiceTimeoutException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServiceTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException">
            <summary>
            Raised when query execution has started successfuly, but failed prior to completion.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Error">
            <summary>
            The error returned by the Kusto DataEngine
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.DatabaseName">
            <summary>
            The name of the database being queried
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Query">
            <summary>
            The query whose execution failed
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.ClientRequestId">
            <summary>
            The correlation ID provided by the client
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.ActivityId">
            <summary>
            The correlation ID used by the service
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.QueryStatusLog">
            <summary>
            The query status log returned by the Kusto DataEngine
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Collections.Generic.IEnumerable{Kusto.Data.QueryStatusLog},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="error">The error returned by the Kusto DataEngine</param>
            <param name="databaseName">The name of the database being queried</param>
            <param name="query">The query whose execution failed</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="queryStatusLog">The query status log returned by the Kusto DataEngine</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Collections.Generic.IEnumerable{Kusto.Data.QueryStatusLog},System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="error">The error returned by the Kusto DataEngine</param>
            <param name="databaseName">The name of the database being queried</param>
            <param name="query">The query whose execution failed</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="queryStatusLog">The query status log returned by the Kusto DataEngine</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientException">
            <summary>
            Raised when a Kusto client is unable to send or complete a request.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientException.ErrorMessage">
            <summary>
            A more detailed description of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientException.DataSource">
            <summary>
            The Kusto service that has returned the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientException.DatabaseName">
            <summary>
            The Kusto database indicated by the request as the default database.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientException.ClientRequestId">
            <summary>
            The correlation ID provided by the client
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException">
            <summary>
            Raised when a Kusto client failed to resolve the service name.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNameResolutionFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientTimeoutException">
            <summary>
            Raised when a Kusto client is unable to send or complete a request due to a client-side timeout.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientTimeoutException.Timeout">
            <summary>
            The timeout set for the failing request.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.TimeSpan,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="timeout">The timeout set for the failing request.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.TimeSpan,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="timeout">The timeout set for the failing request.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.TimeSpan,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="timeout">The timeout set for the failing request.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.#ctor(System.TimeSpan,System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="timeout">The timeout set for the failing request.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTimeoutException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTimeoutException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException">
            <summary>
            Raised when a Kusto client is asked to transmit a ClientRequestProperties object with non-null PrincipalIdentity.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientPrincipalIdentityMustBeNullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientAuthenticationException">
            <summary>
            Raised on the client-side when an authentication flow fails
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientAuthenticationException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientAuthenticationException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientUserAuthenticationException">
            <summary>
            Raised on the client-side when AAD User authentication fails
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException">
            <summary>
            Raised on the client-side when AAD Application authentication fails
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException">
            <summary>
            Raised when certificate required for application authentication is not found
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.CertificateIdentification">
            <summary>
            The certificate identification
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="certificateIdentification">The certificate identification</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="certificateIdentification">The certificate identification</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="certificateIdentification">The certificate identification</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="certificateIdentification">The certificate identification</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientApplicationCertificateNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException">
            <summary>
            Raised on the client-side when it fails to authenticate to AAD
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientUserInteractiveModeNotValidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException">
            <summary>
            Raised when timing out awaiting for the completion of a pending operation
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.OperationId">
            <summary>
            The operation ID
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Timeout">
            <summary>
            The timeout value
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.Guid,System.TimeSpan,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="operationId">The operation ID</param>
            <param name="timeout">The timeout value</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.Guid,System.TimeSpan,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="operationId">The operation ID</param>
            <param name="timeout">The timeout value</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.Guid,System.TimeSpan,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="operationId">The operation ID</param>
            <param name="timeout">The timeout value</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.#ctor(System.Guid,System.TimeSpan,System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="operationId">The operation ID</param>
            <param name="timeout">The timeout value</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTimeoutAwaitingPendingOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException">
            <summary>
            Raised when a command to retrieve temporary storage has failed
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientTemporaryStorageRetrievalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException">
            <summary>
            Raised when Kusto Connection String Builder is initialized with conflicting or insufficient properties
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.InitializationErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="initializationErrorMessage">The error message</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="initializationErrorMessage">The error message</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="initializationErrorMessage">The error message</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="initializationErrorMessage">The error message</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientInvalidConnectionStringException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoDataStreamException">
            <summary>
            Generic exception that carries error information inside a Kusto Data Stream
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoDataStreamException.ErrorCode">
            <summary>
            A code describing the error
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoDataStreamException.ErrorMessage">
            <summary>
            A short description of the nature of the error.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoDataStreamException.creationMessage">
            <summary>
            The message provided to the constructor, if any.
            (It is recommended the creation message remain null, and
            the .t4-provided message template be used instead.)
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.KustoDataStreamException.alreadyTraced">
            <summary>
            Records if the exception was traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.CreationContext">
            <summary>
            Gets the context captured when the exception object was created.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.FailureCode">
            <summary>
            Gets the failure code (a numeric value similar to the HTTP status code) of the exception, or 0.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.FailureSubCode">
            <summary>
            Gets the failure sub code of the exception, or null.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.IsPermanent">
            <summary>
            Gets a Boolean indicating whether the exception is permanent and should not be retried, or false.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.#ctor(System.UInt32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="errorCode">A code describing the error</param>
            <param name="errorMessage">A short description of the nature of the error.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.#ctor(System.UInt32,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="errorCode">A code describing the error</param>
            <param name="errorMessage">A short description of the nature of the error.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoDataStreamException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoDataStreamException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException">
            <summary>
            Bla
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.#ctor(System.UInt32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code describing the error</param>
            <param name="errorMessage">A short description of the nature of the error.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "LimitsExceeded".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.#ctor(System.UInt32,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code describing the error</param>
            <param name="errorMessage">A short description of the nature of the error.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "LimitsExceeded".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoServicePartialQueryFailureLimitsExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.FormatNotSupportedException">
            <summary>
            Raised to indicate that the format provided is not supported.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.FormatNotSupportedException.FormatProvided">
            <summary>
            The format provided by the ingestion properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="formatProvided">The format provided by the ingestion properties.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_FormatNotSupported".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="formatProvided">The format provided by the ingestion properties.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_FormatNotSupported".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="formatProvided">The format provided by the ingestion properties.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_FormatNotSupported".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="formatProvided">The format provided by the ingestion properties.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_FormatNotSupported".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.FormatNotSupportedException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.FormatNotSupportedException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.FormatNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException">
            <summary>
            Raised to indicate that the ingestion property is not supported in this context.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.IngestionProperty">
            <summary>
            The un-supported ingestion property.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Context">
            <summary>
            The specific context in which the ingestion property is not supported.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="ingestionProperty">The un-supported ingestion property.</param>
            <param name="context">The specific context in which the ingestion property is not supported.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_IngestionPropertyNotSupportedInThisContext".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="ingestionProperty">The un-supported ingestion property.</param>
            <param name="context">The specific context in which the ingestion property is not supported.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_IngestionPropertyNotSupportedInThisContext".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="ingestionProperty">The un-supported ingestion property.</param>
            <param name="context">The specific context in which the ingestion property is not supported.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_IngestionPropertyNotSupportedInThisContext".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="ingestionProperty">The un-supported ingestion property.</param>
            <param name="context">The specific context in which the ingestion property is not supported.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_IngestionPropertyNotSupportedInThisContext".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.IngestionPropertyNotSupportedInThisContextException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.DuplicateMappingException">
            <summary>
            Raised to indicate that the ingestion properties contains ingestion mapping and ingestion mapping reference.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.DuplicateMappingException.MappingType">
            <summary>
            The type of the mapping.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="mappingType">The type of the mapping.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DuplicateMapping".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="mappingType">The type of the mapping.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DuplicateMapping".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor(System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="mappingType">The type of the mapping.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DuplicateMapping".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="mappingType">The type of the mapping.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_DuplicateMapping".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.DuplicateMappingException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.DuplicateMappingException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.DuplicateMappingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.MappingNotValidException">
            <summary>
            Raised to indicate that the ingestion properties contains ingestion mapping and ingestion mapping reference.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.MappingNotValidException.Mapping">
            <summary>
            The type of the mapping.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.MappingNotValidException.MappingType">
            <summary>
            The type of the mapping.
            </summary>
        </member>
        <member name="F:Kusto.Data.Exceptions.MappingNotValidException.InvalidityReason">
            <summary>
            The type of the mapping.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class.
            </summary>
            <param name="mapping">The type of the mapping.</param>
            <param name="mappingType">The type of the mapping.</param>
            <param name="invalidityReason">The type of the mapping.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_InvalidMappingReference".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class
            and the fields of the base classes.
            </summary>
            <param name="mapping">The type of the mapping.</param>
            <param name="mappingType">The type of the mapping.</param>
            <param name="invalidityReason">The type of the mapping.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_InvalidMappingReference".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class plus an inner exception.
            </summary>
            <param name="mapping">The type of the mapping.</param>
            <param name="mappingType">The type of the mapping.</param>
            <param name="invalidityReason">The type of the mapping.</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_InvalidMappingReference".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all fields of the class,
            the fields of the base classes plus an inner exception.
            </summary>
            <param name="mapping">The type of the mapping.</param>
            <param name="mappingType">The type of the mapping.</param>
            <param name="invalidityReason">The type of the mapping.</param>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to 400.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to "BadRequest_InvalidMappingReference".</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is true.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.MappingNotValidException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.MappingNotValidException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.MappingNotValidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoClientNotSupportedException">
            <summary>
            Raised on the client-side when a feature is not supported by Kusto .Net Core client
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.#ctor(System.String,System.String,System.String,System.String,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientNotSupportedException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoClientNotSupportedException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoClientNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException">
            <summary>
            Raised on when the CM failed to change service state
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.Construct(System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method holds the logic common to all constructors
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.Construct_Debugger">
            <summary>
            If this class is marked for debugging, attach to a debugger.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.Construct_ExceptionCreationContext(System.Boolean)">
            <summary>
            Initialize the exception creation context member.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.Construct_Trace">
            <summary>
            Trace the fact that the constructor has been called,
            which usually indicates that the exception will be raised.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.#ctor">
            <summary>
            Constructor with no arguments
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with a message string and an inner exception
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T: System.Runtime.Serialization.SeraizliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base classed.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Exception,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Constructor which accepts all the fields of the base class plus an inner exception.
            </summary>
            <param name="errorCode">A code indicating the error.</param>
            <param name="errorReason">A short description of the nature of the error.</param>
            <param name="errorMessage">A more detailed description of the error.</param>
            <param name="dataSource">The Kusto service that has returned the error.</param>
            <param name="databaseName">The Kusto database indicated by the request as the default database.</param>
            <param name="clientRequestId">The correlation ID provided by the client</param>
            <param name="activityId">The correlation ID used by the service</param>
            <param name="failureCode">Gets the failure code associated with the exception. This is a numeric value similar to the HTTP status code), and defaults to null.</param>
            <param name="failureSubCode">Gets the failure sub-code associated with the exception. This is a string value which elaborates on the failure code, and defaults to null.</param>
            <param name="isPermanent">Gets a Boolean indicating whether the exception is permanent and should not be retried. The deault is null.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.AlreadyTraced">
            <summary>
            Gets whether the exception object was already traced during construction.
            </summary>
        </member>
        <member name="P:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.Message">
            <summary>
            Overrides <see cref="P:System.Exception.Message" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.CreateMessageFromTemplate(System.Boolean)">
            <summary>
            Create the exception message from the data provided
             in the .t4 file and the object's actual fields (if any)
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString" />
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.ToScrubbedString">
            <summary>
            Similar to <see cref="M:System.Object.ToString" />, but makes sure to
            remove all private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.ToString(System.Boolean)">
            <summary>
            Creates a string describing this object, with special care
            not to expose private information.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.GetPropertiesString(System.Boolean)">
            <summary>
            Gets a Name=Value string for all properties.
            </summary>
        </member>
        <member name="M:Kusto.Data.Exceptions.KustoFailedChangeServiceStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SeriazliationInfo" /> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:Kusto.Data.Linq.CslPrecedence">
            <summary>
            Smallest value is weakest, highest value is strongest
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.ExpressionEvaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <param name="canBeEvaluated">A function that decides whether a given expression node can be part
            of the local function.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="M:Kusto.Data.Linq.ExpressionEvaluator.PartialEval(System.Linq.Expressions.Expression)">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="T:Kusto.Data.Linq.ExpressionEvaluator.SubtreeEvaluator">
            <summary>
            Evaluates and replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:Kusto.Data.Linq.ExpressionEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly be
            part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Kusto.Data.Linq.NotTranslatorEvaluator">
            <summary>
            An evaluator that walks the expression tree, finds instances in which we have "!f(x)",
            and replaces them with "g(x)" where g(x) == !f(x). The list of supported f(x)/g(x) combinations
            consists of Contains/NotContains and Equals/NotEquals.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.ExpressionToCslConvertor.PopEverythingInEvalStack">
            <summary>
            Pop everything in the stack to a list. The order is popping order.
            </summary>
            <returns>the list of typed values in order of popping</returns>
        </member>
        <member name="T:Kusto.Data.Linq.ExpressionToCslTranslator">
            <summary>
            An implementation of <see cref="T:Kusto.Data.Linq.IExpressionTranslator" /> that
            translates LINQ expressions over <see cref="T:Kusto.Data.Linq.IKustoTable" />
            into Kusto's CSL syntax.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.ExpressionToCslTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Implements <see cref="M:Kusto.Data.Linq.IExpressionTranslator.Translate(System.Linq.Expressions.Expression)" />.
            </summary>
        </member>
        <member name="F:Kusto.Data.Linq.ExpressionToCslNewConvertor.m_expression">
            <summary>
            The top-level expression being translated. Used for debugging.
            </summary>
        </member>
        <member name="F:Kusto.Data.Linq.ExpressionToCslNewConvertor.m_symbols">
            <summary>
            The symbols table. Changes as translation changes scope.
            </summary>
        </member>
        <member name="T:Kusto.Data.Linq.IExpressionTranslator">
            <summary>
            A service from translating LINQ Expressions into
            another language, represented as a string.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.IExpressionTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Translate a LINQ Expression into the target language.
            </summary>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="T:Kusto.Data.Linq.KustoDataContext">
            <summary>
            Represents the main entry point for the LINQ to Kusto framework.
            </summary>
            <remarks>
            The KustoDataContext is the source of all entities mapped over a database connection.
            Kusto, being a analytics engine (say, unlike SQL Server which is an OLTP database),
            does not support modifying individual "rows". Therefore, this class is differentiated
            from DataContext by not providing ways to modify data -- just append and remove data.

            Also note that the Kusto data client currently does not implement a connection cache,
            so it is recommended that applications cache this object themselves instead of creating
            and recreating it again and again.
            </remarks>
        </member>
        <member name="M:Kusto.Data.Linq.KustoDataContext.CreateDatabase">
            <summary>
            Creates a volatile database on the service, with the name <see cref="P:Kusto.Data.Linq.KustoDataContext.DefaultDatabaseName" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.KustoDataContext.CreateDatabase(System.String)">
            <summary>
            Creates a persistent database on the service, with the name <see cref="P:Kusto.Data.Linq.KustoDataContext.DefaultDatabaseName" />,
            and persist it to <paramref name="path" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.KustoDataContext.AttachDatabase(System.String,System.Boolean,System.Boolean)">
            <summary>
            Attaches to a persistent database by the name <see cref="P:Kusto.Data.Linq.KustoDataContext.DefaultDatabaseName" />
            that is persisted to <paramref name="path" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Linq.KustoDataContext.SaveDatabase(System.String)">
            <summary>
            Writes the database schema and data to persistent storage.
            </summary>
        </member>
        <member name="T:Kusto.Data.Linq.KustoTable`1">
            <summary>
            A strongly-typed representation of a Kusto database table.
            </summary>
            <typeparam name="TRow">The .NET type that corresponds to the table row.</typeparam>
        </member>
        <member name="T:Kusto.Data.Linq.Query`1">
            <summary>
            A base implementation of IQueryable (representing the query itself with links
            back to the query provider which created it and is going to execute it)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Kusto.Data.Linq.QueryProvider">
            <summary>
            A base implementation of IQueryProvider.
            </summary>
        </member>
        <member name="F:Kusto.Data.Linq.LinqProviderTracer.IdentifierString">
            <summary>
            The string that identifies this trace source
            </summary>
        </member>
        <member name="P:Kusto.Data.Linq.LinqProviderTracer.Id">
            <summary>
            Implements <see cref="P:Kusto.Cloud.Platform.Utils.TraceSourceBase`1.Id" />
            </summary>
        </member>
        <member name="P:Kusto.Data.Linq.LinqProviderTracer.DefaultVerbosity">
            <summary>
            Implements <see cref="P:Kusto.Cloud.Platform.Utils.TraceSourceBase`1.DefaultVerbosity" />
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.AuthenticationMethod">
            <summary>
            Describes how a client security principal is to authenticate
            to the service.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.None">
            <summary>
            No authentication is required.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.UsernamePassword">
            <summary>
            User principal for which we already know the username and password (HTTP basic).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadUserPromptWithCache">
            <summary>
            AAD user principal who will be prompted for credentials
            and whose token will be cached (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadUserToken">
            <summary>
            AAD user principal for which we already know the token (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadApplicationToken">
            <summary>
            AAD application principal for which we already know the token (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadApplicationKey">
            <summary>
            AAD application principal for which we already know the client ID
            and application key (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadApplicationCertificateThumbprint">
            <summary>
            AAD application principal for which we already know the client ID
            and will authenticate using a client certificate, by loading it through the thumbprint (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadApplicationCertificateSubjectAndIssuer">
            <summary>
            AAD application principal for which we already know the client ID
            and will authenticate using a client certificate, by loading it by the subject and issuer distinguished names (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.AadApplicationCertificate">
            <summary>
            AAD application principal for which we already know the client ID
            and will authenticate using a client certificate (HTTP bearer).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsUserPromptWithCache">
            <summary>
            dSTS user principal who will be prompted for credentials
            and whose token will be cached.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsApplicationCertificateThumbprint">
            <summary>
            dSTS application principal which will be authenticated using a client certificate.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsUserToken">
            <summary>
            dSTS user principal for which we already know the token.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsApplicationToken">
            <summary>
            dSTS application principal for which we already know the token.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsManagedServiceIdentity">
            <summary>
            dSTS Managed Service Identity (dMSI)
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.AuthenticationMethod.DstsApplicationCertificateSubject">
            <summary>
            dSTS application principal which will be authenticated using a client certificate, by loading it by the subject distinguished name.
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.CloudType">
            <summary>
            Identifies the well-known Azure cloud type (public, Mooncake, etc.)
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.Private">
            <summary>
            Unknown cloud (the hostname endpoint suffix doesn't match any known cloud).
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.PublicCloud">
            <summary>
            The public cloud most Azure customers work in.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.Mooncake">
            <summary>
            Mooncake.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.BlackForest">
            <summary>
            Black forest.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.FairFax">
            <summary>
            Fair fact.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.Ppe">
            <summary>
            PPE.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.USNat">
            <summary>
            USNat.
            </summary>
        </member>
        <member name="F:Kusto.Data.Security.CloudType.USSec">
            <summary>
            USSec.
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.HttpClientAuthenticatorFactory">
            <summary>
            Creates the appropriate authenticator that matches a given <see cref="T:Kusto.Data.KustoConnectionStringBuilder" />.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.HttpClientAuthenticatorFactory.GetContext(System.String,System.String,Kusto.Cloud.Platform.Utils.ITraceSource)">
            <summary>
            Creates a context object that can be used (and reused) when creating an authenticator
            for a particular resource. Here, "resource" is something like an Azure AD resource,
            and identifies a service endpoint.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.HttpClientAuthenticatorFactory.CreateAuthenticator(Kusto.Cloud.Platform.Utils.SecretiveUri,Kusto.Data.Security.HttpClientAuthenticatorFactory.Context,Kusto.Cloud.Platform.Security.ICredentialsProvider,System.String@)">
            <summary>
            Creates a HTTP client authenticator (which <see cref="T:Kusto.Cloud.Platform.Http.KustoHttpClient" />-derived
            classes can use to authenticate requests they send to their HTTP service endpoint)
            based on a URI with a ';Method=Arg" suffix and optionally a credentials provider.
            On error, returns null and sets the error text.
            </summary>
            <param name="secretiveUri">The URI, including an indication on the authentication method.
            Mandatory.</param>
            <param name="context">A "static" context object created using <see cref="M:Kusto.Data.Security.HttpClientAuthenticatorFactory.GetContext(System.String,System.String,Kusto.Cloud.Platform.Utils.ITraceSource)" />.
            Optional, but requires for the "prompt" and "impersonate" methods.</param>
            <param name="credentialsProvider">A provider of client credentials.
            Optional, but required for the "impersonate" method.</param>
            <param name="error">On non-exceptional failure, will hold the details of the error.</param>
        </member>
        <member name="M:Kusto.Data.Security.HttpClientAuthenticatorFactory.CreateAuthenticator(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Creates a HTTP client authenticator (which <see cref="T:Kusto.Cloud.Platform.Http.KustoHttpClient" />-derived
            classes can use to authenticate requests they send to their HTTP service endpoint)
            based on the Kusto connection string parameters.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.HttpClientAuthenticatorFactory.TryGetSchemeAndParameter(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Attempts to retrieve the authentication scheme and authentication parameter
            for the provided connection string. Returns null on failure.
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.KustoClientServiceAadEntitiesConfiguration">
            <summary>
            An immutable description of various Kusto entities registered with
            Azure AD, alongside the factory that returns it based on the
            URI of the Kusto cluster being communicated with.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.KustoClientServiceAadEntitiesConfiguration.CreateConfiguration(Kusto.Cloud.Platform.Utils.ParsedUri,System.Boolean)">
            <summary>
            A factory method to return an instance of this class based on the URI
            to the Kusto cluster.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.KustoClientServiceAadEntitiesConfiguration.#ctor">
            <summary>
            Empty private constructor to prevent people from creating instances of this class.
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.CloudTypeEndpointSuffixResolver">
            <summary>
            Converts between the URI of a Kusto service and the corresponding endpoint suffix
            of the DNS service name per the well-known Azure clouds (public, MoonCake, etc.)
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.CloudTypeEndpointSuffixResolver.GetCloudType(System.String)">
            <summary>
            Given the URI of a Kusto service endpoint (or even just the hostname itself),
            returns the <see cref="T:Kusto.Data.Security.CloudType" /> of the cloud that it is in.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.CloudTypeEndpointSuffixResolver.GetEndpointSuffix(Kusto.Data.Security.CloudType)">
            <summary>
            Given a <see cref="T:Kusto.Data.Security.CloudType" />, returns the endpoint suffix
            (the last part of the DNS name of all URIs of services in that cloud).
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.CloudTypeEndpointSuffixResolver.GetEndpointSuffix(System.String)">
            <summary>
            Given the URI of a Kusto service endpoint (or even just the hostname itself),
            returns the endpoint suffix
            (the last part of the DNS name of all URIs of services in that cloud).
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.KustoClientServiceDstsEntitiesConfiguration">
            <summary>
            An immutable description of various Kusto entities registered with
            dSTS, alongside the factory that returns it based on the
            URI of the Kusto cluster being communicated with.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.KustoEndpointStructure.AreSameCluster(System.String,System.String)">
            <summary>
            Function compares two endpoints, based on clusters aliases and standard suffixes
            Domain names ('kusto', 'kustomfa') are excluded from comparison
            Function considers endpoint prefix (http://, https://) as part of alias
            Examples:
            (cluster1, cluster1) ==&gt; true
            (cluster1.kusto.windows.net, cluster1.kustomfa.windows.net) ==&gt; true
            (https://cluster1.kusto.windows.net, cluster1.kustomfa.widnows.net) ==&gt; false
            (cluster1.kusto.windows.net, cluster1.kusto.cloudapi.de) ==&gt; false
            (cluster1.kusto.bing.com, cluster1.kusto.bing.com) ==&gt; false
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.PrincipalModelBase">
            <summary>
            General Principal Model
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.AddPrincipalModel">
            <summary>
            Represents the Principal Model used for adding a new principal
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.ViewPrincipalModel">
            <summary>
            Represents the Principal Model used for viewing\dropping principals
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.FileCache">
            <summary>
            Implemnents TokenCache on top of files.
            Inspired by: Vittorio Bertocci http://www.cloudidentity.com/blog/2014/07/09/the-new-token-cache-in-adal-v2/
            The only goal of this cache is to store the token persistently. It is not meant for multiple processes running on the same machine and using the samw file.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.FileCache.#ctor(System.String)">
            <summary>
            Initializes the cache against a local file.
            If the file is already present, it loads its content in the ADAL cache
            Consturctor is private to enfoorce the Singleton pattern.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:Kusto.Data.Security.WellKnownAadResourceIds">
            <summary>
            A few of the more-famous AAD resource IDs (services).
            </summary>
        </member>
        <member name="T:Kusto.Data.Security.WellKnownAadResourceIds.Service">
            <summary>
            Indicates the well-known "service type" of the AAD resource.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.WellKnownAadResourceIds.GetResourceIdOrNull(System.String)">
            <summary>
            Gets the AAD resource ID that corresponds to the given resource URI,
            or null if none could be determined.
            </summary>
        </member>
        <member name="M:Kusto.Data.Security.WellKnownAadResourceIds.GetResourceIdOrNull(Kusto.Data.Security.WellKnownAadResourceIds.Service,System.String)">
            <summary>
            Gets the AAD resource ID that corresponds to the given resource URI
            and subject to the known service type,
            or null if none could be determined.
            </summary>
        </member>
        <member name="T:Kusto.Data.SqlProvider.KustoQueryAdminProviderBase">
            <summary>
            Base implementation of <see cref="T:Kusto.Data.Common.ICslQueryProvider" />, <see cref="T:Kusto.Data.Common.ICslAdminProvider" />.
            </summary>
        </member>
        <member name="T:Kusto.Data.SqlProvider.KustoSqlProvider">
            <summary>
            A Kusto query/admin provider that works on top of a SQL connection,
            not Kusto connection.
            </summary>
        </member>
        <member name="M:Kusto.Data.SqlProvider.KustoSqlProvider.#ctor(Kusto.Data.KustoConnectionStringBuilder)">
            <summary>
            Constructor.
            </summary>
            <param name="kcsb">A Kusto connection string builder object that
            is used to represent the connection to the SQL database.
            The conversion is done by the "magic" of KustoClientFactory and registered
            schema handlers. For example, the following connection string should be used
            for server SERVER.database.windows.net, database DATABASE, with user name
            USER; how to set the password should be obvious.

            sql://SERVER.database.windows.net/DATABASE;User ID=USER;...
            </param>
        </member>
        <member name="M:Kusto.Data.Utils.AdminCommandsResultParser.TryParseDatabaseVersion(System.String,System.Int32@,System.Int32@)">
            <summary>
            Tries to parse a string that represents the database version as it's reported
            by .show databases command: v2.15
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.AadUserPromptHttpClientAuthenticator">
            <summary>
            Performs AAD user prompt authentication.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.AadUserPromptHttpClientAuthenticator.#ctor(System.String,System.String,Kusto.Cloud.Platform.Utils.ITraceSource)">
            <summary>
            Constructor.
            </summary>
            <param name="resourceId">The AAD resource ID we intend to access (mandatory).
            For example, "https://storage.azure.com/".</param>
            <param name="resourceDescription">A human-readable description of the
            AAD resource we intend to access (optional).</param>
            <param name="tracer">The tracer to use (optional).</param>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.CredentialsProviderHttpClientAuthenticator">
            <summary>
            Delegates the HTTP authentication protocol to an implementation
            of <see cref="T:Kusto.Cloud.Platform.Security.ICredentialsProvider" />.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.CredentialsProviderHttpClientAuthenticator.#ctor(Kusto.Cloud.Platform.Security.ICredentialsProvider,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="credentialsProvider">The credentials provider to use when an HTTP request is about to get sent.</param>
            <param name="targetResource">The target resource argument to provide the credentials provider.
            For example, this is usually the Azure Active Directory (AAD) resource ID of the service
            being accessed.</param>
            <param name="tokenScheme">The token scheme argument to provide the credentials provider.
            For example, for Azure Active Directory (AAD) it should be "Bearer".</param>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.IHttpClientAuthenticator">
            <summary>
            When implemented by a derived class, does client-side authentication
            over HTTP (most commonly, fills in the appropriate values of the
            HTTP Authorization header).
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.ExtendedHttpRequestMessage">
            <summary>
            Additions to <see cref="T:System.Net.Http.HttpRequestMessage" />.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.ExtendedHttpRequestMessage.SetHttpAuthorizationHeader(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Sets the HTTP authorization header in the HTTP Request.
            This method is needed because the dSTS authorization header fails validation.
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator">
            <summary>
            Performs shared-key authentication (basically, taking the hash of
            a number of HTTP headers from the request, and signing the hash
            using a per-storage account shared key).
            </summary>
            <remarks>The implementation below is basically a copy of the relevant code from the Azure Storage SDK
            sources, found @ https://github.com/Azure/azure-storage-net. Before each such class we've
            added a reference to the relevant code file.
            </remarks>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.SetSharedKeyAuthentication(System.Net.Http.HttpRequestMessage,System.String,System.Byte[],System.String)">
            <summary>
            This is our own equivalent to the Storage SDK class StorageAuthenticationHttpHandler
            Lib\Common\Auth\protocol\StorageAuthenticationHttpHandler.SharedKey.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.SharedKeyCanonicalizer">
            <summary>
            Lib\Common\Core\Auth\SharedKeyCanonicalizer.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.CanonicalizedString">
            <summary>
            Lib\Common\Core\CanonicalizedString.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.AuthenticationUtility">
            <summary>
            Lib\Common\Core\Util\AuthenticationUtility.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.CloudStorageAccount">
            <summary>
            Lib\Common\CloudStorageAccount.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.HttpWebUtility">
            <summary>
            Lib\Common\Core\Util\HttpWebUtility.cs
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.HttpWebUtility.ParseQueryString(System.String)">
            <summary>
            Parse the http query string.
            </summary>
            <param name="query">Http query string.</param>
            <returns></returns>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.HttpWebUtility.ConvertDateTimeToHttpString(System.DateTimeOffset)">
            <summary>
            Converts the DateTimeOffset object to an Http string of form: Mon, 28 Jan 2008 12:11:37 GMT.
            </summary>
            <param name="dateTime">The DateTimeOffset object to convert to an Http string.</param>
            <returns>String of form: Mon, 28 Jan 2008 12:11:37 GMT.</returns>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.HttpWebUtility.CombineHttpHeaderValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Combine all the header values in the IEnumerable to a single comma separated string.
            </summary>
            <param name="headerValues">An IEnumerable<string> object representing the header values.</string></param>
            <returns>A comma separated string of header values.</returns>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.SharedKeyHttpClientAuthenticator.Constants">
            <summary>
            Lib\Common\Shared\Protocol\Constants.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.HttpResponseMessageUtils">
            <summary>
            Lib\Common\Core\Util\HttpResponseMessageUtils.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.CommonUtility">
            <summary>
            Lib\Common\Core\Util\CommonUtility.cs
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.TrivialHttpClientAuthenticator">
            <summary>
            Trivial implementation of <see cref="T:Kusto.Cloud.Platform.Http.IHttpClientAuthenticator" />,
            which accepts the credentials on construction.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.TrivialHttpClientAuthenticator.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="tokenScheme">The scheme to set in the HTTP Authorization header.
            For example, for Azure Active Directory (AAD) it should be "Bearer".</param>
            <param name="tokenValue">The parameter to set in the HTTP Authorization header.
            For example, for Azure Active Directory (AAD) it should be the AAD access token.</param>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.ExtendedHttpRequestHeaders">
            <summary>
            Extension methods for <see cref="T:System.Net.Http.Headers.HttpRequestHeaders" />.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.ExtendedHttpRequestHeaders.AddNormalizedRequestHeader(System.Net.Http.Headers.HttpRequestHeaders,System.String,System.String)">
            <summary>
            Adds a header, ensuring that the header value is US-ASCII
            </summary>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.KustoHttpClient">
            <summary>
            A base class for building HTTP clients
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.AadHttpClientAuthenticator.SetAdalNetTraceVerbosity(Kusto.Cloud.Platform.Utils.TraceVerbosity)">
            <summary>
            A one-time method that messes around with the ADAL client .NET TraceSource
            and sets its verbosity to match our caller's.
            </summary>
        </member>
        <member name="M:Kusto.Cloud.Platform.Http.AadHttpClientAuthenticator.GetUserTokenByPasswordAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This is the client-side for the
            [Resource Owner Password Credentials Grant OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-4.3)
            flow, which is supported by the Azure AD service, but not exposed through ADAL.NET.
            Unfotunately, ADAL.NET doesn't support any other user-interactive authentication flow
            in .NET Core (only silent authentication or domain-joined, neither are useful for Linux machines...),
            so we've elected to implement it ourselves.

            A good place for info is: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet/issues/482.

            Another option for authentication (which we didn't make) is to do this:
            https://github.com/Azure-Samples/active-directory-dotnet-deviceprofile

            To view the access token or refresh token that the service returns, one can use
            https://jwt.ms/. See also https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens.
            /// </summary>
            <param name="username">The user name to authenticate (UPN). Cannot be null/empty/whitespace.</param>
            <param name="password">The password of the user. Cannot be null/empty/whitespace.</param>
            <param name="tenantId">The tenant ID (also called authority ID) of the Azure AD tenant.
            Optional (will be inferred from the domain part of the UPN if provided).</param>
            <param name="resourceId">The resource for which access is requested.</param>
            <param name="clientId">The application doing the authentication.</param>
            <returns>On successful authentication, an access token for the specified
            user granting access to the specified resource is returned.

            On failure, throws an <see cref="T:AdalException" />.
            </returns>
        </member>
        <member name="T:Kusto.Cloud.Platform.Http.BasicHttpClientAuthenticator">
            <summary>
            An implementation of <see cref="T:Kusto.Cloud.Platform.Http.IHttpClientAuthenticator" /> that
            knows how to do username/password (Basic) authentication.
            </summary>
        </member>
        <member name="T:Kusto.QueryLanguage.Expressions.TabularOperator">
            <summary>
            Represents a query language tabular operator (an operator
            whose evaluation yields tabular data).
            </summary>
        </member>
        <member name="P:Kusto.QueryLanguage.Expressions.TabularOperator.Operator">
            <summary>
            The operator kind (e.g., "extend", "take", etc.)
            </summary>
        </member>
        <member name="P:Kusto.QueryLanguage.Expressions.TabularOperator.Inputs">
            <summary>
            The tabular inputs into this operator.
            </summary>
        </member>
        <member name="P:Kusto.QueryLanguage.Expressions.TabularOperator.OutputSchema">
            <summary>
            The schema of this operator's output.
            </summary>
        </member>
        <member name="M:Kusto.QueryLanguage.Expressions.TabularOperator.ToJson">
            <summary>
            Creates a JSON representation for this operator.
            </summary>
        </member>
        <member name="M:Kusto.QueryLanguage.Expressions.TabularOperator.ToCsl">
            <summary>
            Creates a CSL representation for this operator.
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchNodeType">
            <summary>
            Type of the search expression node
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.FieldComparisonOperator">
            <summary>
            Field comparison operator
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchNode">
            <summary>
            Base class for all nodes in the SimpleSearch parse tree
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchExpression">
            <summary>
            Base class for all SimpleSearch expressions
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchTermExpression">
            <summary>
            Single term search
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.FieldScopedSearch">
            <summary>
            Sub-expression scoped to a specific field (column in Kusto table/tables)
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.FieldComparisonExpression">
            <summary>
            Comparison of the specific field to a constant value (term or number)
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchBinaryLogicalExpression">
            <summary>
            Base class for search union and intersection
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchUnion">
            <summary>
            Search clause union (OR)
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchIntersection">
            <summary>
            Search clause intersection (AND)
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchNegation">
            <summary>
            Search negation (NOT)
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.SearchStatement">
            <summary>
            Top-level search statement with an optional query continuation
            </summary>
        </member>
        <member name="T:Kusto.Shared.SimpleSearch.Parser">
            <summary>
            SimpleSearch parser
            </summary>
            <remarks>
            Usage: create Parser instance with the input statement, invoke ParseStatement(),
            examine Error property if null is returned.
            </remarks>
        </member>
        <member name="T:System.Linq.JoinResults`2">
            <summary>
            Like a Tuple of two items, but works with the current (poor) implementation of ObjectReader.
            </summary>
        </member>
        <member name="T:System.Linq.KustoQueryable">
            <summary>
            Additional extension mthods for <see cref="T:System.Linq.IQueryable`1" /> which are appropriate
            for Kusto users.
            </summary>
        </member>
        <member name="M:System.Linq.KustoQueryable.Join``2(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.String[])">
            <summary>
            Basic Kusto join of two tables (outer and inner) and a number of attribute
            names which must be the same for outer and inner.
            </summary>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" /><DigestValue>6LKb4rpxEht2KtLAou8+8SkwomI=</DigestValue></Reference></SignedInfo><SignatureValue>XJHq580bS6zM+fnNtyjBBREKtpyU6WaPanOXZmpm9UVxc3BLMwde2I5BjFyqIdcXxZhQ/WmpNUflsSHcVwQGuEdwLyEGSG/ubw5oftMhbmwmyMxtRiLfE8+cl3b/jNJQ2bveTPxD3SKE57f1QKETGI4z6Terx2bkxdnFJcQ+VaNk+SSdIHmpVD0ROwYLie4V0qiUNqGCNiaCSgnlEs2hXhddOzXtG0mSdSDiJGd8Y3Vo9FM9H0BGqrkR2QxPKYl2cH6UEN9S/XRYt7caXwqoLolANf4USNzagYYmAd7fpwAnskdbvXi4sysM0jvgZQY8GOT321tUocigfUO1rhPPmw==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>uscPDbgf6ehxz8GJNS8PU72SghXw/BBUFg7RBto9IU1Z4sPLCm2UsP77hVMPwtVgEC7ojc46piUC6UCYL3vqlKgO/Jjnb6wP7ntHTtOTYADjUMcgTV4IEws1bogcERHc8JNE9X7iof8O+PBgnpweIl/4pdUWlSkI8u3wBA7e6ELZWIyLPOWLapQ+1YhjPzHPqGo4ZkdZ5DzGue5apcyJUCM0cjVMDNuzo5c+KQv7OLUk/ZwI/4n5yAgaA0ELaeK7+3WZFkZwqyV0m7PL3xNWBWZR6zHv8uCrGGs8apaWuil7l6FVXWrE3fQwDfLiYxbBQ2qFnw1Fac4RgMBbpPKS5w==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>MIIE8zCCA9ugAwIBAgITMwAAAeN9ox+ChNzkoQACAAAB4zANBgkqhkiG9w0BAQUFADB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTAeFw0xOTA1MDIyMTIwMzJaFw0yMDA1MDIyMTIwMzJaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xHjAcBgNVBAMTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALrHDw24H+nocc/BiTUvD1O9koIV8PwQVBYO0QbaPSFNWeLDywptlLD++4VTD8LVYBAu6I3OOqYlAulAmC976pSoDvyY52+sD+57R07Tk2AA41DHIE1eCBMLNW6IHBER3PCTRPV+4qH/DvjwYJ6cHiJf+KXVFpUpCPLt8AQO3uhC2ViMizzli2qUPtWIYz8xz6hqOGZHWeQ8xrnuWqXMiVAjNHI1TAzbs6OXPikL+zi1JP2cCP+J+cgIGgNBC2niu/t1mRZGcKsldJuzy98TVgVmUesx7/LgqxhrPGqWlrope5ehVV1qxN30MA3y4mMWwUNqhZ8NRWnOEYDAW6TykucCAwEAAaOCAXcwggFzMBMGA1UdJQQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBSsQpZ1w+qoy5yTwPRr/l8fbMbkMDBQBgNVHREESTBHpEUwQzEpMCcGA1UECxMgTWljcm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xFjAUBgNVBAUTDTIyOTgwMys0NTQxMDUwHwYDVR0jBBgwFoAU23C8UjSUneuXJ6bW1Ni9qm1HCE4wYgYDVR0fBFswWTBXoFWgU4ZRaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljcm9zb2Z0JTIwQ29kZSUyMFNpZ25pbmclMjBQQ0EoMikuY3JsMGYGCCsGAQUFBwEBBFowWDBWBggrBgEFBQcwAoZKaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNyb3NvZnQlMjBDb2RlJTIwU2lnbmluZyUyMFBDQSgyKS5jcnQwDQYJKoZIhvcNAQEFBQADggEBADnobpnS8xmUVOzSwCWfjC++PEcumOy7xqaY869jaApHTOVNEuYJ4MEnuqY5/6eYbMOnuL8Q90leZuOj97ertHIxvRJyVN3M5Z9uhFXrbt8okoQK3NqTwiBPS06+1KPOW1I1biMUgpHAkzn9bpJLhjD+DlrfoUmQF6BphA2rxdaxo5UiFrT7LS/jguKUKbjPY4SofLnAyJtKCUK023ItQ/NA0P91Hit0jxnW6XpmFSBZp1BUUpwosaIWATQ/YsibdlTHigK3Ec+Mv6W5eSPd2q6MVCOJKu7oy/hwd8aqoe6zTZPe5NIWhyaHptNWjxr2u306lqEu5HcZJ5BwAIUdmnA=</X509Certificate><X509Certificate>MIIFvDCCA6SgAwIBAgIKYQQ1RQAAAAAAPzANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMTgwOTIwMTc0MjAwWhcNMjEwNTA5MjMyODEzWjB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANDTCMwSFqzT4NFGx9QeZsmnXQoRfh8U6j0WvMDnMYMb7NSF4Oy4670y/58I1cpBhPY3ne98VxKSyMrB6VoSYKoxDe6Ko2HvkiKSfFYWDjRikBZeWo4u3xtAKtA97WFE2I4Dpxw2EH9ZwmP04cDT7/F/94+FoV8rHIDCkFBfGYEGCdKQ6aC3LEQAQcZlUhc3LPnuut70BZ0slLWuY5BRscH9/jhefPXgrPb99O60KUDflHYqvRllr4xttieuwqf3sRUL5pVqgcan32aOaHd//V6tzcAJEA7wGVLJwXNRkyq2USOgSazyC9QErthQXt9PYz+1L4+sy00rcfRZKAUnTQUCAwEAAaOCAV4wggFaMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNtwvFI0lJ3rlyem1tTYvaptRwhOMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQIDAgACMCMGCSsGAQQBgjcVAgQWBBQ8r5ui21VwyvdpQv+ZEBuZOIjiVzAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQOrIJgQFYnl+UlE/wq4QpTlVnkpDBQBgNVHR8ESTBHMEWgQ6BBhj9odHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9taWNyb3NvZnRyb290Y2VydC5jcmwwVAYIKwYBBQUHAQEESDBGMEQGCCsGAQUFBzAChjhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFJvb3RDZXJ0LmNydDANBgkqhkiG9w0BAQUFAAOCAgEAPXvYLuA280KYVU8PG+SfB6j28gHmkjkKraifDsoEsP4iy4V5Q4rd4use9LM1g8uF5qQtPk2iCFGXJMoYuK7U+GOHipiJ6bDSCm0uVTXALHlhxrYeTZtWJokf4L9l/8gu5DxIZcXYRPTm7TQN3qkD9GO8nLy8ZKZVvaC3kc5lftYTjPIwpaznO9HtsnXWXc+Ah6Rx3EKRztKTsN5U5fV8Idzsi7zgfuy3KQlQrQYrOtcbPYyVV4HNOJiw35o40IHukye2Fcp5BTs06N3TIshlG/JMYTyVhi4yaMspmZL1dqrfhimgDA3jtLORTJJnWlTRWSfT7khCbjFMD+5Mop5oxyNKrlTjlJUDbKWcktsoD9oGWUQQl4Dw8qiFsz0V8CrxN4ntPTfFOKcqR5tnWbQt9XqzHned6EpJKnQ3q+KSL9wQ+EMttTLc+Y0VvUxJjKeuF8GzR+i+nvkxBmTF3tL+oqW0CHVJe2Ri/AOgfrnmkWdcQRcOR+RONi3oN7gba4AUFD9SoMCpliIlHRfxOVvtmkV6jsYZv8QU6+MQk+JkiM6LgMnAfbaLbVcTWyp7b2x+i0MQzw36XY1n1IvADPPaTnrv6u+v3700EvuJtKtnbptk9YsOTKozA4iCHAdRcFUUwVx9792nVd/Dx6OMHBtGehrz1n8WRNbrY9J9CLQidRc=</X509Certificate><X509Certificate>MIIFmTCCA4GgAwIBAgIQea0WoUqgpa1Mc1j0BxMuZTANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDEwNTA5MjMxOTIyWhcNMjEwNTA5MjMyODEzWjBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDzXfqAZ9Rap6kMLJAg0DUIPHWEzbcHiZyJ2t7Ow2D6kWhanpRxKRh2fMLgyCV2lA5Y+gQ0Nubfr/eAuulYCyuT5Z0F43cikfc0ZDwikR1e4QmQvBT+/HVYGeF5tweSo66IWQjYnwfKA1j8aCltMtfSqMtL/OELSDJP5uu4rU/kXG8TlJnbldV126gat5SRtHdb9UgMj2p5fRRwBH1tr5D12nDYR7e/my9s5wW34RFgrHmRFHzF1qbk4X7Vw37lktI8ALU2gt554W3ztW74nzPJy1J9c5g224uha6KVl5uj3sJNJv8GlmclBsjnrOTuEjOVMZnINQhONMp5U9W1vmMyWUA2wKVOBE0921sHM+RYv+8/U2TYQlk1V/0PRXwkBE2e1jh0EZcikM5oRHSSb9VLb7CG48c2QqDQ/MHAWvmjYbkwR3GWChawkcBCle8Qfyhq4yofseTNAz93cQTHIPxJDx1FiKTXy36IrY4t7EXbxFEEySr87IaemhGXW97OU4jm4rf9rJXCKEDb7wSQ34EzOdmyRaUjhwalVYkxuwYtYA5BGH0fLrWXyxHrFdUkpZTvFRSJ/Utz+jJb/NEzAPlZYnAHMuouq0Ate8rdIWcbMJmPFqojqEHRsG4RmzbE3kB0nOFYZcFgHnpbOMiPuwQmfNQWQOW2a2yqhv0Av87BNQIDAQABo1EwTzALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUDqyCYEBWJ5flJRP8KuEKU5VZ5KQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggIBAMURTQM6YN1dUhF3j7K7NsiyBb+0t6jYIJ1cEwO2HCL6BhM1tshj1JpHbyZX0lXxBLEmX9apUGigvNK4bszD6azfGc14rFl0rGY0NsQbPmw4TDMOMBINoyb+UVMA/69aToQNDx/kbQUuToVLjWwzb1TSZKu/UK99ejmgN+1jAw/8EwbOFjbUVDuVG1FiOuVNF9QFOZKaJ6hbqr3su77jIIlgcWxWs6UT0G0OI36VA+1oPfLYY7hrTbboMLXhypRL96KqXZkwsj2nwlFsKCABJCcrSwC3nRFrcL6yEIK8DJto0I07JIeqmShynTNfWZC99d6TnjpiWjQ54ohVHbkGsMGJay3XacMZEjaE0Mmg2v8vaXiy5Xra69cMwPe9Yxe4ORM4ojZbe/KFVmodZGLBOOKqv1FmopT1EpxmIhBr8rcwki3yKfA9OxRDaKLxnCk3y844ICVtfGfzfiQSJAMIgUfspZ6X9RjXz7vV73aW7/3O21adlaBC+ZdY4dcxItNfWeY+biIA6kOEtiXb2fMIVmjAZGsdfOy2k6JiV24u2OdYj8QxSSbd3ik1h/UwcXBbFDxpvYkSfesuo/7Yf56CWlIKK8FDK9kwiJ/IEPuJjeahhXUzfmye23MTZGJppS99ypZtn/gETTCSPW4hFCHJPeDD/YprnUr90aGdmUN3P7Da</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>MIIE2jCCA8KgAwIBAgITMwAAAR4S9EGOKUc2xgAAAAABHjANBgkqhkiG9w0BAQUFADB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EwHhcNMTgxMDI0MjEwNzM2WhcNMjAwMTEwMjEwNzM2WjCByjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046QUUyQy1FMzJCLTFBRkMxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDzb28mkTnE/Qx2JfKv+ykRWkxyTx2Gt1TN7wBh/G2D9Z9JoWGDsHVyLMxbJzirFVKII+4mj6qKjCbMhWWhrUcKaez6q7hh6tpNL/knhCj48lZeFYMbSNAcY+cgHt5i+xV3kh6sZz1x8VrNopcripG3IjrbIJ5a47/NMUVCZyLwn+V8yz0elFnqH52amVPanbS0Re4Mku1U9IEOAdhlFd1AMfNL4kumj3GucM+W1rL9jsRO9kgSsMDFwsM5lDAhn3toZcapx0yMi961g05xhpSmZ/hI4+szlAyqH0HN1CXjq2XQ6PhRYcn4o+BdUzYbJ8rSrU3VwUhOzhv7hdTl5R2DAgMBAAGjggEJMIIBBTAdBgNVHQ4EFgQU3NGCgrg8lSUew8D8IjHvi1eXPDUwHwYDVR0jBBgwFoAUIzT42VJGcArtQPt2+7MrsMM1sw8wVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNybDBYBggrBgEFBQcBAQRMMEowSAYIKwYBBQUHMAKGPGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNydDATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG9w0BAQUFAAOCAQEAWR2z6mBmVxajzjhf10GitwpRJTFbD1PjMopI0EPjoQiZUNQk4pxBLpQMSTv983jET+IHM6tU58aH8zI96GRYxgqVC4fNWWmZZq+OJ8+kLC95j65TbHarqzjZeW8x7nbZBd+l27sDbgyE99YAm9LwKecAYJY4IOcC2vl1CwdBzVMvnwN+mbgHw5X1hEdrjRODR0Fq0p/Yp6olDZ+48Wytf1U2gnOxM+3oMIg5OMnZ36pvAU05trHyX3/sx4vv/iKnuenE4tnK7MVqF4Jdu49bNdNxrivTf7UIluolvjaOIfnePwHajCAKRQLcHcD9LgtFg5PFEFhx64v52YnZYAWspA==</X509Certificate><X509Certificate>MIIGBzCCA++gAwIBAgIKYRZoNAAAAAAAHDANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDcwNDAzMTI1MzA5WhcNMjEwNDAzMTMwMzA5WjB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCfoWyx39tIkip8ay4Z4b3i48WZUSNQrc7dGE4kD+7Rp9FMrXQwIBHrB9VUlRVJlBtCkq6YXDAm2gBr6Hu97IkHD/cOBJjwicwfyzMkh53y9GccLPx754gd6udOo6HBI1PKjfpFzwnQXq/QsEIEovmmbJNn1yjcRlOwhtDlKEYuJ6yGT1VSDOQDLPtqkJAwbofzWTCd+n7Wl7PoIZd++NIT8wi3U21StEWQn0gASkdmEScpZqiX5NMGgUqi+YSnEUcUCYKfhO1VeP4Bmh1QCIUAEDBG7bfeI0a7xC1Un68eeEExd8yb3zuDk6FhArUdDbH895uyAc4iS1T/+QXDwiALAgMBAAGjggGrMIIBpzAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQjNPjZUkZwCu1A+3b7syuwwzWzDzALBgNVHQ8EBAMCAYYwEAYJKwYBBAGCNxUBBAMCAQAwgZgGA1UdIwSBkDCBjYAUDqyCYEBWJ5flJRP8KuEKU5VZ5KShY6RhMF8xEzARBgoJkiaJk/IsZAEZFgNjb20xGTAXBgoJkiaJk/IsZAEZFgltaWNyb3NvZnQxLTArBgNVBAMTJE1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eYIQea0WoUqgpa1Mc1j0BxMuZTBQBgNVHR8ESTBHMEWgQ6BBhj9odHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9taWNyb3NvZnRyb290Y2VydC5jcmwwVAYIKwYBBQUHAQEESDBGMEQGCCsGAQUFBzAChjhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFJvb3RDZXJ0LmNydDATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG9w0BAQUFAAOCAgEAEJeKw1wDRDbd6bStd9vOeVFNAbEudHFbbQwTq86+e4+4LtQSooxtYrhXAstOIBNQmd16QOJXu69YmhzhHQGGrLt48ovQ7DsB7uK+jwoFyI1I4vBTFd1Pq5Lk541q1YDB5pTyBi+FA+mRKiQicPv2/OR4mS4N9wficLwYTp2OawpylbihOZxnLcVRDupiXD8WmIsgP+IHGjL5zDFKdjE9K3ILyOpwPf+FChPfwgphjvDXuBfrTot/xTUrXqO/67x9C0J71FNyIe4wyrt4ZVxbARcKFA7S2hSY9Ty5ZlizLS/n+YWGzFFW6J1wlGysOUzU9nm/qhh6YinvopspNAZ3GmLJPR5tH4LwC8csu89Ds+X57H2146SodDW4TsVxIxImdgs8UoxxWkZDFLyzs7BNZ8ifQv+AeSGAnhUwZuhCEl4ayJ4iIdBD6Svpu/RIzCzU2DKATCYqSCRfWupW76bemZ3KOm+9gSd0BhHudiG/m4LBJ1S2sWo9iaF2YbRuoROmv6pH8BJv/YoybLL+31HIjCPJZr2dHYcSZAI9La9Zj7jkIeW1sMpjtHhUBdRBLlCslLCleKuzoJZ1GtmShxN1Ii8yqAhuoFuMJb+g74TKIdbrHk/Jmu5J4PcBZW+JC33Iacjmbuqnl84xKf8OxVtc2E0bodj6L54/LlUWa8kTo/0=</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">MIIRCAYJKoZIhvcNAQcCoIIQ+TCCEPUCAQMxCzAJBgUrDgMCGgUAMIIBEwYJKoZIhvcNAQcBoIIBBASCAQBckernzRtLrMz5+c23KMEFEQq2nJTpZo9qc5dmamb1RXFzcEszB17YjkGMXKoh1xfFmFD9aak1R+WxIdxXBAa4R3AvIQZIb+5vDmh+0yFubCbIzG1GIt8Tz5yXdv+M0lDZu95M/EPdIoTnt/VAoRMYjjPpN6vHZuTF2cUlxD5Vo2T5JJ0gealUPRE7BguJ7hXSqJQ2oYI2JoJKCeUSzaFeF107Ne0bSZJ1IOIkZ3xjdWj0Uz0fQEaquRHZDE8piXZwfpQQ31L9dFi3txpfCqguiUA1/hRI3NqBhiYB3t+nACeyR1u9eLizKwzSO+BlBjwY5PfbW1ShyKB9Q7WuE8+boIINsTCCBNowggPCoAMCAQICEzMAAAEeEvRBjilHNsYAAAAAAR4wDQYJKoZIhvcNAQEFBQAwdzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEhMB8GA1UEAxMYTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBMB4XDTE4MTAyNDIxMDczNloXDTIwMDExMDIxMDczNlowgcoxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1pY3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNOOkFFMkMtRTMyQi0xQUZDMSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA829vJpE5xP0MdiXyr/spEVpMck8dhrdUze8AYfxtg/WfSaFhg7B1cizMWyc4qxVSiCPuJo+qiowmzIVloa1HCmns+qu4YeraTS/5J4Qo+PJWXhWDG0jQHGPnIB7eYvsVd5IerGc9cfFazaKXK4qRtyI62yCeWuO/zTFFQmci8J/lfMs9HpRZ6h+dmplT2p20tEXuDJLtVPSBDgHYZRXdQDHzS+JLpo9xrnDPltay/Y7ETvZIErDAxcLDOZQwIZ97aGXGqcdMjIvetYNOcYaUpmf4SOPrM5QMqh9BzdQl46tl0Oj4UWHJ+KPgXVM2GyfK0q1N1cFITs4b+4XU5eUdgwIDAQABo4IBCTCCAQUwHQYDVR0OBBYEFNzRgoK4PJUlHsPA/CIx74tXlzw1MB8GA1UdIwQYMBaAFCM0+NlSRnAK7UD7dvuzK7DDNbMPMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY3Jvc29mdFRpbWVTdGFtcFBDQS5jcmwwWAYIKwYBBQUHAQEETDBKMEgGCCsGAQUFBzAChjxodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFRpbWVTdGFtcFBDQS5jcnQwEwYDVR0lBAwwCgYIKwYBBQUHAwgwDQYJKoZIhvcNAQEFBQADggEBAFkds+pgZlcWo844X9dBorcKUSUxWw9T4zKKSNBD46EImVDUJOKcQS6UDEk7/fN4xE/iBzOrVOfGh/MyPehkWMYKlQuHzVlpmWavjifPpCwveY+uU2x2q6s42XlvMe522QXfpdu7A24MhPfWAJvS8CnnAGCWOCDnAtr5dQsHQc1TL58Dfpm4B8OV9YRHa40Tg0dBatKf2KeqJQ2fuPFsrX9VNoJzsTPt6DCIOTjJ2d+qbwFNObax8l9/7MeL7/4ip7npxOLZyuzFaheCXbuPWzXTca4r03+1CJbqJb42jiH53j8B2owgCkUC3B3A/S4LRYOTxRBYceuL+dmJ2WAFrKQwggYHMIID76ADAgECAgphFmg0AAAAAAAcMA0GCSqGSIb3DQEBBQUAMF8xEzARBgoJkiaJk/IsZAEZFgNjb20xGTAXBgoJkiaJk/IsZAEZFgltaWNyb3NvZnQxLTArBgNVBAMTJE1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eTAeFw0wNzA0MDMxMjUzMDlaFw0yMTA0MDMxMzAzMDlaMHcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xITAfBgNVBAMTGE1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ+hbLHf20iSKnxrLhnhveLjxZlRI1Ctzt0YTiQP7tGn0UytdDAgEesH1VSVFUmUG0KSrphcMCbaAGvoe73siQcP9w4EmPCJzB/LMySHnfL0Zxws/HvniB3q506jocEjU8qN+kXPCdBer9CwQgSi+aZsk2fXKNxGU7CG0OUoRi4nrIZPVVIM5AMs+2qQkDBuh/NZMJ36ftaXs+ghl3740hPzCLdTbVK0RZCfSABKR2YRJylmqJfk0waBSqL5hKcRRxQJgp+E7VV4/gGaHVAIhQAQMEbtt94jRrvELVSfrx54QTF3zJvfO4OToWECtR0Nsfz3m7IBziJLVP/5BcPCIAsCAwEAAaOCAaswggGnMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFCM0+NlSRnAK7UD7dvuzK7DDNbMPMAsGA1UdDwQEAwIBhjAQBgkrBgEEAYI3FQEEAwIBADCBmAYDVR0jBIGQMIGNgBQOrIJgQFYnl+UlE/wq4QpTlVnkpKFjpGEwXzETMBEGCgmSJomT8ixkARkWA2NvbTEZMBcGCgmSJomT8ixkARkWCW1pY3Jvc29mdDEtMCsGA1UEAxMkTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5ghB5rRahSqClrUxzWPQHEy5lMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL21pY3Jvc29mdHJvb3RjZXJ0LmNybDBUBggrBgEFBQcBAQRIMEYwRAYIKwYBBQUHMAKGOGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljcm9zb2Z0Um9vdENlcnQuY3J0MBMGA1UdJQQMMAoGCCsGAQUFBwMIMA0GCSqGSIb3DQEBBQUAA4ICAQAQl4rDXANENt3ptK132855UU0BsS50cVttDBOrzr57j7gu1BKijG1iuFcCy04gE1CZ3XpA4le7r1iaHOEdAYasu3jyi9DsOwHu4r6PCgXIjUji8FMV3U+rkuTnjWrVgMHmlPIGL4UD6ZEqJCJw+/b85HiZLg33B+JwvBhOnY5rCnKVuKE5nGctxVEO6mJcPxaYiyA/4gcaMvnMMUp2MT0rcgvI6nA9/4UKE9/CCmGO8Ne4F+tOi3/FNSteo7/rvH0LQnvUU3Ih7jDKu3hlXFsBFwoUDtLaFJj1PLlmWLMtL+f5hYbMUVbonXCUbKw5TNT2eb+qGHpiKe+imyk0BncaYsk9Hm0fgvALxyy7z0Oz5fnsfbXjpKh0NbhOxXEjEiZ2CzxSjHFaRkMUvLOzsE1nyJ9C/4B5IYCeFTBm6EISXhrIniIh0EPpK+m79EjMLNTYMoBMJipIJF9a6lbvpt6Znco6b72BJ3QGEe52Ib+bgsEnVLaxaj2JoXZhtG6hE6a/qkfwEm/9ijJssv7fUciMI8lmvZ0dhxJkAj0tr1mPuOQh5bWwymO0eFQF1EEuUKyUsKV4q7OglnUa2ZKHE3UiLzKoCG6gW4wlv6DvhMoh1useT8ma7kng9wFlb4kLfchpyOZu6qeXzjEp/w7FW1zYTRuh2Povnj8uVRZryROj/aGCAsQwggItAgEBMIH4oYHQpIHNMIHKMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSUwIwYDVQQLExxNaWNyb3NvZnQgQW1lcmljYSBPcGVyYXRpb25zMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjpBRTJDLUUzMkItMUFGQzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaIjCgEBMAcGBSsOAwIaAxUAfULMrXM2PG7VuXzQLPXWwMtl1gegfTB7pHkwdzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEhMB8GA1UEAxMYTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBMA0GCSqGSIb3DQEBBQUAAgUA4NADGDAiGA8yMDE5MDcxMDE0MjQyNFoYDzIwMTkwNzExMTQyNDI0WjB0MDoGCisGAQQBhFkKBAExLDAqMAoCBQDg0AMYAgEAMAcCAQACAgeFMAcCAQACAhGYMAoCBQDg0VSYAgEAMDYGCisGAQQBhFkKBAIxKDAmMAwGCisGAQQBhFkKAwKgCjAIAgEAAgMHoSChCjAIAgEAAgMBhqAwDQYJKoZIhvcNAQEFBQADgYEAbVF1MXwbzWwZwkh0W2TanvKcewwC7fHjb+AvoKx+klfQgcGaf0JYvpiySyJg4Er4D5ee1F8KgUIYxyTXW5x3WUrrNSUPSe+ZDo+3IKtYrSbdzx2nxLxiN8blRMGOv1ufvqrDICQeFk3YuD3vHaiUKXhld9X/Qu3xw3kuqyXAdkYxggIVMIICEQIBATCBjjB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0ECEzMAAAEeEvRBjilHNsYAAAAAAR4wCQYFKw4DAhoFAKBdMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE5MDcxMDA3NDUwMFowIwYJKoZIhvcNAQkEMRYEFEI7ulB8Rz7tOvMEnS5mT+/19zWDMA0GCSqGSIb3DQEBBQUABIIBAEY8ehw+x5VREW6mjG1GuD6kGkhxFLB1ke8I/LgKKsfo2CT8CBbXh6nLwjFrfNJtYKqBrq90rlN1z2h20uwOVIV5cA7nfw+oNjj8l+Kyef12gS+FcWTIip+jOerLIgwU+7jrFuwsz37srvo+sYJV6UM6Zhpw5gi90fiAxTcgodjJRT3GW4sZii6Xie/+CwC0/FN8rLjs42/w9GWymHzPLRuAw9G9P5HBcKpJZqKh1mvz/tsuWnH0/MOKxMH4bHSG6RsPxPOEkUHGCFvAz8S/Sodj2QfH+XnjSTdiAmnj/mL2hjukf8lg2M0i7c1gHG/mPaGIPNaut8JO9+JN8yOT7YE=</CounterSignature></Object></Signature></doc>
